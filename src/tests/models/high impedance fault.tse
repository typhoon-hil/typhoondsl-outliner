version = 4.2

//
// Saved by sw version: 2022.4 DEV
//

model "high impedance fault" {
    configuration {
        hil_device = "HIL604"
        hil_configuration_id = 3
        simulation_method = bilinear
        simulation_time_step = 2e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        reset_analog_outputs_on_sim_stop = True
        reset_digital_outputs_on_sim_stop = True
        vhil_adio_loopback = False
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "external memory"
        sys_sp_rate_1 = 1e-05
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        ground_scope_core = True
        dss_num_tol = 1e-15
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
        tunable_params = "component defined"
        sp_compiler_type = "C compiler"
        sig_stim = "off"
        export_resource_list = ""
        export_dependency_list = ""
        export_out_file = ""
        export_lock_top_level = True
        export_encrypt_library = True
        export_encrypt_resources = True
    }

    component Subsystem Root {
        component "core/RL Section" "Line 716" {
            inductance_per_l = "branch[\"716\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"716\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 12728, 10672
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 715" {
            inductance_per_l = "branch[\"715\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"715\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 12008, 10672
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 710" {
            inductance_per_l = "branch[\"710\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"710\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10752, 10072
            rotation = down
            scale = -1, 1
            size = 256, 56
        ]

        component "core/RL Section" "Line 707" {
            inductance_per_l = "branch[\"707\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"707\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10088, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 706" {
            inductance_per_l = "branch[\"706\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"706\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 9472, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 705" {
            inductance_per_l = "branch[\"705\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"705\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8696, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 731" {
            inductance_per_l = "branch[\"731\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"731\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 13088, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 730" {
            inductance_per_l = "branch[\"730\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"730\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 12504, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 729" {
            inductance_per_l = "branch[\"729\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"729\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 11816, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 728" {
            inductance_per_l = "branch[\"728\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"728\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 11136, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 727" {
            inductance_per_l = "branch[\"727\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"727\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10616, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 726" {
            inductance_per_l = "branch[\"726\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"726\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10080, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 704" {
            inductance_per_l = "branch[\"704\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"704\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8080, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 703" {
            inductance_per_l = "branch[\"703\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"703\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 7424, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 722" {
            inductance_per_l = "branch[\"722\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"722\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 7464, 7752
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 724" {
            inductance_per_l = "branch[\"724\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"724\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8624, 7752
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 723" {
            inductance_per_l = "branch[\"723\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"723\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8032, 7752
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 725" {
            inductance_per_l = "branch[\"725\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"725\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 9536, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 701" {
            inductance_per_l = "branch[\"701\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"701\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 5776, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 719" {
            inductance_per_l = "branch[\"719\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"719\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 6992, 10072
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 718" {
            inductance_per_l = "branch[\"718\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"718\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 6464, 10072
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 721" {
            inductance_per_l = "branch[\"721\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"721\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8264, 10072
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 720" {
            inductance_per_l = "branch[\"720\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"720\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 7536, 10072
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 709" {
            inductance_per_l = "branch[\"709\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"709\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 11520, 9472
            rotation = right
            size = 256, 56
        ]

        component "core/RL Section" "Line 708" {
            inductance_per_l = "branch[\"708\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"708\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10808, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 700" {
            inductance_per_l = "branch[\"700\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"700\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 5168, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 713" {
            inductance_per_l = "branch[\"713\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"713\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10512, 10672
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 714" {
            inductance_per_l = "branch[\"714\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"714\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 11200, 10672
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 702" {
            inductance_per_l = "branch[\"702\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"702\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 6568, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 711" {
            inductance_per_l = "branch[\"711\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"711\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10040, 10072
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 712" {
            inductance_per_l = "branch[\"712\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"712\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 9792, 10672
            rotation = down
            scale = -1, -1
            size = 256, 56
        ]

        component "core/RL Section" "Line 732" {
            inductance_per_l = "branch[\"732\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"732\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 13688, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 717" {
            inductance_per_l = "branch[\"717\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"717\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 13432, 10672
            rotation = down
            size = 256, 56
        ]

        component "core/Constant Impedance Load" Pg702 {
            SAB = "load[\"702\"][\"S\"]/3"
            SAn = "load[\"702\"][\"S\"]/3"
            SBC = "load[\"702\"][\"S\"]/3"
            SBn = "load[\"702\"][\"S\"]/3"
            SCA = "load[\"702\"][\"S\"]/3"
            SCn = "load[\"702\"][\"S\"]/3"
            Sn_3ph = "load[\"702\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"702\"][\"pf\"]"
            pfB = "load[\"702\"][\"pf\"]"
            pfC = "load[\"702\"][\"pf\"]"
            pf_3ph = "load[\"702\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 6192, 8912
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg703 {
            SAB = "load[\"703\"][\"S\"]/3"
            SAn = "load[\"703\"][\"S\"]/3"
            SBC = "load[\"703\"][\"S\"]/3"
            SBn = "load[\"703\"][\"S\"]/3"
            SCA = "load[\"703\"][\"S\"]/3"
            SCn = "load[\"703\"][\"S\"]/3"
            Sn_3ph = "load[\"703\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"703\"][\"pf\"]"
            pfB = "load[\"703\"][\"pf\"]"
            pfC = "load[\"703\"][\"pf\"]"
            pf_3ph = "load[\"703\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 6936, 8928
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg704 {
            SAB = "load[\"704\"][\"S\"]/3"
            SAn = "load[\"704\"][\"S\"]/3"
            SBC = "load[\"704\"][\"S\"]/3"
            SBn = "load[\"704\"][\"S\"]/3"
            SCA = "load[\"704\"][\"S\"]/3"
            SCn = "load[\"704\"][\"S\"]/3"
            Sn_3ph = "load[\"704\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"704\"][\"pf\"]"
            pfB = "load[\"704\"][\"pf\"]"
            pfC = "load[\"704\"][\"pf\"]"
            pf_3ph = "load[\"704\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 7776, 8928
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg705 {
            SAB = "load[\"705\"][\"S\"]/3"
            SAn = "load[\"705\"][\"S\"]/3"
            SBC = "load[\"705\"][\"S\"]/3"
            SBn = "load[\"705\"][\"S\"]/3"
            SCA = "load[\"705\"][\"S\"]/3"
            SCn = "load[\"705\"][\"S\"]/3"
            Sn_3ph = "load[\"705\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"705\"][\"pf\"]"
            pfB = "load[\"705\"][\"pf\"]"
            pfC = "load[\"705\"][\"pf\"]"
            pf_3ph = "load[\"705\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 8440, 8928
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg706 {
            SAB = "load[\"706\"][\"S\"]/3"
            SAn = "load[\"706\"][\"S\"]/3"
            SBC = "load[\"706\"][\"S\"]/3"
            SBn = "load[\"706\"][\"S\"]/3"
            SCA = "load[\"706\"][\"S\"]/3"
            SCn = "load[\"706\"][\"S\"]/3"
            Sn_3ph = "load[\"706\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"706\"][\"pf\"]"
            pfB = "load[\"706\"][\"pf\"]"
            pfC = "load[\"706\"][\"pf\"]"
            pf_3ph = "load[\"706\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 9080, 8928
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg707 {
            SAB = "load[\"707\"][\"S\"]/3"
            SAn = "load[\"707\"][\"S\"]/3"
            SBC = "load[\"707\"][\"S\"]/3"
            SBn = "load[\"707\"][\"S\"]/3"
            SCA = "load[\"707\"][\"S\"]/3"
            SCn = "load[\"707\"][\"S\"]/3"
            Sn_3ph = "load[\"707\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"707\"][\"pf\"]"
            pfB = "load[\"707\"][\"pf\"]"
            pfC = "load[\"707\"][\"pf\"]"
            pf_3ph = "load[\"707\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 9832, 8928
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg708 {
            SAB = "load[\"708\"][\"S\"]/3"
            SAn = "load[\"708\"][\"S\"]/3"
            SBC = "load[\"708\"][\"S\"]/3"
            SBn = "load[\"708\"][\"S\"]/3"
            SCA = "load[\"708\"][\"S\"]/3"
            SCn = "load[\"708\"][\"S\"]/3"
            Sn_3ph = "load[\"708\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"708\"][\"pf\"]"
            pfB = "load[\"708\"][\"pf\"]"
            pfC = "load[\"708\"][\"pf\"]"
            pf_3ph = "load[\"708\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10464, 8928
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg709 {
            SAB = "load[\"709\"][\"S\"]/3"
            SAn = "load[\"709\"][\"S\"]/3"
            SBC = "load[\"709\"][\"S\"]/3"
            SBn = "load[\"709\"][\"S\"]/3"
            SCA = "load[\"709\"][\"S\"]/3"
            SCn = "load[\"709\"][\"S\"]/3"
            Sn_3ph = "load[\"709\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"709\"][\"pf\"]"
            pfB = "load[\"709\"][\"pf\"]"
            pfC = "load[\"709\"][\"pf\"]"
            pf_3ph = "load[\"709\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 11184, 8928
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg710 {
            SAB = "load[\"710\"][\"S\"]/3"
            SAn = "load[\"710\"][\"S\"]/3"
            SBC = "load[\"710\"][\"S\"]/3"
            SBn = "load[\"710\"][\"S\"]/3"
            SCA = "load[\"710\"][\"S\"]/3"
            SCn = "load[\"710\"][\"S\"]/3"
            Sn_3ph = "load[\"710\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"710\"][\"pf\"]"
            pfB = "load[\"710\"][\"pf\"]"
            pfC = "load[\"710\"][\"pf\"]"
            pf_3ph = "load[\"710\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10960, 10176
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg711 {
            SAB = "load[\"711\"][\"S\"]/3"
            SAn = "load[\"711\"][\"S\"]/3"
            SBC = "load[\"711\"][\"S\"]/3"
            SBn = "load[\"711\"][\"S\"]/3"
            SCA = "load[\"711\"][\"S\"]/3"
            SCn = "load[\"711\"][\"S\"]/3"
            Sn_3ph = "load[\"711\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"711\"][\"pf\"]"
            pfB = "load[\"711\"][\"pf\"]"
            pfC = "load[\"711\"][\"pf\"]"
            pf_3ph = "load[\"711\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10368, 10176
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg712 {
            SAB = "load[\"712\"][\"S\"]/3"
            SAn = "load[\"712\"][\"S\"]/3"
            SBC = "load[\"712\"][\"S\"]/3"
            SBn = "load[\"712\"][\"S\"]/3"
            SCA = "load[\"712\"][\"S\"]/3"
            SCn = "load[\"712\"][\"S\"]/3"
            Sn_3ph = "load[\"712\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"712\"][\"pf\"]"
            pfB = "load[\"712\"][\"pf\"]"
            pfC = "load[\"712\"][\"pf\"]"
            pf_3ph = "load[\"712\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 9688, 10176
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg713 {
            SAB = "load[\"713\"][\"S\"]/3"
            SAn = "load[\"713\"][\"S\"]/3"
            SBC = "load[\"713\"][\"S\"]/3"
            SBn = "load[\"713\"][\"S\"]/3"
            SCA = "load[\"713\"][\"S\"]/3"
            SCn = "load[\"713\"][\"S\"]/3"
            Sn_3ph = "load[\"713\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"713\"][\"pf\"]"
            pfB = "load[\"713\"][\"pf\"]"
            pfC = "load[\"713\"][\"pf\"]"
            pf_3ph = "load[\"713\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10176, 10784
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg714 {
            SAB = "load[\"714\"][\"S\"]/3"
            SAn = "load[\"714\"][\"S\"]/3"
            SBC = "load[\"714\"][\"S\"]/3"
            SBn = "load[\"714\"][\"S\"]/3"
            SCA = "load[\"714\"][\"S\"]/3"
            SCn = "load[\"714\"][\"S\"]/3"
            Sn_3ph = "load[\"714\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"714\"][\"pf\"]"
            pfB = "load[\"714\"][\"pf\"]"
            pfC = "load[\"714\"][\"pf\"]"
            pf_3ph = "load[\"714\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10960, 10784
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg715 {
            SAB = "load[\"715\"][\"S\"]/3"
            SAn = "load[\"715\"][\"S\"]/3"
            SBC = "load[\"715\"][\"S\"]/3"
            SBn = "load[\"715\"][\"S\"]/3"
            SCA = "load[\"715\"][\"S\"]/3"
            SCn = "load[\"715\"][\"S\"]/3"
            Sn_3ph = "load[\"715\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"715\"][\"pf\"]"
            pfB = "load[\"715\"][\"pf\"]"
            pfC = "load[\"715\"][\"pf\"]"
            pf_3ph = "load[\"715\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 11600, 10784
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg716 {
            SAB = "load[\"716\"][\"S\"]/3"
            SAn = "load[\"716\"][\"S\"]/3"
            SBC = "load[\"716\"][\"S\"]/3"
            SBn = "load[\"716\"][\"S\"]/3"
            SCA = "load[\"716\"][\"S\"]/3"
            SCn = "load[\"716\"][\"S\"]/3"
            Sn_3ph = "load[\"716\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"716\"][\"pf\"]"
            pfB = "load[\"716\"][\"pf\"]"
            pfC = "load[\"716\"][\"pf\"]"
            pf_3ph = "load[\"716\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 12368, 10784
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg717 {
            SAB = "load[\"717\"][\"S\"]/3"
            SAn = "load[\"717\"][\"S\"]/3"
            SBC = "load[\"717\"][\"S\"]/3"
            SBn = "load[\"717\"][\"S\"]/3"
            SCA = "load[\"717\"][\"S\"]/3"
            SCn = "load[\"717\"][\"S\"]/3"
            Sn_3ph = "load[\"717\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"717\"][\"pf\"]"
            pfB = "load[\"717\"][\"pf\"]"
            pfC = "load[\"717\"][\"pf\"]"
            pf_3ph = "load[\"717\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 13096, 10784
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg718 {
            SAB = "load[\"718\"][\"S\"]/3"
            SAn = "load[\"718\"][\"S\"]/3"
            SBC = "load[\"718\"][\"S\"]/3"
            SBn = "load[\"718\"][\"S\"]/3"
            SCA = "load[\"718\"][\"S\"]/3"
            SCn = "load[\"718\"][\"S\"]/3"
            Sn_3ph = "load[\"718\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"718\"][\"pf\"]"
            pfB = "load[\"718\"][\"pf\"]"
            pfC = "load[\"718\"][\"pf\"]"
            pf_3ph = "load[\"718\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 13800, 10784
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg719 {
            SAB = "load[\"719\"][\"S\"]/3"
            SAn = "load[\"719\"][\"S\"]/3"
            SBC = "load[\"719\"][\"S\"]/3"
            SBn = "load[\"719\"][\"S\"]/3"
            SCA = "load[\"719\"][\"S\"]/3"
            SCn = "load[\"719\"][\"S\"]/3"
            Sn_3ph = "load[\"719\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"719\"][\"pf\"]"
            pfB = "load[\"719\"][\"pf\"]"
            pfC = "load[\"719\"][\"pf\"]"
            pf_3ph = "load[\"719\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 6792, 10184
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg720 {
            SAB = "load[\"720\"][\"S\"]/3"
            SAn = "load[\"720\"][\"S\"]/3"
            SBC = "load[\"720\"][\"S\"]/3"
            SBn = "load[\"720\"][\"S\"]/3"
            SCA = "load[\"720\"][\"S\"]/3"
            SCn = "load[\"720\"][\"S\"]/3"
            Sn_3ph = "load[\"720\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"720\"][\"pf\"]"
            pfB = "load[\"720\"][\"pf\"]"
            pfC = "load[\"720\"][\"pf\"]"
            pf_3ph = "load[\"720\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 7328, 10184
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg721 {
            SAB = "load[\"721\"][\"S\"]/3"
            SAn = "load[\"721\"][\"S\"]/3"
            SBC = "load[\"721\"][\"S\"]/3"
            SBn = "load[\"721\"][\"S\"]/3"
            SCA = "load[\"721\"][\"S\"]/3"
            SCn = "load[\"721\"][\"S\"]/3"
            Sn_3ph = "load[\"721\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"721\"][\"pf\"]"
            pfB = "load[\"721\"][\"pf\"]"
            pfC = "load[\"721\"][\"pf\"]"
            pf_3ph = "load[\"721\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 7888, 10184
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg722 {
            SAB = "load[\"722\"][\"S\"]/3"
            SAn = "load[\"722\"][\"S\"]/3"
            SBC = "load[\"722\"][\"S\"]/3"
            SBn = "load[\"722\"][\"S\"]/3"
            SCA = "load[\"722\"][\"S\"]/3"
            SCn = "load[\"722\"][\"S\"]/3"
            Sn_3ph = "load[\"722\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"722\"][\"pf\"]"
            pfB = "load[\"722\"][\"pf\"]"
            pfC = "load[\"722\"][\"pf\"]"
            pf_3ph = "load[\"722\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 8632, 10184
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg723 {
            SAB = "load[\"723\"][\"S\"]/3"
            SAn = "load[\"723\"][\"S\"]/3"
            SBC = "load[\"723\"][\"S\"]/3"
            SBn = "load[\"723\"][\"S\"]/3"
            SCA = "load[\"723\"][\"S\"]/3"
            SCn = "load[\"723\"][\"S\"]/3"
            Sn_3ph = "load[\"723\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"723\"][\"pf\"]"
            pfB = "load[\"723\"][\"pf\"]"
            pfC = "load[\"723\"][\"pf\"]"
            pf_3ph = "load[\"723\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 7808, 7848
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg724 {
            SAB = "load[\"724\"][\"S\"]/3"
            SAn = "load[\"724\"][\"S\"]/3"
            SBC = "load[\"724\"][\"S\"]/3"
            SBn = "load[\"724\"][\"S\"]/3"
            SCA = "load[\"724\"][\"S\"]/3"
            SCn = "load[\"724\"][\"S\"]/3"
            Sn_3ph = "load[\"724\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"724\"][\"pf\"]"
            pfB = "load[\"724\"][\"pf\"]"
            pfC = "load[\"724\"][\"pf\"]"
            pf_3ph = "load[\"724\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 8392, 7848
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg725 {
            SAB = "load[\"725\"][\"S\"]/3"
            SAn = "load[\"725\"][\"S\"]/3"
            SBC = "load[\"725\"][\"S\"]/3"
            SBn = "load[\"725\"][\"S\"]/3"
            SCA = "load[\"725\"][\"S\"]/3"
            SCn = "load[\"725\"][\"S\"]/3"
            Sn_3ph = "load[\"725\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"725\"][\"pf\"]"
            pfB = "load[\"725\"][\"pf\"]"
            pfC = "load[\"725\"][\"pf\"]"
            pf_3ph = "load[\"725\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 8976, 7848
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg726 {
            SAB = "load[\"726\"][\"S\"]/3"
            SAn = "load[\"726\"][\"S\"]/3"
            SBC = "load[\"726\"][\"S\"]/3"
            SBn = "load[\"726\"][\"S\"]/3"
            SCA = "load[\"726\"][\"S\"]/3"
            SCn = "load[\"726\"][\"S\"]/3"
            Sn_3ph = "load[\"726\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"726\"][\"pf\"]"
            pfB = "load[\"726\"][\"pf\"]"
            pfC = "load[\"726\"][\"pf\"]"
            pf_3ph = "load[\"726\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 9880, 8272
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg727 {
            SAB = "load[\"727\"][\"S\"]/3"
            SAn = "load[\"727\"][\"S\"]/3"
            SBC = "load[\"727\"][\"S\"]/3"
            SBn = "load[\"727\"][\"S\"]/3"
            SCA = "load[\"727\"][\"S\"]/3"
            SCn = "load[\"727\"][\"S\"]/3"
            Sn_3ph = "load[\"727\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"727\"][\"pf\"]"
            pfB = "load[\"727\"][\"pf\"]"
            pfC = "load[\"727\"][\"pf\"]"
            pf_3ph = "load[\"727\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10408, 8272
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg728 {
            SAB = "load[\"728\"][\"S\"]/3"
            SAn = "load[\"728\"][\"S\"]/3"
            SBC = "load[\"728\"][\"S\"]/3"
            SBn = "load[\"728\"][\"S\"]/3"
            SCA = "load[\"728\"][\"S\"]/3"
            SCn = "load[\"728\"][\"S\"]/3"
            Sn_3ph = "load[\"728\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"728\"][\"pf\"]"
            pfB = "load[\"728\"][\"pf\"]"
            pfC = "load[\"728\"][\"pf\"]"
            pf_3ph = "load[\"728\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10928, 8272
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg729 {
            SAB = "load[\"729\"][\"S\"]/3"
            SAn = "load[\"729\"][\"S\"]/3"
            SBC = "load[\"729\"][\"S\"]/3"
            SBn = "load[\"729\"][\"S\"]/3"
            SCA = "load[\"729\"][\"S\"]/3"
            SCn = "load[\"729\"][\"S\"]/3"
            Sn_3ph = "load[\"729\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"729\"][\"pf\"]"
            pfB = "load[\"729\"][\"pf\"]"
            pfC = "load[\"729\"][\"pf\"]"
            pf_3ph = "load[\"729\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 11496, 8264
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg730 {
            SAB = "load[\"730\"][\"S\"]/3"
            SAn = "load[\"730\"][\"S\"]/3"
            SBC = "load[\"730\"][\"S\"]/3"
            SBn = "load[\"730\"][\"S\"]/3"
            SCA = "load[\"730\"][\"S\"]/3"
            SCn = "load[\"730\"][\"S\"]/3"
            Sn_3ph = "load[\"730\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"730\"][\"pf\"]"
            pfB = "load[\"730\"][\"pf\"]"
            pfC = "load[\"730\"][\"pf\"]"
            pf_3ph = "load[\"730\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 12192, 8264
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg731 {
            SAB = "load[\"731\"][\"S\"]/3"
            SAn = "load[\"731\"][\"S\"]/3"
            SBC = "load[\"731\"][\"S\"]/3"
            SBn = "load[\"731\"][\"S\"]/3"
            SCA = "load[\"731\"][\"S\"]/3"
            SCn = "load[\"731\"][\"S\"]/3"
            Sn_3ph = "load[\"731\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"731\"][\"pf\"]"
            pfB = "load[\"731\"][\"pf\"]"
            pfC = "load[\"731\"][\"pf\"]"
            pf_3ph = "load[\"731\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 12848, 8264
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg732 {
            SAB = "load[\"732\"][\"S\"]/3"
            SAn = "load[\"732\"][\"S\"]/3"
            SBC = "load[\"732\"][\"S\"]/3"
            SBn = "load[\"732\"][\"S\"]/3"
            SCA = "load[\"732\"][\"S\"]/3"
            SCn = "load[\"732\"][\"S\"]/3"
            Sn_3ph = "load[\"732\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"732\"][\"pf\"]"
            pfB = "load[\"732\"][\"pf\"]"
            pfC = "load[\"732\"][\"pf\"]"
            pf_3ph = "load[\"732\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 13440, 8264
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Constant Impedance Load" Pg733 {
            SAB = "load[\"733\"][\"S\"]/3"
            SAn = "load[\"733\"][\"S\"]/3"
            SBC = "load[\"733\"][\"S\"]/3"
            SBn = "load[\"733\"][\"S\"]/3"
            SCA = "load[\"733\"][\"S\"]/3"
            SCn = "load[\"733\"][\"S\"]/3"
            Sn_3ph = "load[\"733\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"733\"][\"pf\"]"
            pfB = "load[\"733\"][\"pf\"]"
            pfC = "load[\"733\"][\"pf\"]"
            pf_3ph = "load[\"733\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 14040, 8264
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Single Pole Single Throw Contactor" SwHIF718 {
        }
        [
            position = 13912, 10656
            size = 64, 32
        ]

        component "core/Current RMS" iHIF718rms {
            frequency = "f"
            op_mode = "Fixed frequency"
        }
        [
            position = 14032, 10656
            size = 64, 32
        ]

        component "core/Current RMS" iHIF730rms {
            frequency = "f"
            op_mode = "Fixed frequency"
        }
        [
            position = 12344, 8208
            size = 64, 32
        ]

        component "core/Single Pole Single Throw Contactor" SwHIF725 {
        }
        [
            position = 9088, 7736
            size = 64, 32
        ]

        component "core/Current RMS" iHIF725rms {
            frequency = "f"
            op_mode = "Fixed frequency"
        }
        [
            position = 9192, 7736
            size = 64, 32
        ]

        component Subsystem SE {
            layout = dynamic
            component "core/Triple Pole Single Throw Contactor" "Feeder sw" {
                ctrl_src = "Model"
                execution_rate = "t_exec"
            }
            [
                position = 8344, 8152
                size = 64, 256
            ]

            component "core/Voltage Measurement" Vref {
                addr = "51"
                execution_rate = "t_exec"
                sig_output = "True"
            }
            [
                position = 7672, 7976
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Three Phase Voltage Source" Vs {
                init_frequency = "f"
                init_rms_value = "Vln"
            }
            [
                position = 7680, 8152
                size = 62, 256
            ]

            component gen_rms_value "RMS value1" {
                frequency = "60"
            }
            [
                position = 7720, 7896
                hide_name = True
            ]

            component gen_probe Vref_rms {
                signal_type = "voltage"
            }
            [
                position = 7808, 7896
            ]

            component "core/Three-phase Meter" 3ph_Meter701 {
                I_rms = "True"
                Ts = "t_exec"
                VLn_rms = "True"
                enable_probes = "False"
                freq = "True"
                n_cycles = "5"
                remove_snubber = "True"
            }
            [
                position = 8192, 8152
                hide_name = True
                size = 48, 96
            ]

            component Subsystem MeterSE {
                layout = dynamic
                component gen_probe Vb_ph {
                    addr = "17999"
                }
                [
                    position = 8912, 7912
                ]

                component "core/Meter Split" "Meter Split2" {
                    ia = "True"
                    ia_rms = "True"
                    ib = "True"
                    ib_rms = "True"
                    ic = "True"
                    ic_rms = "True"
                    van = "False"
                    vbn = "False"
                    vcn = "False"
                }
                [
                    position = 8016, 8056
                    size = 128, 464
                ]

                component gen_probe IC_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8256
                ]

                component "core/Meter Split" "Meter Split1" {
                    van_rms = "True"
                    vbn_rms = "True"
                    vcn_rms = "True"
                }
                [
                    position = 7632, 8056
                    size = 128, 464
                ]

                component gen_probe Ia_ph {
                    addr = "17999"
                }
                [
                    position = 8912, 8024
                ]

                component gen_probe Va_ph {
                    addr = "17999"
                }
                [
                    position = 8912, 7856
                ]

                component gen_probe VCn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8256
                ]

                component gen_probe IA_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8096
                ]

                component gen_probe Vc_ph {
                    addr = "17999"
                }
                [
                    position = 8912, 7968
                ]

                component gen_probe Ib_ph {
                    addr = "17999"
                }
                [
                    position = 8912, 8080
                ]

                component gen_probe VAn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8096
                ]

                component gen_probe IB_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8176
                ]

                component gen_probe VBn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8176
                ]

                component gen_probe Ic_ph {
                    addr = "17999"
                }
                [
                    position = 8912, 8136
                ]

                component gen_c_function phase_diff_6_phase {
                    global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                    init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                    input_terminals = "real ref;real in;"
                    input_terminals_dimensions = "1;6"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                    output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                    output_terminals = "real phase_diff;"
                    output_terminals_dimensions = "6"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'phase_diff\', True)]"
                    update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
                }
                [
                    position = 8624, 8232
                    size = 96, 128
                ]

                component gen_bus_join "Bus Join" {
                    inputs = "6"
                }
                [
                    position = 8432, 8096
                    rotation = right
                    hide_name = True
                ]

                component gen_bus_split "Bus Split" {
                    outputs = "6"
                }
                [
                    position = 8776, 8184
                    rotation = left
                    hide_name = True
                ]

                port meter_data {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8016
                ]

                port ref {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8072
                ]

                tag Vb_goto {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7936
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from6 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 7904
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from11 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 7976
                    hide_name = True
                    size = 60, 20
                ]

                tag Vc_goto {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Va_goto {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7856
                    hide_name = True
                    size = 60, 20
                ]

                tag Ib_goto {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7936
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from10 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 8000
                    hide_name = True
                    size = 60, 20
                ]

                tag From1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 8056
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from7 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 7928
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from8 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 7952
                    hide_name = True
                    size = 60, 20
                ]

                tag From2 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 8056
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8544, 8112
                    rotation = right
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 8024
                    hide_name = True
                    size = 60, 20
                ]

                tag Ia_goto {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7856
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto2 {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8072
                    hide_name = True
                    size = 60, 20
                ]

                comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8512, 7808
                ]

                connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
                connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
                connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
                connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
                connect From2 "Meter Split2.Input" as Connection489
                connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
                connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
                connect meter_data Ic_goto1 as Connection573
                connect From1 "Meter Split1.Input" as Connection572
                connect Ic_goto2 ref as Connection574
                connect "Meter Split1.VAn" Va_goto as Connection575
                connect "Meter Split1.VCn" Vc_goto as Connection576
                connect "Meter Split1.VBn" Vb_goto as Connection577
                connect "Meter Split2.IC" Ic_goto as Connection578
                connect Ia_goto "Meter Split2.IA" as Connection579
                connect "Meter Split2.IB" Ib_goto as Connection580
                connect "Bus Join.out" phase_diff_6_phase.in as Connection11
                connect V_REF_from phase_diff_6_phase.ref as Connection581
                connect V_REF_from6 "Bus Join.in" as Connection582
                connect V_REF_from7 "Bus Join.in1" as Connection583
                connect V_REF_from8 "Bus Join.in2" as Connection584
                connect V_REF_from11 "Bus Join.in3" as Connection585
                connect V_REF_from10 "Bus Join.in4" as Connection586
                connect V_REF_from9 "Bus Join.in5" as Connection587
                connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
                connect "Bus Split.out" Va_ph.in as Connection589
                connect "Bus Split.out1" Vb_ph.in as Connection590
                connect "Bus Split.out2" Vc_ph.in as Connection591
                connect "Bus Split.out3" Ia_ph.in as Connection592
                connect "Bus Split.out4" Ib_ph.in as Connection593
                connect "Bus Split.out5" Ic_ph.in as Connection594
            }
            [
                position = 8776, 8240
                size = 104, 80
            ]

            component "core/Voltage Measurement" Vab {
                execution_rate = "t_exec"
                sig_output = "True"
            }
            [
                position = 7784, 8104
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vbc {
                execution_rate = "t_exec"
                sig_output = "True"
            }
            [
                position = 7784, 8200
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vca {
                execution_rate = "t_exec"
                sig_output = "True"
            }
            [
                position = 7952, 8160
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            component gen_rms_value "RMS value2" {
                execution_rate = "t_exec"
                frequency = "60"
            }
            [
                position = 7104, 8104
                hide_name = True
            ]

            component gen_probe VAB_RMS {
                execution_rate = "t_exec"
            }
            [
                position = 7192, 8104
            ]

            component gen_rms_value "RMS value3" {
                execution_rate = "t_exec"
                frequency = "60"
            }
            [
                position = 7104, 8168
                hide_name = True
            ]

            component gen_probe VBC_RMS {
                execution_rate = "t_exec"
            }
            [
                position = 7192, 8168
            ]

            component gen_rms_value "RMS value4" {
                execution_rate = "t_exec"
                frequency = "60"
            }
            [
                position = 7104, 8232
                hide_name = True
            ]

            component gen_probe VCA_RMS {
                execution_rate = "t_exec"
            }
            [
                position = 7192, 8232
            ]

            component "core/Current Measurement" In {
                execution_rate = "t_exec"
                sig_output = "True"
            }
            [
                position = 7512, 8152
                scale = -1, 1
                size = 64, 32
            ]

            component gen_rms_value "RMS value5" {
                execution_rate = "t_exec"
                frequency = "60"
            }
            [
                position = 7512, 8072
                rotation = left
                hide_name = True
            ]

            component gen_probe In_RMS {
                execution_rate = "t_exec"
                signal_type = "current"
            }
            [
                position = 7512, 7992
                rotation = left
            ]

            component "core/(51) AC Inverse Time Overcurrent" ANSI51 {
                In = "193.27"
                TOC_curve_type = "C2 - Very Inverse (IEC)"
                TOC_thresh = "3.30186"
                TOC_timeDial = "0.1"
                execution_rate = "t_exec"
            }
            [
                position = 8648, 7880
                size = 144, 160
            ]

            component src_scada_input TripMem {
                addr = "1426063424"
                execution_rate = "t_exec"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 8488, 7944
            ]

            component Subsystem Trip {
                layout = dynamic
                component gen_logic_op "Logical operator1" {
                }
                [
                    position = 8008, 8088
                ]

                component src_scada_input "feeder ON" {
                    addr = "1426063424"
                    execution_rate = "t_exec"
                    format = "int"
                    max = "1"
                    min = "0"
                    signal_type = "int"
                    unit = ""
                }
                [
                    position = 7928, 8112
                ]

                component gen_logic_op "Logical operator2" {
                    operator = "NOT"
                }
                [
                    position = 7920, 8032
                ]

                port Trip {
                    label = "Trip"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8096, 8088
                ]

                tag From736 {
                    value = "Trip51Mem"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7984
                    hide_name = True
                    size = 60, 20
                ]

                connect "feeder ON.out" "Logical operator1.in1" as Connection7558
                connect "Logical operator1.in" "Logical operator2.out" as Connection7563
                connect From736 "Logical operator2.in" as Connection7564
                connect Trip "Logical operator1.out" as Connection7565
            }
            [
                position = 8344, 7920
                size = 88, 72
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8544, 8088
                scale = -1, 1
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8544, 8152
                scale = -1, 1
            ]

            port C2 {
                position = right:2
                kind = pe
            }
            [
                position = 8544, 8216
                scale = -1, 1
            ]

            port Out1 {
                label = "Ref"
                position = bottom:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 7856, 7944
            ]

            port GND {
                label = "GND"
                position = bottom:2
                kind = pe
            }
            [
                position = 7416, 8152
            ]

            tag Goto701 {
                value = "outputSE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8040
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From701 {
                value = "outputSE"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8656, 8224
                hide_name = True
                size = 60, 20
            ]

            tag From734 {
                value = "V_REFG"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 8656, 8256
                hide_name = True
                size = 60, 20
            ]

            tag Goto702 {
                value = "VabSE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7856, 8104
                hide_name = True
                size = 60, 20
            ]

            tag Goto703 {
                value = "VbcSE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7856, 8200
                hide_name = True
                size = 60, 20
            ]

            tag Goto704 {
                value = "VcaSE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8032, 8176
                hide_name = True
                size = 60, 20
            ]

            tag From735 {
                value = "VabSE"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7008, 8104
                hide_name = True
                size = 60, 20
            ]

            tag From736 {
                value = "VbcSE"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7008, 8168
                hide_name = True
                size = 60, 20
            ]

            tag From737 {
                value = "VcaSE"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7008, 8232
                hide_name = True
                size = 60, 20
            ]

            tag Goto705 {
                value = "Trip51"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8784, 7816
                hide_name = True
                size = 60, 20
            ]

            tag From738 {
                value = "outputSE"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8480, 7816
                hide_name = True
                size = 60, 20
            ]

            tag Goto706 {
                value = "Trip51Mem"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8784, 7944
                hide_name = True
                size = 60, 20
            ]

            tag Goto707 {
                value = "In"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 7448, 8064
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            junction Junction738 sp
            [
                position = 7672, 7944
            ]

            junction Junction741 pe
            [
                position = 7600, 8160
            ]

            junction Junction742 pe
            [
                position = 7784, 8056
            ]

            junction Junction743 pe
            [
                position = 7784, 8152
            ]

            junction Junction744 pe
            [
                position = 7784, 8152
            ]

            junction Junction745 pe
            [
                position = 7784, 8248
            ]

            junction Junction746 pe
            [
                position = 7784, 8056
            ]

            junction Junction747 pe
            [
                position = 7952, 8056
            ]

            junction Junction748 pe
            [
                position = 7952, 8248
            ]

            junction Junction749 pe
            [
                position = 7600, 8160
            ]

            junction Junction750 sp
            [
                position = 7512, 8120
            ]

            comment Comment55 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE REFERENCE </p></body></html> ENDCOMMENT 
            [
                position = 7632, 7840
            ]

            connect B2 "Feeder sw.b_out" as Connection7526
            connect A2 "Feeder sw.a_out" as Connection7527
            connect C2 "Feeder sw.c_out" as Connection7528
            connect "RMS value1.in" Junction738 as Connection7530
            connect Junction738 Vref.out as Connection7531
            [
                breakpoints = 7672, 7936
            ]
            connect Out1 Junction738 as Connection7532
            connect Vref_rms.in "RMS value1.out" as Connection7525
            connect Goto701 3ph_Meter701.Out as Connection6821
            connect 3ph_Meter701.B- "Feeder sw.b_in" as Connection7543
            connect 3ph_Meter701.A- "Feeder sw.a_in" as Connection7544
            connect 3ph_Meter701.C- "Feeder sw.c_in" as Connection7545
            connect Vref.n_node Junction741 as Connection7546
            connect 3ph_Meter701.GND Junction741 as Connection7548
            [
                breakpoints = 7896, 8312; 7600, 8312
            ]
            connect From701 MeterSE.meter_data as Connection4196
            connect From734 MeterSE.ref as Connection6829
            connect Junction742 Vs.a_node as Connection7551
            connect 3ph_Meter701.B+ Junction743 as Connection7553
            connect Junction743 Vs.b_node as Connection7554
            connect Vab.n_node Junction744 as Connection7556
            connect Junction744 Junction743 as Connection7557
            connect Vbc.p_node Junction744 as Connection7558
            connect Junction745 Vs.c_node as Connection7560
            connect Vbc.n_node Junction745 as Connection7561
            connect Vab.p_node Junction746 as Connection7562
            connect Junction746 Junction742 as Connection7563
            connect Vref.p_node Junction746 as Connection7564
            connect Goto702 Vab.out as Connection7565
            connect Goto703 Vbc.out as Connection7566
            connect 3ph_Meter701.A+ Junction747 as Connection7567
            [
                breakpoints = 8120, 8128; 8120, 8056
            ]
            connect Junction747 Junction742 as Connection7568
            connect Vca.n_node Junction747 as Connection7569
            connect 3ph_Meter701.C+ Junction748 as Connection7570
            [
                breakpoints = 8120, 8176; 8120, 8248
            ]
            connect Junction748 Junction745 as Connection7571
            connect Vca.p_node Junction748 as Connection7572
            connect Goto704 Vca.out as Connection7573
            connect VAB_RMS.in "RMS value2.out" as Connection7574
            connect From735 "RMS value2.in" as Connection7575
            connect VBC_RMS.in "RMS value3.out" as Connection7576
            connect From736 "RMS value3.in" as Connection7577
            connect VCA_RMS.in "RMS value4.out" as Connection7578
            connect From737 "RMS value4.in" as Connection7579
            connect Junction741 Junction749 as Connection7581
            connect Junction749 Vs.n_node as Connection7582
            [
                breakpoints = 7600, 8160; 7600, 8152; 7600, 8152
            ]
            connect In.p_node Junction749 as Connection7583
            connect In.n_node GND as Connection7584
            connect In_RMS.in "RMS value5.out" as Connection7586
            connect Goto705 ANSI51.time_trip as Connection7587
            connect From738 ANSI51.Meas_in as Connection7588
            connect TripMem.out ANSI51.Mem_en_rst as Connection7589
            connect Goto706 ANSI51.Mem as Connection7590
            connect Trip.Trip "Feeder sw.ctrl_in" as Connection7591
            connect "RMS value5.in" Junction750 as Connection7592
            connect Junction750 In.out as Connection7593
            connect Goto707 Junction750 as Connection7594
        }
        [
            position = 4928, 8816
            size = 80, 96
        ]

        component Subsystem BUS_701 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7768, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7768, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7768, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect C2 C1 as Connection1
            connect B1 B2 as Connection2
            connect A2 A1 as Connection3
        }
        [
            position = 5488, 8816
            size = 88, 80
        ]

        component Subsystem BUS_702 {
            layout = dynamic
            component "core/Three-phase Meter" 3ph_Meter702 {
                I_rms = "True"
                Ts = "t_exec"
                VLn_rms = "True"
                enable_probes = "False"
                freq = "True"
                n_cycles = "5"
                remove_snubber = "True"
            }
            [
                position = 7888, 8128
                hide_name = True
                size = 48, 96
            ]

            component Subsystem Meter702 {
                layout = dynamic
                component "core/Meter Split" "Meter Split2" {
                    ia = "True"
                    ia_rms = "True"
                    ib = "True"
                    ib_rms = "True"
                    ic = "True"
                    ic_rms = "True"
                    van = "False"
                    vbn = "False"
                    vcn = "False"
                }
                [
                    position = 8016, 8056
                    size = 128, 464
                ]

                component gen_probe IC_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8256
                ]

                component "core/Meter Split" "Meter Split1" {
                    van_rms = "True"
                    vbn_rms = "True"
                    vcn_rms = "True"
                }
                [
                    position = 7632, 8056
                    size = 128, 464
                ]

                component gen_probe VCn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8256
                ]

                component gen_probe IA_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8096
                ]

                component gen_probe VAn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8096
                ]

                component gen_probe IB_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8176
                ]

                component gen_probe VBn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8176
                ]

                component gen_probe Vb_ph {
                    addr = "17999"
                }
                [
                    position = 8928, 7888
                ]

                component gen_probe Ia_ph {
                    addr = "17999"
                }
                [
                    position = 8928, 8000
                ]

                component gen_probe Va_ph {
                    addr = "17999"
                }
                [
                    position = 8928, 7832
                ]

                component gen_probe Vc_ph {
                    addr = "17999"
                }
                [
                    position = 8928, 7944
                ]

                component gen_probe Ib_ph {
                    addr = "17999"
                }
                [
                    position = 8928, 8056
                ]

                component gen_probe Ic_ph {
                    addr = "17999"
                }
                [
                    position = 8928, 8112
                ]

                component gen_c_function phase_diff_6_phase {
                    global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                    init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                    input_terminals = "real ref;real in;"
                    input_terminals_dimensions = "1;6"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                    output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                    output_terminals = "real phase_diff;"
                    output_terminals_dimensions = "6"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'phase_diff\', True)]"
                    update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
                }
                [
                    position = 8640, 8208
                    size = 96, 128
                ]

                component gen_bus_join "Bus Join" {
                    inputs = "6"
                }
                [
                    position = 8448, 8072
                    rotation = right
                    hide_name = True
                ]

                component gen_bus_split "Bus Split" {
                    outputs = "6"
                }
                [
                    position = 8792, 8160
                    rotation = left
                    hide_name = True
                ]

                port meter_data {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8016
                ]

                port ref {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8072
                ]

                tag Vb_goto {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7936
                    hide_name = True
                ]

                tag Vc_goto {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 8016
                    hide_name = True
                ]

                tag Va_goto {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7856
                    hide_name = True
                ]

                tag Ib_goto {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7936
                    hide_name = True
                ]

                tag From1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 8056
                    hide_name = True
                ]

                tag From2 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 8056
                    hide_name = True
                ]

                tag Ia_goto {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7856
                    hide_name = True
                ]

                tag Ic_goto1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8016
                    hide_name = True
                ]

                tag Ic_goto {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8016
                    hide_name = True
                ]

                tag Ic_goto2 {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8072
                    hide_name = True
                ]

                tag V_REF_from6 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8328, 7880
                    hide_name = True
                ]

                tag V_REF_from11 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8328, 7952
                    hide_name = True
                ]

                tag V_REF_from10 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8328, 7976
                    hide_name = True
                ]

                tag V_REF_from7 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8328, 7904
                    hide_name = True
                ]

                tag V_REF_from8 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8328, 7928
                    hide_name = True
                ]

                tag V_REF_from {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8560, 8088
                    rotation = right
                    hide_name = True
                ]

                tag V_REF_from9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8328, 8000
                    hide_name = True
                ]

                comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8528, 7784
                ]

                connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
                connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
                connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
                connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
                connect From2 "Meter Split2.Input" as Connection489
                connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
                connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
                connect meter_data Ic_goto1 as Connection573
                connect From1 "Meter Split1.Input" as Connection572
                connect Ic_goto2 ref as Connection574
                connect "Meter Split1.VAn" Va_goto as Connection575
                connect "Meter Split1.VCn" Vc_goto as Connection576
                connect "Meter Split1.VBn" Vb_goto as Connection577
                connect "Meter Split2.IC" Ic_goto as Connection578
                connect Ia_goto "Meter Split2.IA" as Connection579
                connect "Meter Split2.IB" Ib_goto as Connection580
                connect "Bus Join.out" phase_diff_6_phase.in as Connection11
                connect V_REF_from phase_diff_6_phase.ref as Connection581
                connect V_REF_from6 "Bus Join.in" as Connection582
                connect V_REF_from7 "Bus Join.in1" as Connection583
                connect V_REF_from8 "Bus Join.in2" as Connection584
                connect V_REF_from11 "Bus Join.in3" as Connection585
                connect V_REF_from10 "Bus Join.in4" as Connection586
                connect V_REF_from9 "Bus Join.in5" as Connection587
                connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
                connect "Bus Split.out" Va_ph.in as Connection589
                connect "Bus Split.out1" Vb_ph.in as Connection590
                connect "Bus Split.out2" Vc_ph.in as Connection591
                connect "Bus Split.out3" Ia_ph.in as Connection592
                connect "Bus Split.out4" Ib_ph.in as Connection593
                connect "Bus Split.out5" Ic_ph.in as Connection594
            }
            [
                position = 8288, 8256
                size = 104, 80
            ]

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7768, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7768, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7768, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            port GND {
                label = "GND"
                position = bottom:1
                kind = pe
            }
            [
                position = 8000, 8264
                scale = -1, 1
            ]

            tag Goto734 {
                value = "output702"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7888, 7984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From735 {
                value = "output702"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8168, 8240
                hide_name = True
                size = 60, 20
            ]

            tag From736 {
                value = "V_REFG"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 8168, 8272
                hide_name = True
                size = 60, 20
            ]

            connect 3ph_Meter702.B- B2 as Connection6833
            connect 3ph_Meter702.B+ B1 as Connection6834
            connect 3ph_Meter702.A+ A1 as Connection6835
            connect 3ph_Meter702.C+ C1 as Connection6836
            connect 3ph_Meter702.C- C2 as Connection6837
            connect 3ph_Meter702.A- A2 as Connection6838
            connect GND 3ph_Meter702.GND as Connection6839
            connect Goto734 3ph_Meter702.Out as Connection6832
            connect From735 Meter702.meter_data as Connection6889
            connect From736 Meter702.ref as Connection6890
        }
        [
            position = 6064, 8816
            size = 88, 80
        ]

        component src_ground gnd_700 {
        }
        [
            position = 5000, 8920
        ]

        component src_ground gnd_702 {
        }
        [
            position = 6064, 8928
        ]

        component Subsystem BUS_703 {
            layout = dynamic
            component "core/Three-phase Meter" 3ph_Meter703 {
                I_rms = "True"
                Ts = "t_exec"
                VLn_rms = "True"
                enable_probes = "False"
                freq = "True"
                n_cycles = "5"
                remove_snubber = "True"
            }
            [
                position = 7880, 8128
                hide_name = True
                size = 48, 96
            ]

            component Subsystem Meter703 {
                layout = dynamic
                component "core/Meter Split" "Meter Split2" {
                    ia = "True"
                    ia_rms = "True"
                    ib = "True"
                    ib_rms = "True"
                    ic = "True"
                    ic_rms = "True"
                    van = "False"
                    vbn = "False"
                    vcn = "False"
                }
                [
                    position = 8016, 8056
                    size = 128, 464
                ]

                component gen_probe IC_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8256
                ]

                component "core/Meter Split" "Meter Split1" {
                    van_rms = "True"
                    vbn_rms = "True"
                    vcn_rms = "True"
                }
                [
                    position = 7632, 8056
                    size = 128, 464
                ]

                component gen_probe VCn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8256
                ]

                component gen_probe IA_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8096
                ]

                component gen_probe VAn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8096
                ]

                component gen_probe IB_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8176
                ]

                component gen_probe VBn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8176
                ]

                component gen_probe Vb_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 7888
                ]

                component gen_probe Ia_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 8000
                ]

                component gen_probe Va_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 7832
                ]

                component gen_probe Vc_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 7944
                ]

                component gen_probe Ib_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 8056
                ]

                component gen_probe Ic_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 8112
                ]

                component gen_c_function phase_diff_6_phase {
                    global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                    init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                    input_terminals = "real ref;real in;"
                    input_terminals_dimensions = "1;6"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                    output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                    output_terminals = "real phase_diff;"
                    output_terminals_dimensions = "6"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'phase_diff\', True)]"
                    update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
                }
                [
                    position = 8632, 8208
                    size = 96, 128
                ]

                component gen_bus_join "Bus Join" {
                    inputs = "6"
                }
                [
                    position = 8440, 8072
                    rotation = right
                    hide_name = True
                ]

                component gen_bus_split "Bus Split" {
                    outputs = "6"
                }
                [
                    position = 8784, 8160
                    rotation = left
                    hide_name = True
                ]

                port meter_data {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8016
                ]

                port ref {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8072
                ]

                tag Vb_goto {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7936
                    hide_name = True
                ]

                tag Vc_goto {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 8016
                    hide_name = True
                ]

                tag Va_goto {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7856
                    hide_name = True
                ]

                tag Ib_goto {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7936
                    hide_name = True
                ]

                tag From1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 8056
                    hide_name = True
                ]

                tag From2 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 8056
                    hide_name = True
                ]

                tag Ia_goto {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7856
                    hide_name = True
                ]

                tag Ic_goto1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8016
                    hide_name = True
                ]

                tag Ic_goto {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8016
                    hide_name = True
                ]

                tag Ic_goto2 {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8072
                    hide_name = True
                ]

                tag V_REF_from6 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7880
                    hide_name = True
                ]

                tag V_REF_from11 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7952
                    hide_name = True
                ]

                tag V_REF_from10 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7976
                    hide_name = True
                ]

                tag V_REF_from7 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7904
                    hide_name = True
                ]

                tag V_REF_from8 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7928
                    hide_name = True
                ]

                tag V_REF_from {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8552, 8088
                    rotation = right
                    hide_name = True
                ]

                tag V_REF_from9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 8000
                    hide_name = True
                ]

                comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8520, 7784
                ]

                connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
                connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
                connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
                connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
                connect From2 "Meter Split2.Input" as Connection489
                connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
                connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
                connect meter_data Ic_goto1 as Connection573
                connect From1 "Meter Split1.Input" as Connection572
                connect Ic_goto2 ref as Connection574
                connect "Meter Split1.VAn" Va_goto as Connection575
                connect "Meter Split1.VCn" Vc_goto as Connection576
                connect "Meter Split1.VBn" Vb_goto as Connection577
                connect "Meter Split2.IC" Ic_goto as Connection578
                connect Ia_goto "Meter Split2.IA" as Connection579
                connect "Meter Split2.IB" Ib_goto as Connection580
                connect "Bus Join.out" phase_diff_6_phase.in as Connection11
                connect V_REF_from phase_diff_6_phase.ref as Connection581
                connect V_REF_from6 "Bus Join.in" as Connection582
                connect V_REF_from7 "Bus Join.in1" as Connection583
                connect V_REF_from8 "Bus Join.in2" as Connection584
                connect V_REF_from11 "Bus Join.in3" as Connection585
                connect V_REF_from10 "Bus Join.in4" as Connection586
                connect V_REF_from9 "Bus Join.in5" as Connection587
                connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
                connect "Bus Split.out" Va_ph.in as Connection589
                connect "Bus Split.out1" Vb_ph.in as Connection590
                connect "Bus Split.out2" Vc_ph.in as Connection591
                connect "Bus Split.out3" Ia_ph.in as Connection592
                connect "Bus Split.out4" Ib_ph.in as Connection593
                connect "Bus Split.out5" Ic_ph.in as Connection594
            }
            [
                position = 8256, 8240
                size = 104, 80
            ]

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7632, 8024
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7632, 8120
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7632, 8216
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            port GND2 {
                label = "GND2"
                position = bottom:2
                kind = pe
            }
            [
                position = 8000, 8264
                scale = -1, 1
            ]

            port GND1 {
                label = "GND1"
                position = bottom:1
                kind = pe
            }
            [
                position = 7632, 8312
            ]

            tag Goto735 {
                value = "output703"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7880, 7968
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From737 {
                value = "output703"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8136, 8224
                hide_name = True
                size = 60, 20
            ]

            tag From738 {
                value = "V_REFG"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 8136, 8256
                hide_name = True
                size = 60, 20
            ]

            junction Junction1 pe
            [
                position = 7880, 8264
            ]

            connect 3ph_Meter703.B- B2 as Connection6894
            connect 3ph_Meter703.A- A2 as Connection6895
            connect 3ph_Meter703.C- C2 as Connection6896
            connect Goto735 3ph_Meter703.Out as Connection6855
            connect From737 Meter703.meter_data as Connection6898
            connect From738 Meter703.ref as Connection6899
            connect GND2 Junction1 as Connection6929
            connect Junction1 3ph_Meter703.GND as Connection6930
            [
                breakpoints = 7880, 8264; 7880, 8264; 7880, 8264
            ]
            connect GND1 Junction1 as Connection6931
            connect C1 3ph_Meter703.C+ as Connection6932
            connect B1 3ph_Meter703.B+ as Connection6933
            connect A1 3ph_Meter703.A+ as Connection6934
        }
        [
            position = 6792, 8816
            size = 88, 80
        ]

        component src_ground gnd_703 {
        }
        [
            position = 6768, 8928
        ]

        component Subsystem BUS_719 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A2 A1 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 6672, 10072
            size = 88, 80
        ]

        component Subsystem BUS_720 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 7200, 10072
            size = 88, 80
        ]

        component Subsystem BUS_721 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 7752, 10072
            size = 88, 80
        ]

        component Subsystem BUS_722 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 8488, 10072
            size = 88, 80
        ]

        component Subsystem BUS_704 {
            layout = dynamic
            component "core/Four Phase TLM Core Coupling" "Core Coupling 1" {
                inductance = "L_cpl_1"
            }
            [
                position = 7840, 8152
                size = 12, 352
            ]

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8008
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 7960, 8008
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8104
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 7960, 8104
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8200
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 7960, 8200
                scale = -1, 1
            ]

            port GND1 {
                label = "GND1"
                position = bottom:1
                kind = pe
            }
            [
                position = 7728, 8296
            ]

            port GND2 {
                label = "GND2"
                position = bottom:2
                kind = pe
            }
            [
                position = 7960, 8296
                scale = -1, 1
            ]

            connect GND1 "Core Coupling 1.d_in" as Connection6921
            connect A1 "Core Coupling 1.a_in" as Connection6922
            connect A2 "Core Coupling 1.a_out" as Connection6923
            connect B1 "Core Coupling 1.b_in" as Connection6924
            connect "Core Coupling 1.b_out" B2 as Connection6925
            connect C1 "Core Coupling 1.c_in" as Connection6926
            connect C2 "Core Coupling 1.c_out" as Connection6927
            connect "Core Coupling 1.d_out" GND2 as Connection6928
        }
        [
            position = 7640, 8816
            size = 88, 80
        ]

        component Subsystem BUS_705 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 7976, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8160
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 7976, 8160
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8256
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 7976, 8256
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B1 B2 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 8296, 8816
            size = 88, 80
        ]

        component Subsystem BUS_723 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 7672, 7752
            size = 88, 80
        ]

        component Subsystem BUS_724 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 8240, 7752
            size = 88, 80
        ]

        component Subsystem BUS_725 {
            layout = dynamic
            component "core/Three-phase Meter" 3ph_Meter725 {
                I_rms = "True"
                Ts = "t_exec"
                VLn_rms = "True"
                enable_probes = "False"
                freq = "True"
                n_cycles = "5"
            }
            [
                position = 7880, 8128
                hide_name = True
                size = 48, 96
            ]

            component Subsystem Meter725 {
                layout = dynamic
                component "core/Meter Split" "Meter Split2" {
                    ia = "True"
                    ia_rms = "True"
                    ib = "True"
                    ib_rms = "True"
                    ic = "True"
                    ic_rms = "True"
                    van = "False"
                    vbn = "False"
                    vcn = "False"
                }
                [
                    position = 8016, 8056
                    size = 128, 464
                ]

                component gen_probe IC_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8256
                ]

                component "core/Meter Split" "Meter Split1" {
                    van_rms = "True"
                    vbn_rms = "True"
                    vcn_rms = "True"
                }
                [
                    position = 7632, 8056
                    size = 128, 464
                ]

                component gen_probe VCn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8256
                ]

                component gen_probe IA_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8096
                ]

                component gen_probe VAn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8096
                ]

                component gen_probe IB_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8176
                ]

                component gen_probe VBn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8176
                ]

                component gen_probe Vb_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 7896
                ]

                component gen_probe Ia_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 8008
                ]

                component gen_probe Va_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 7840
                ]

                component gen_probe Vc_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 7952
                ]

                component gen_probe Ib_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 8064
                ]

                component gen_probe Ic_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 8120
                ]

                component gen_c_function phase_diff_6_phase {
                    global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                    init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                    input_terminals = "real ref;real in;"
                    input_terminals_dimensions = "1;6"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                    output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                    output_terminals = "real phase_diff;"
                    output_terminals_dimensions = "6"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'phase_diff\', True)]"
                    update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
                }
                [
                    position = 8632, 8216
                    size = 96, 128
                ]

                component gen_bus_join "Bus Join" {
                    inputs = "6"
                }
                [
                    position = 8440, 8080
                    rotation = right
                    hide_name = True
                ]

                component gen_bus_split "Bus Split" {
                    outputs = "6"
                }
                [
                    position = 8784, 8168
                    rotation = left
                    hide_name = True
                ]

                port meter_data {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8016
                ]

                port ref {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8072
                ]

                tag Vb_goto {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7936
                    hide_name = True
                    size = 60, 20
                ]

                tag Vc_goto {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Va_goto {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7856
                    hide_name = True
                    size = 60, 20
                ]

                tag Ib_goto {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7936
                    hide_name = True
                    size = 60, 20
                ]

                tag From1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 8056
                    hide_name = True
                    size = 60, 20
                ]

                tag From2 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 8056
                    hide_name = True
                    size = 60, 20
                ]

                tag Ia_goto {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7856
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto2 {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8072
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from6 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7888
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from11 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7960
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from10 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7984
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from7 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7912
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from8 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7936
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8552, 8096
                    rotation = right
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 8008
                    hide_name = True
                    size = 60, 20
                ]

                comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8520, 7792
                ]

                connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
                connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
                connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
                connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
                connect From2 "Meter Split2.Input" as Connection489
                connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
                connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
                connect meter_data Ic_goto1 as Connection573
                connect From1 "Meter Split1.Input" as Connection572
                connect Ic_goto2 ref as Connection574
                connect "Meter Split1.VAn" Va_goto as Connection575
                connect "Meter Split1.VCn" Vc_goto as Connection576
                connect "Meter Split1.VBn" Vb_goto as Connection577
                connect "Meter Split2.IC" Ic_goto as Connection578
                connect Ia_goto "Meter Split2.IA" as Connection579
                connect "Meter Split2.IB" Ib_goto as Connection580
                connect "Bus Join.out" phase_diff_6_phase.in as Connection11
                connect V_REF_from phase_diff_6_phase.ref as Connection581
                connect V_REF_from6 "Bus Join.in" as Connection582
                connect V_REF_from7 "Bus Join.in1" as Connection583
                connect V_REF_from8 "Bus Join.in2" as Connection584
                connect V_REF_from11 "Bus Join.in3" as Connection585
                connect V_REF_from10 "Bus Join.in4" as Connection586
                connect V_REF_from9 "Bus Join.in5" as Connection587
                connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
                connect "Bus Split.out" Va_ph.in as Connection589
                connect "Bus Split.out1" Vb_ph.in as Connection590
                connect "Bus Split.out2" Vc_ph.in as Connection591
                connect "Bus Split.out3" Ia_ph.in as Connection592
                connect "Bus Split.out4" Ib_ph.in as Connection593
                connect "Bus Split.out5" Ic_ph.in as Connection594
            }
            [
                position = 8248, 8256
                size = 104, 80
            ]

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7768, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7768, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7768, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            port GND {
                label = "GND"
                position = bottom:1
                kind = pe
            }
            [
                position = 8000, 8264
                scale = -1, 1
            ]

            tag Goto757 {
                value = "output725"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7880, 7968
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From781 {
                value = "output725"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8128, 8240
                hide_name = True
                size = 60, 20
            ]

            tag From782 {
                value = "V_REFG"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 8128, 8272
                hide_name = True
                size = 60, 20
            ]

            connect 3ph_Meter725.B+ B1 as Connection7324
            connect 3ph_Meter725.A+ A1 as Connection7325
            connect 3ph_Meter725.C+ C1 as Connection7326
            connect 3ph_Meter725.B- B2 as Connection7327
            connect 3ph_Meter725.A- A2 as Connection7328
            connect 3ph_Meter725.C- C2 as Connection7329
            connect GND 3ph_Meter725.GND as Connection7330
            connect Goto757 3ph_Meter725.Out as Connection7323
            connect From781 Meter725.meter_data as Connection7331
            connect From782 Meter725.ref as Connection7332
        }
        [
            position = 8840, 7752
            size = 88, 80
        ]

        component Subsystem BUS_706 {
            layout = dynamic
            component "core/Three-phase Meter" 3ph_Meter706 {
                I_rms = "True"
                Ts = "t_exec"
                VLn_rms = "True"
                enable_probes = "False"
                freq = "True"
                n_cycles = "5"
                remove_snubber = "True"
            }
            [
                position = 7888, 8128
                hide_name = True
                size = 48, 96
            ]

            component Subsystem Meter706 {
                layout = dynamic
                component "core/Meter Split" "Meter Split2" {
                    ia = "True"
                    ia_rms = "True"
                    ib = "True"
                    ib_rms = "True"
                    ic = "True"
                    ic_rms = "True"
                    van = "False"
                    vbn = "False"
                    vcn = "False"
                }
                [
                    position = 8016, 8056
                    size = 128, 464
                ]

                component gen_probe IC_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8256
                ]

                component "core/Meter Split" "Meter Split1" {
                    van_rms = "True"
                    vbn_rms = "True"
                    vcn_rms = "True"
                }
                [
                    position = 7632, 8056
                    size = 128, 464
                ]

                component gen_probe VCn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8256
                ]

                component gen_probe IA_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8096
                ]

                component gen_probe VAn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8096
                ]

                component gen_probe IB_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8176
                ]

                component gen_probe VBn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8176
                ]

                component gen_probe Vb_ph {
                    addr = "17999"
                }
                [
                    position = 8896, 7880
                ]

                component gen_probe Ia_ph {
                    addr = "17999"
                }
                [
                    position = 8896, 7992
                ]

                component gen_probe Va_ph {
                    addr = "17999"
                }
                [
                    position = 8896, 7824
                ]

                component gen_probe Vc_ph {
                    addr = "17999"
                }
                [
                    position = 8896, 7936
                ]

                component gen_probe Ib_ph {
                    addr = "17999"
                }
                [
                    position = 8896, 8048
                ]

                component gen_probe Ic_ph {
                    addr = "17999"
                }
                [
                    position = 8896, 8104
                ]

                component gen_c_function phase_diff_6_phase {
                    global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                    init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                    input_terminals = "real ref;real in;"
                    input_terminals_dimensions = "1;6"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                    output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                    output_terminals = "real phase_diff;"
                    output_terminals_dimensions = "6"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'phase_diff\', True)]"
                    update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
                }
                [
                    position = 8608, 8200
                    size = 96, 128
                ]

                component gen_bus_join "Bus Join" {
                    inputs = "6"
                }
                [
                    position = 8416, 8064
                    rotation = right
                    hide_name = True
                ]

                component gen_bus_split "Bus Split" {
                    outputs = "6"
                }
                [
                    position = 8760, 8152
                    rotation = left
                    hide_name = True
                ]

                port meter_data {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8016
                ]

                port ref {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8072
                ]

                tag Vb_goto {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7936
                    hide_name = True
                ]

                tag Vc_goto {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 8016
                    hide_name = True
                ]

                tag Va_goto {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7856
                    hide_name = True
                ]

                tag Ib_goto {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7936
                    hide_name = True
                ]

                tag From1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 8056
                    hide_name = True
                ]

                tag From2 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 8056
                    hide_name = True
                ]

                tag Ia_goto {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7856
                    hide_name = True
                ]

                tag Ic_goto1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8016
                    hide_name = True
                ]

                tag Ic_goto {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8016
                    hide_name = True
                ]

                tag Ic_goto2 {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8072
                    hide_name = True
                ]

                tag V_REF_from6 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8296, 7872
                    hide_name = True
                ]

                tag V_REF_from11 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8296, 7944
                    hide_name = True
                ]

                tag V_REF_from10 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8296, 7968
                    hide_name = True
                ]

                tag V_REF_from7 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8296, 7896
                    hide_name = True
                ]

                tag V_REF_from8 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8296, 7920
                    hide_name = True
                ]

                tag V_REF_from {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8528, 8080
                    rotation = right
                    hide_name = True
                ]

                tag V_REF_from9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8296, 7992
                    hide_name = True
                ]

                comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8496, 7776
                ]

                connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
                connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
                connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
                connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
                connect From2 "Meter Split2.Input" as Connection489
                connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
                connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
                connect meter_data Ic_goto1 as Connection573
                connect From1 "Meter Split1.Input" as Connection572
                connect Ic_goto2 ref as Connection574
                connect "Meter Split1.VAn" Va_goto as Connection575
                connect "Meter Split1.VCn" Vc_goto as Connection576
                connect "Meter Split1.VBn" Vb_goto as Connection577
                connect "Meter Split2.IC" Ic_goto as Connection578
                connect Ia_goto "Meter Split2.IA" as Connection579
                connect "Meter Split2.IB" Ib_goto as Connection580
                connect "Bus Join.out" phase_diff_6_phase.in as Connection11
                connect V_REF_from phase_diff_6_phase.ref as Connection581
                connect V_REF_from6 "Bus Join.in" as Connection582
                connect V_REF_from7 "Bus Join.in1" as Connection583
                connect V_REF_from8 "Bus Join.in2" as Connection584
                connect V_REF_from11 "Bus Join.in3" as Connection585
                connect V_REF_from10 "Bus Join.in4" as Connection586
                connect V_REF_from9 "Bus Join.in5" as Connection587
                connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
                connect "Bus Split.out" Va_ph.in as Connection589
                connect "Bus Split.out1" Vb_ph.in as Connection590
                connect "Bus Split.out2" Vc_ph.in as Connection591
                connect "Bus Split.out3" Ia_ph.in as Connection592
                connect "Bus Split.out4" Ib_ph.in as Connection593
                connect "Bus Split.out5" Ic_ph.in as Connection594
            }
            [
                position = 8264, 8264
                size = 104, 80
            ]

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7688, 8040
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7688, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7688, 8232
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            port Port2 {
                label = "GND"
                position = bottom:auto
                kind = pe
            }
            [
                position = 7920, 8328
                rotation = down
            ]

            tag Goto738 {
                value = "output706"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7888, 7968
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From743 {
                value = "output706"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8144, 8248
                hide_name = True
                size = 60, 20
            ]

            tag From744 {
                value = "V_REFG"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 8144, 8280
                hide_name = True
                size = 60, 20
            ]

            connect 3ph_Meter706.B- B2 as Connection6931
            connect 3ph_Meter706.A- A2 as Connection6933
            connect 3ph_Meter706.C- C2 as Connection6934
            connect Goto738 3ph_Meter706.Out as Connection6929
            connect From743 Meter706.meter_data as Connection6939
            connect From744 Meter706.ref as Connection6940
            connect Port2 3ph_Meter706.GND as Connection6941
            connect 3ph_Meter706.C+ C1 as Connection6942
            [
                breakpoints = 7816, 8152; 7816, 8232
            ]
            connect B1 3ph_Meter706.B+ as Connection6943
            connect A1 3ph_Meter706.A+ as Connection6944
        }
        [
            position = 8920, 8816
            size = 88, 80
        ]

        component Subsystem BUS_726 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 9752, 8168
            size = 88, 80
        ]

        component Subsystem BUS_727 {
            layout = dynamic
            component "core/Four Phase TLM Core Coupling" "Core Coupling 1" {
                inductance = "L_cpl_10"
            }
            [
                position = 7856, 8184
                size = 12, 352
            ]

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            port Port1 {
                label = "GND"
                position = bottom:auto
                kind = pe
            }
            [
                position = 7744, 8328
            ]

            port Port2 {
                label = "GND"
                position = bottom:auto
                kind = pe
            }
            [
                position = 7976, 8328
                rotation = down
            ]

            connect Port1 "Core Coupling 1.d_in" as Connection7
            connect "Core Coupling 1.d_out" Port2 as Connection8
            connect A1 "Core Coupling 1.a_in" as Connection9
            connect B1 "Core Coupling 1.b_in" as Connection10
            connect C1 "Core Coupling 1.c_in" as Connection11
            connect "Core Coupling 1.c_out" C2 as Connection12
            connect "Core Coupling 1.b_out" B2 as Connection13
            connect "Core Coupling 1.a_out" A2 as Connection14
        }
        [
            position = 10288, 8168
            size = 88, 80
        ]

        component Subsystem BUS_707 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 7976
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 7976, 7976
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8072
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 7976, 8072
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8168
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 7976, 8168
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B1 B2 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 9688, 8816
            size = 88, 80
        ]

        component Subsystem BUS_708 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A2 A1 as Connection1
            connect B1 B2 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 10304, 8816
            size = 88, 80
        ]

        component Subsystem BUS_731 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 12712, 8168
            size = 88, 80
        ]

        component Subsystem BUS_732 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 13304, 8168
            size = 88, 80
        ]

        component Subsystem BUS_733 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 13904, 8168
            size = 88, 80
        ]

        component Subsystem BUS_709 {
            layout = dynamic
            component "core/Four Phase TLM Core Coupling" "Core Coupling 1" {
                inductance = "L_cpl_9"
            }
            [
                position = 7864, 8136
                size = 12, 352
            ]

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7736, 7992
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 7992, 7992
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7736, 8088
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 7992, 8088
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7736, 8184
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 7992, 8184
                scale = -1, 1
            ]

            port GND2 {
                label = "GND2"
                position = bottom:2
                kind = pe
            }
            [
                position = 7992, 8280
                scale = -1, 1
            ]

            port GND1 {
                label = "GND1"
                position = bottom:1
                kind = pe
            }
            [
                position = 7736, 8280
            ]

            connect "Core Coupling 1.d_in" GND1 as Connection4
            connect "Core Coupling 1.d_out" GND2 as Connection5
            connect A1 "Core Coupling 1.a_in" as Connection6
            connect B1 "Core Coupling 1.b_in" as Connection7
            connect C1 "Core Coupling 1.c_in" as Connection8
            connect A2 "Core Coupling 1.a_out" as Connection9
            connect "Core Coupling 1.b_out" B2 as Connection10
            connect "Core Coupling 1.c_out" C2 as Connection11
        }
        [
            position = 11024, 8816
            size = 88, 80
        ]

        component Subsystem BUS_710 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 11088, 10072
            scale = -1, 1
            size = 88, 80
        ]

        component Subsystem BUS_711 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 10520, 10072
            scale = -1, 1
            size = 88, 80
        ]

        component Subsystem BUS_712 {
            layout = dynamic
            component "core/Three-phase Meter" 3ph_Meter712 {
                I_rms = "True"
                Ts = "t_exec"
                VLn_rms = "True"
                enable_probes = "False"
                freq = "True"
                n_cycles = "5"
            }
            [
                position = 7880, 8128
                hide_name = True
                size = 48, 96
            ]

            component Subsystem Meter712 {
                layout = dynamic
                component "core/Meter Split" "Meter Split2" {
                    ia = "True"
                    ia_rms = "True"
                    ib = "True"
                    ib_rms = "True"
                    ic = "True"
                    ic_rms = "True"
                    van = "False"
                    vbn = "False"
                    vcn = "False"
                }
                [
                    position = 8016, 8056
                    size = 128, 464
                ]

                component gen_probe IC_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8256
                ]

                component "core/Meter Split" "Meter Split1" {
                    van_rms = "True"
                    vbn_rms = "True"
                    vcn_rms = "True"
                }
                [
                    position = 7632, 8056
                    size = 128, 464
                ]

                component gen_probe VCn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8256
                ]

                component gen_probe IA_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8096
                ]

                component gen_probe VAn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8096
                ]

                component gen_probe IB_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8176
                ]

                component gen_probe VBn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8176
                ]

                component gen_probe Vb_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 7888
                ]

                component gen_probe Ia_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 8000
                ]

                component gen_probe Va_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 7832
                ]

                component gen_probe Vc_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 7944
                ]

                component gen_probe Ib_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 8056
                ]

                component gen_probe Ic_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 8112
                ]

                component gen_c_function phase_diff_6_phase {
                    global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                    init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                    input_terminals = "real ref;real in;"
                    input_terminals_dimensions = "1;6"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                    output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                    output_terminals = "real phase_diff;"
                    output_terminals_dimensions = "6"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'phase_diff\', True)]"
                    update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
                }
                [
                    position = 8616, 8208
                    size = 96, 128
                ]

                component gen_bus_join "Bus Join" {
                    inputs = "6"
                }
                [
                    position = 8424, 8072
                    rotation = right
                    hide_name = True
                ]

                component gen_bus_split "Bus Split" {
                    outputs = "6"
                }
                [
                    position = 8768, 8160
                    rotation = left
                    hide_name = True
                ]

                port meter_data {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8016
                ]

                port ref {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8072
                ]

                tag Vb_goto {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7936
                    hide_name = True
                    size = 60, 20
                ]

                tag Vc_goto {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Va_goto {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7856
                    hide_name = True
                    size = 60, 20
                ]

                tag Ib_goto {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7936
                    hide_name = True
                    size = 60, 20
                ]

                tag From1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 8056
                    hide_name = True
                    size = 60, 20
                ]

                tag From2 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 8056
                    hide_name = True
                    size = 60, 20
                ]

                tag Ia_goto {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7856
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto2 {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8072
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from6 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 7880
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from11 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 7952
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from10 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 7976
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from7 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 7904
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from8 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 7928
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8536, 8088
                    rotation = right
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 8000
                    hide_name = True
                    size = 60, 20
                ]

                comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8504, 7784
                ]

                connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
                connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
                connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
                connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
                connect From2 "Meter Split2.Input" as Connection489
                connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
                connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
                connect meter_data Ic_goto1 as Connection573
                connect From1 "Meter Split1.Input" as Connection572
                connect Ic_goto2 ref as Connection574
                connect "Meter Split1.VAn" Va_goto as Connection575
                connect "Meter Split1.VCn" Vc_goto as Connection576
                connect "Meter Split1.VBn" Vb_goto as Connection577
                connect "Meter Split2.IC" Ic_goto as Connection578
                connect Ia_goto "Meter Split2.IA" as Connection579
                connect "Meter Split2.IB" Ib_goto as Connection580
                connect "Bus Join.out" phase_diff_6_phase.in as Connection11
                connect V_REF_from phase_diff_6_phase.ref as Connection581
                connect V_REF_from6 "Bus Join.in" as Connection582
                connect V_REF_from7 "Bus Join.in1" as Connection583
                connect V_REF_from8 "Bus Join.in2" as Connection584
                connect V_REF_from11 "Bus Join.in3" as Connection585
                connect V_REF_from10 "Bus Join.in4" as Connection586
                connect V_REF_from9 "Bus Join.in5" as Connection587
                connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
                connect "Bus Split.out" Va_ph.in as Connection589
                connect "Bus Split.out1" Vb_ph.in as Connection590
                connect "Bus Split.out2" Vc_ph.in as Connection591
                connect "Bus Split.out3" Ia_ph.in as Connection592
                connect "Bus Split.out4" Ib_ph.in as Connection593
                connect "Bus Split.out5" Ic_ph.in as Connection594
            }
            [
                position = 8296, 8248
                size = 104, 80
            ]

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7768, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7768, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7768, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            port GND {
                label = "GND"
                position = bottom:1
                kind = pe
            }
            [
                position = 8000, 8264
                scale = -1, 1
            ]

            tag Goto744 {
                value = "output712"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7880, 8000
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From755 {
                value = "output712"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8176, 8232
                hide_name = True
                size = 60, 20
            ]

            tag From756 {
                value = "V_REFG"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 8176, 8264
                hide_name = True
                size = 60, 20
            ]

            connect 3ph_Meter712.B+ B1 as Connection7068
            connect 3ph_Meter712.A+ A1 as Connection7069
            connect 3ph_Meter712.C+ C1 as Connection7070
            connect 3ph_Meter712.B- B2 as Connection7071
            connect 3ph_Meter712.A- A2 as Connection7072
            connect 3ph_Meter712.C- C2 as Connection7073
            connect 3ph_Meter712.GND GND as Connection7074
            connect Goto744 3ph_Meter712.Out as Connection7067
            connect From755 Meter712.meter_data as Connection7075
            connect From756 Meter712.ref as Connection7076
        }
        [
            position = 9832, 10072
            scale = -1, 1
            size = 88, 80
        ]

        component Subsystem BUS_713 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 10008, 10672
            size = 88, 80
        ]

        component Subsystem BUS_714 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 10728, 10672
            size = 88, 80
        ]

        component Subsystem BUS_737 {
            layout = dynamic
            component "core/Four Phase TLM Core Coupling" "Core Coupling 1" {
                inductance = "L_cpl_4"
            }
            [
                position = 7368, 8224
                size = 12, 352
            ]

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            port GND2 {
                label = "GND2"
                position = bottom:2
                kind = pe
            }
            [
                position = 8000, 8264
                scale = -1, 1
            ]

            port GND1 {
                label = "GND1"
                position = bottom:1
                kind = pe
            }
            [
                position = 7728, 8264
            ]

            connect A1 A2 as Connection1
            connect B1 B2 as Connection2
            connect C1 C2 as Connection3
            connect GND1 GND2 as Connection4
        }
        [
            position = 11464, 10672
            size = 88, 80
        ]

        component Subsystem BUS_716 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 12232, 10672
            size = 88, 80
        ]

        component Subsystem BUS_717 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 12944, 10672
            size = 88, 80
        ]

        component Subsystem BUS_718 {
            layout = dynamic
            component "core/Three-phase Meter" 3ph_Meter718 {
                I_rms = "True"
                Ts = "t_exec"
                VLn_rms = "True"
                enable_probes = "False"
                freq = "True"
                n_cycles = "5"
            }
            [
                position = 7880, 8128
                hide_name = True
                size = 48, 96
            ]

            component Subsystem Meter718 {
                layout = dynamic
                component "core/Meter Split" "Meter Split2" {
                    ia = "True"
                    ia_rms = "True"
                    ib = "True"
                    ib_rms = "True"
                    ic = "True"
                    ic_rms = "True"
                    van = "False"
                    vbn = "False"
                    vcn = "False"
                }
                [
                    position = 8016, 8056
                    size = 128, 464
                ]

                component gen_probe IC_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8256
                ]

                component "core/Meter Split" "Meter Split1" {
                    van_rms = "True"
                    vbn_rms = "True"
                    vcn_rms = "True"
                }
                [
                    position = 7632, 8056
                    size = 128, 464
                ]

                component gen_probe VCn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8256
                ]

                component gen_probe IA_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8096
                ]

                component gen_probe VAn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8096
                ]

                component gen_probe IB_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8176
                ]

                component gen_probe VBn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8176
                ]

                component gen_probe Vb_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 7896
                ]

                component gen_probe Ia_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 8008
                ]

                component gen_probe Va_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 7840
                ]

                component gen_probe Vc_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 7952
                ]

                component gen_probe Ib_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 8064
                ]

                component gen_probe Ic_ph {
                    addr = "17999"
                }
                [
                    position = 8904, 8120
                ]

                component gen_c_function phase_diff_6_phase {
                    global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                    init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                    input_terminals = "real ref;real in;"
                    input_terminals_dimensions = "1;6"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                    output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                    output_terminals = "real phase_diff;"
                    output_terminals_dimensions = "6"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'phase_diff\', True)]"
                    update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
                }
                [
                    position = 8616, 8216
                    size = 96, 128
                ]

                component gen_bus_join "Bus Join" {
                    inputs = "6"
                }
                [
                    position = 8424, 8080
                    rotation = right
                    hide_name = True
                ]

                component gen_bus_split "Bus Split" {
                    outputs = "6"
                }
                [
                    position = 8768, 8168
                    rotation = left
                    hide_name = True
                ]

                port meter_data {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8016
                ]

                port ref {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8072
                ]

                tag Vb_goto {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7936
                    hide_name = True
                    size = 60, 20
                ]

                tag Vc_goto {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Va_goto {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7856
                    hide_name = True
                    size = 60, 20
                ]

                tag Ib_goto {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7936
                    hide_name = True
                    size = 60, 20
                ]

                tag From1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 8056
                    hide_name = True
                    size = 60, 20
                ]

                tag From2 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 8056
                    hide_name = True
                    size = 60, 20
                ]

                tag Ia_goto {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7856
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8016
                    hide_name = True
                    size = 60, 20
                ]

                tag Ic_goto2 {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8072
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from6 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 7888
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from11 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 7960
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from10 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 7984
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from7 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 7912
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from8 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 7936
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8536, 8096
                    rotation = right
                    hide_name = True
                    size = 60, 20
                ]

                tag V_REF_from9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 8008
                    hide_name = True
                    size = 60, 20
                ]

                comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8504, 7792
                ]

                connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
                connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
                connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
                connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
                connect From2 "Meter Split2.Input" as Connection489
                connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
                connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
                connect meter_data Ic_goto1 as Connection573
                connect From1 "Meter Split1.Input" as Connection572
                connect Ic_goto2 ref as Connection574
                connect "Meter Split1.VAn" Va_goto as Connection575
                connect "Meter Split1.VCn" Vc_goto as Connection576
                connect "Meter Split1.VBn" Vb_goto as Connection577
                connect "Meter Split2.IC" Ic_goto as Connection578
                connect Ia_goto "Meter Split2.IA" as Connection579
                connect "Meter Split2.IB" Ib_goto as Connection580
                connect "Bus Join.out" phase_diff_6_phase.in as Connection11
                connect V_REF_from phase_diff_6_phase.ref as Connection581
                connect V_REF_from6 "Bus Join.in" as Connection582
                connect V_REF_from7 "Bus Join.in1" as Connection583
                connect V_REF_from8 "Bus Join.in2" as Connection584
                connect V_REF_from11 "Bus Join.in3" as Connection585
                connect V_REF_from10 "Bus Join.in4" as Connection586
                connect V_REF_from9 "Bus Join.in5" as Connection587
                connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
                connect "Bus Split.out" Va_ph.in as Connection589
                connect "Bus Split.out1" Vb_ph.in as Connection590
                connect "Bus Split.out2" Vc_ph.in as Connection591
                connect "Bus Split.out3" Ia_ph.in as Connection592
                connect "Bus Split.out4" Ib_ph.in as Connection593
                connect "Bus Split.out5" Ic_ph.in as Connection594
            }
            [
                position = 8272, 8240
                size = 104, 80
            ]

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7768, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7768, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7768, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            port GND {
                label = "GND"
                position = bottom:1
                kind = pe
            }
            [
                position = 8000, 8264
                scale = -1, 1
            ]

            tag Goto750 {
                value = "output718"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7880, 7984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From767 {
                value = "output718"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8152, 8224
                hide_name = True
                size = 60, 20
            ]

            tag From768 {
                value = "V_REFG"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 8152, 8256
                hide_name = True
                size = 60, 20
            ]

            connect 3ph_Meter718.B+ B1 as Connection7191
            connect 3ph_Meter718.A+ A1 as Connection7192
            connect 3ph_Meter718.C+ C1 as Connection7193
            connect 3ph_Meter718.B- B2 as Connection7194
            connect 3ph_Meter718.A- A2 as Connection7195
            connect 3ph_Meter718.C- C2 as Connection7196
            connect GND 3ph_Meter718.GND as Connection7197
            connect Goto750 3ph_Meter718.Out as Connection7190
            connect From767 Meter718.meter_data as Connection7198
            connect From768 Meter718.ref as Connection7199
        }
        [
            position = 13648, 10672
            size = 88, 80
        ]

        component Subsystem BUS_728 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B1 B2 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 10824, 8168
            size = 88, 80
        ]

        component Subsystem BUS_729 {
            layout = dynamic

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7728, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7728, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            connect A1 A2 as Connection1
            connect B2 B1 as Connection2
            connect C1 C2 as Connection3
        }
        [
            position = 11344, 8168
            size = 88, 80
        ]

        component Subsystem BUS_730 {
            layout = dynamic
            component "core/Three-phase Meter" 3ph_Meter725 {
                I_rms = "True"
                Ts = "t_exec"
                VLn_rms = "True"
                enable_probes = "False"
                freq = "True"
                n_cycles = "5"
            }
            [
                position = 7880, 8128
                hide_name = True
                size = 48, 96
            ]

            component Subsystem Meter730 {
                layout = dynamic
                component "core/Meter Split" "Meter Split2" {
                    ia = "True"
                    ia_rms = "True"
                    ib = "True"
                    ib_rms = "True"
                    ic = "True"
                    ic_rms = "True"
                    van = "False"
                    vbn = "False"
                    vcn = "False"
                }
                [
                    position = 8016, 8056
                    size = 128, 464
                ]

                component gen_probe IC_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8256
                ]

                component "core/Meter Split" "Meter Split1" {
                    van_rms = "True"
                    vbn_rms = "True"
                    vcn_rms = "True"
                }
                [
                    position = 7632, 8056
                    size = 128, 464
                ]

                component gen_probe VCn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8256
                ]

                component gen_probe IA_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8096
                ]

                component gen_probe VAn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8096
                ]

                component gen_probe IB_rms {
                    signal_type = "current"
                }
                [
                    position = 8160, 8176
                ]

                component gen_probe VBn_rms {
                    signal_type = "voltage"
                }
                [
                    position = 7768, 8176
                ]

                component gen_probe Vb_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 7896
                ]

                component gen_probe Ia_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 8008
                ]

                component gen_probe Va_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 7840
                ]

                component gen_probe Vc_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 7952
                ]

                component gen_probe Ib_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 8064
                ]

                component gen_probe Ic_ph {
                    addr = "17999"
                }
                [
                    position = 8920, 8120
                ]

                component gen_c_function phase_diff_6_phase {
                    global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                    init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                    input_terminals = "real ref;real in;"
                    input_terminals_dimensions = "1;6"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                    output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                    output_terminals = "real phase_diff;"
                    output_terminals_dimensions = "6"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'phase_diff\', True)]"
                    update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
                }
                [
                    position = 8632, 8216
                    size = 96, 128
                ]

                component gen_bus_join "Bus Join" {
                    inputs = "6"
                }
                [
                    position = 8440, 8080
                    rotation = right
                    hide_name = True
                ]

                component gen_bus_split "Bus Split" {
                    outputs = "6"
                }
                [
                    position = 8784, 8168
                    rotation = left
                    hide_name = True
                ]

                port meter_data {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8016
                ]

                port ref {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7160, 8072
                ]

                tag Vb_goto {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7936
                    hide_name = True
                ]

                tag Vc_goto {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 8016
                    hide_name = True
                ]

                tag Va_goto {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 7856
                    hide_name = True
                ]

                tag Ib_goto {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7936
                    hide_name = True
                ]

                tag From1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 8056
                    hide_name = True
                ]

                tag From2 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 8056
                    hide_name = True
                ]

                tag Ia_goto {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 7856
                    hide_name = True
                ]

                tag Ic_goto1 {
                    value = "meter_data"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8016
                    hide_name = True
                ]

                tag Ic_goto {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8016
                    hide_name = True
                ]

                tag Ic_goto2 {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7240, 8072
                    hide_name = True
                ]

                tag V_REF_from6 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7888
                    hide_name = True
                ]

                tag V_REF_from11 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7960
                    hide_name = True
                ]

                tag V_REF_from10 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7984
                    hide_name = True
                ]

                tag V_REF_from7 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7912
                    hide_name = True
                ]

                tag V_REF_from8 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 7936
                    hide_name = True
                ]

                tag V_REF_from {
                    value = "V_REF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8552, 8096
                    rotation = right
                    hide_name = True
                ]

                tag V_REF_from9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8320, 8008
                    hide_name = True
                ]

                comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
                [
                    position = 8520, 7792
                ]

                connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
                connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
                connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
                connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
                connect From2 "Meter Split2.Input" as Connection489
                connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
                connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
                connect meter_data Ic_goto1 as Connection573
                connect From1 "Meter Split1.Input" as Connection572
                connect Ic_goto2 ref as Connection574
                connect "Meter Split1.VAn" Va_goto as Connection575
                connect "Meter Split1.VCn" Vc_goto as Connection576
                connect "Meter Split1.VBn" Vb_goto as Connection577
                connect "Meter Split2.IC" Ic_goto as Connection578
                connect Ia_goto "Meter Split2.IA" as Connection579
                connect "Meter Split2.IB" Ib_goto as Connection580
                connect "Bus Join.out" phase_diff_6_phase.in as Connection11
                connect V_REF_from phase_diff_6_phase.ref as Connection581
                connect V_REF_from6 "Bus Join.in" as Connection582
                connect V_REF_from7 "Bus Join.in1" as Connection583
                connect V_REF_from8 "Bus Join.in2" as Connection584
                connect V_REF_from11 "Bus Join.in3" as Connection585
                connect V_REF_from10 "Bus Join.in4" as Connection586
                connect V_REF_from9 "Bus Join.in5" as Connection587
                connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
                connect "Bus Split.out" Va_ph.in as Connection589
                connect "Bus Split.out1" Vb_ph.in as Connection590
                connect "Bus Split.out2" Vc_ph.in as Connection591
                connect "Bus Split.out3" Ia_ph.in as Connection592
                connect "Bus Split.out4" Ib_ph.in as Connection593
                connect "Bus Split.out5" Ic_ph.in as Connection594
            }
            [
                position = 8248, 8256
                size = 104, 80
            ]

            port A1 {
                label = "A1"
                position = left:1
                kind = pe
            }
            [
                position = 7768, 8064
            ]

            port A2 {
                label = "A2"
                position = right:1
                kind = pe
            }
            [
                position = 8000, 8064
                scale = -1, 1
            ]

            port B1 {
                label = "B1"
                position = left:2
                kind = pe
            }
            [
                position = 7768, 8128
            ]

            port B2 {
                label = "B2"
                position = right:2
                kind = pe
            }
            [
                position = 8000, 8128
                scale = -1, 1
            ]

            port C1 {
                label = "C1"
                position = left:3
                kind = pe
            }
            [
                position = 7768, 8192
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8000, 8192
                scale = -1, 1
            ]

            port GND {
                label = "GND"
                position = bottom:1
                kind = pe
            }
            [
                position = 8000, 8264
                scale = -1, 1
            ]

            tag Goto757 {
                value = "output730"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7880, 7968
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From781 {
                value = "output730"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8128, 8240
                hide_name = True
                size = 60, 20
            ]

            tag From782 {
                value = "V_REFG"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 8128, 8272
                hide_name = True
                size = 60, 20
            ]

            connect 3ph_Meter725.B+ B1 as Connection7324
            connect 3ph_Meter725.A+ A1 as Connection7325
            connect 3ph_Meter725.C+ C1 as Connection7326
            connect 3ph_Meter725.B- B2 as Connection7327
            connect 3ph_Meter725.A- A2 as Connection7328
            connect 3ph_Meter725.C- C2 as Connection7329
            connect GND 3ph_Meter725.GND as Connection7330
            connect Goto757 3ph_Meter725.Out as Connection7323
            connect From781 Meter730.meter_data as Connection7331
            connect From782 Meter730.ref as Connection7332
        }
        [
            position = 12032, 8168
            size = 88, 80
        ]

        component Subsystem SwHIF30 {
            layout = dynamic
            component "core/Single Pole Single Throw Contactor" SwIn {
                ctrl_src = "Model"
                execution_rate = "exrate"
                initial_state = "on"
            }
            [
                position = 7848, 8064
                size = 64, 32
            ]

            component "core/Single Pole Single Throw Contactor" SwOut {
                ctrl_src = "Model"
                execution_rate = "exrate"
                initial_state = "on"
            }
            [
                position = 7976, 8064
                size = 64, 32
            ]

            component "core/Single Pole Single Throw Contactor" SwHIF {
                ctrl_src = "Model"
                execution_rate = "exrate"
            }
            [
                position = 7920, 8120
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component src_scada_input SCin {
                addr = "1426063424"
                execution_rate = "exrate"
                unit = ""
            }
            [
                position = 7768, 7952
            ]

            component src_scada_input SCout {
                addr = "1426063424"
                execution_rate = "exrate"
                unit = ""
            }
            [
                position = 7920, 7952
            ]

            component src_scada_input SChif {
                addr = "1426063424"
                execution_rate = "exrate"
                unit = ""
            }
            [
                position = 7768, 8120
            ]

            port in {
                label = "in"
                position = left:auto
                kind = pe
            }
            [
                position = 7768, 8064
            ]

            port out {
                label = "out"
                position = right:auto
                kind = pe
            }
            [
                position = 8056, 8064
                scale = -1, 1
            ]

            port HIF {
                label = "HIF"
                position = bottom:auto
                kind = pe
            }
            [
                position = 7920, 8200
                rotation = right
                scale = -1, -1
            ]

            junction Junction1 pe
            [
                position = 7920, 8064
            ]

            connect SwIn.a_in in as Connection7
            connect SwOut.a_out out as Connection12
            connect SwOut.a_in Junction1 as Connection14
            connect Junction1 SwIn.a_out as Connection15
            [
                breakpoints = 7920, 8064
            ]
            connect SwHIF.a_in Junction1 as Connection16
            connect SwHIF.a_out HIF as Connection17
            connect SCin.out SwIn.ctrl_in as Connection18
            connect SCout.out SwOut.ctrl_in as Connection19
            connect SwHIF.ctrl_in SChif.out as Connection20

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">High Impedance Fault - Switch Model</p></body></html>"

                exrate {
                    label = "Execution Rate"
                    widget = edit
                    type = generic
                    default_value = "t_exec"
                    unit = "s"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE pre_compile
                    # HEADER START
                    exrate = mdl.get_property_value(mdl.prop(item_handle, "exrate"))
                    # HEADER STOP
                    exrate = mdl.get_property_value(mdl.prop(item_handle, "exrate"))
                ENDCODE
            }
        }
        [
            position = 12288, 8112
            size = 56, 56
        ]

        component "core/Single Pole Single Throw Contactor" SC1P {
        }
        [
            position = 9368, 10056
            scale = -1, 1
            size = 64, 32
        ]

        component "core/Current RMS" iSC712rms {
            frequency = "f"
            op_mode = "Fixed frequency"
        }
        [
            position = 9272, 10056
            scale = -1, 1
            size = 64, 32
        ]

        component src_ground gnd1 {
        }
        [
            position = 6936, 9032
        ]

        component src_ground gnd4 {
        }
        [
            position = 7776, 9032
        ]

        component src_ground gnd5 {
        }
        [
            position = 8440, 9024
        ]

        component src_ground gnd6 {
        }
        [
            position = 8944, 8912
        ]

        component src_ground gnd7 {
        }
        [
            position = 9080, 9040
        ]

        component src_ground gnd8 {
        }
        [
            position = 11000, 8920
        ]

        component src_ground gnd9 {
        }
        [
            position = 11048, 8976
        ]

        component src_ground gnd10 {
        }
        [
            position = 9832, 9032
        ]

        component src_ground gnd11 {
        }
        [
            position = 10464, 9040
        ]

        component src_ground gnd12 {
        }
        [
            position = 11184, 9040
        ]

        component src_ground gnd13 {
        }
        [
            position = 7808, 7952
        ]

        component src_ground gnd14 {
        }
        [
            position = 8392, 7952
        ]

        component src_ground gnd15 {
        }
        [
            position = 8976, 7952
        ]

        component src_ground gnd16 {
        }
        [
            position = 9248, 7928
        ]

        component src_ground gnd17 {
        }
        [
            position = 9880, 8376
        ]

        component src_ground gnd18 {
        }
        [
            position = 10408, 8376
        ]

        component src_ground gnd20 {
        }
        [
            position = 10928, 8376
        ]

        component src_ground gnd21 {
        }
        [
            position = 11496, 8360
        ]

        component src_ground gnd22 {
        }
        [
            position = 12192, 8368
        ]

        component src_ground gnd23 {
        }
        [
            position = 12416, 8376
        ]

        component src_ground gnd24 {
        }
        [
            position = 12848, 8368
        ]

        component src_ground gnd25 {
        }
        [
            position = 13440, 8368
        ]

        component src_ground gnd26 {
        }
        [
            position = 14040, 8368
        ]

        component src_ground gnd27 {
        }
        [
            position = 6792, 10288
        ]

        component src_ground gnd28 {
        }
        [
            position = 7328, 10288
        ]

        component src_ground gnd29 {
        }
        [
            position = 7888, 10280
        ]

        component src_ground gnd30 {
        }
        [
            position = 8632, 10280
        ]

        component src_ground gnd31 {
        }
        [
            position = 9200, 10128
        ]

        component src_ground gnd32 {
        }
        [
            position = 9832, 10184
        ]

        component src_ground gnd33 {
        }
        [
            position = 10368, 10272
        ]

        component src_ground gnd34 {
        }
        [
            position = 10960, 10272
        ]

        component src_ground gnd35 {
        }
        [
            position = 10176, 10880
        ]

        component src_ground gnd36 {
        }
        [
            position = 10960, 10888
        ]

        component src_ground gnd37 {
        }
        [
            position = 11440, 10792
        ]

        component src_ground gnd38 {
        }
        [
            position = 11544, 10880
        ]

        component src_ground gnd39 {
        }
        [
            position = 12368, 10880
        ]

        component src_ground gnd40 {
        }
        [
            position = 13096, 10880
        ]

        component src_ground gnd41 {
        }
        [
            position = 13728, 10904
        ]

        component src_ground gnd42 {
        }
        [
            position = 14104, 10888
        ]

        component src_ground gnd43 {
        }
        [
            position = 6816, 8984
        ]

        component src_ground gnd44 {
        }
        [
            position = 6192, 9024
        ]

        component src_ground gnd45 {
        }
        [
            position = 10264, 8272
        ]

        component src_ground gnd47 {
        }
        [
            position = 12032, 8264
        ]

        component src_ground gnd48 {
        }
        [
            position = 8840, 7864
        ]

        component src_ground gnd49 {
        }
        [
            position = 10312, 8320
        ]

        component src_ground gnd50 {
        }
        [
            position = 9688, 10288
        ]

        component src_ground gnd_704 {
        }
        [
            position = 7616, 8928
        ]

        component src_ground gnd51 {
        }
        [
            position = 7664, 8984
        ]

        component Subsystem HIF730 {
            layout = dynamic
            component "core/Variable Resistor" Rp1 {
            }
            [
                position = 8632, 8200
                rotation = right
                scale = -1, 1
                size = 64, 48
            ]

            component "core/Variable Resistor" Rn1 {
            }
            [
                position = 8936, 8192
                rotation = right
                size = 64, 48
            ]

            component "core/Signal Controlled Voltage Source" Vp1 {
                execution_rate = "exrate"
            }
            [
                position = 8632, 8336
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Signal Controlled Voltage Source" Vn1 {
                execution_rate = "exrate"
            }
            [
                position = 8936, 8328
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            component gen_adv_c_function "Advanced C function1" {
                arb_defs = "/*Begin code section*/
float varRp = 0;
float varRn = 0;
float varVp = 0;
float varVn = 0;
/*End code section*/"
                execution_rate = "exrate"
                input_terminals = "real inRp;real inRn;real inVp;real inVn;int inVarVp;int inVarVn;int inVarR;int inSurface;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "True;True;True;True;True;True;True;True"
                output_fnc = "/*Begin code section*/
if (inSurface == 1 || inSurface == 5)
{
    varVp = rand() % (inVarVp+1);
    varVn = rand() % (inVarVp+1);
}else
    {
        varVp = inVarVp;
        varVn = inVarVn;
    }

varRp = rand() % ((2*inVarR)+1);
varRn = rand() % ((2*inVarR)+1);

Rp = inRp + varRp;
Rn = inRn + varRn;
Vp = inVp + varVp;
Vn = inVn + varVn;
/*End code section*/"
                output_terminals = "real Rp;real Rn;real Vp;real Vn;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True"
                output_terminals_show_labels = "True;True;True;True"
            }
            [
                position = 8048, 8288
                size = 128, 192
            ]

            component "core/Diode Leg" Dp1 {
            }
            [
                position = 8784, 8456
                rotation = left
                scale = -1, -1
                size = 127, 256
            ]

            component src_constant RpSC {
                execution_rate = "exrate"
                value = "RpSC"
            }
            [
                position = 7864, 8136
            ]

            component src_constant RnSC {
                execution_rate = "exrate"
                value = "RnSC"
            }
            [
                position = 7808, 8192
            ]

            component src_constant VpSC {
                execution_rate = "exrate"
                value = "VpSC"
            }
            [
                position = 7864, 8224
            ]

            component src_constant VnSC {
                execution_rate = "exrate"
                value = "VnSC"
            }
            [
                position = 7808, 8280
            ]

            component src_constant VarVpSC_hidden {
                execution_rate = "exrate"
                signal_type = "int"
                value = "VarVpSC_hidden"
            }
            [
                position = 7864, 8312
            ]

            component src_constant VarVnSC_hidden {
                execution_rate = "exrate"
                signal_type = "int"
                value = "VarVnSC_hidden"
            }
            [
                position = 7808, 8352
            ]

            component src_constant VarResSC {
                execution_rate = "exrate"
                signal_type = "int"
                value = "VarResSC"
            }
            [
                position = 7864, 8392
            ]

            component src_constant SurfaceSC {
                execution_rate = "exrate"
                signal_type = "int"
                value = "SurfaceSC"
            }
            [
                position = 7808, 8440
            ]

            component gen_probe Rp {
                execution_rate = "exrate"
                signal_type = "resistance"
            }
            [
                position = 8264, 8176
            ]

            component gen_probe Rn {
                execution_rate = "exrate"
                signal_type = "resistance"
            }
            [
                position = 8264, 8264
            ]

            component gen_probe Vp {
                execution_rate = "exrate"
                signal_type = "voltage"
            }
            [
                position = 8264, 8352
            ]

            component gen_probe Vn {
                execution_rate = "exrate"
                signal_type = "voltage"
            }
            [
                position = 8264, 8416
            ]

            component gen_probe Surface {
            }
            [
                position = 8032, 8456
            ]

            port Port1 {
                label = "in"
                position = top:1
                kind = pe
            }
            [
                position = 8736, 8080
            ]

            port Port2 {
                label = "out"
                position = bottom:1
                kind = pe
            }
            [
                position = 8736, 8584
            ]

            tag Goto1 {
                value = "RpTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8216
                size = 60, 20
            ]

            tag Goto2 {
                value = "RnTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8296
                size = 60, 20
            ]

            tag Goto3 {
                value = "VpTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8376
                size = 60, 20
            ]

            tag Goto4 {
                value = "VnTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8440
                size = 60, 20
            ]

            tag From1 {
                value = "VpTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8440, 8336
                size = 60, 20
            ]

            tag From2 {
                value = "RpTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8440, 8200
                size = 60, 20
            ]

            tag From3 {
                value = "RnTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9104, 8192
                scale = -1, 1
                size = 60, 20
            ]

            tag From4 {
                value = "VnTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9104, 8328
                scale = -1, 1
                size = 60, 20
            ]

            junction Junction8 pe
            [
                position = 8776, 8152
            ]

            junction Junction9 sp
            [
                position = 8144, 8296
            ]

            junction Junction11 sp
            [
                position = 8136, 8416
            ]

            junction Junction12 sp
            [
                position = 8144, 8352
            ]

            junction Junction13 sp
            [
                position = 8136, 8216
            ]

            junction Junction14 sp
            [
                position = 7968, 8440
            ]

            connect From2 Rp1.In as Connection72
            [
                breakpoints = 8488, 8200; 8544, 8200
            ]
            connect Rn1.In From3 as Connection73
            [
                breakpoints = 9016, 8192
            ]
            connect From1 Vp1.in as Connection74
            [
                breakpoints = 8488, 8336; 8560, 8336
            ]
            connect Vn1.in From4 as Connection75
            [
                breakpoints = 9016, 8328
            ]
            connect Rn1.p_node Junction8 as Connection58
            connect Junction8 Rp1.p_node as Connection59
            [
                breakpoints = 8768, 8152; 8760, 8152
            ]
            connect Port1 Junction8 as Connection60
            connect Vn1.n_node Rn1.n_node as Connection76
            connect Vp1.p_node Rp1.n_node as Connection77
            connect Vn1.p_node Dp1.pos_out as Connection78
            connect Vp1.n_node Dp1.neg_out as Connection79
            connect Dp1.abc_in Port2 as Connection80
            connect "Advanced C function1.Rn" Junction9 as Connection94
            connect Junction9 Goto2 as Connection95
            connect Rn.in Junction9 as Connection96
            connect "Advanced C function1.Vn" Junction11 as Connection108
            [
                breakpoints = 8136, 8360
            ]
            connect Junction11 Vn.in as Connection109
            [
                breakpoints = 8136, 8416; 8232, 8416
            ]
            connect Goto4 Junction11 as Connection110
            connect "Advanced C function1.Vp" Junction12 as Connection111
            connect Junction12 Goto3 as Connection112
            connect Vp.in Junction12 as Connection113
            connect Rp.in Junction13 as Connection115
            connect Junction13 "Advanced C function1.Rp" as Connection116
            [
                breakpoints = 8136, 8216
            ]
            connect Goto1 Junction13 as Connection117
            connect "Advanced C function1.inRp" RpSC.out as Connection142
            [
                breakpoints = 7968, 8232; 7968, 8136; 7904, 8136
            ]
            connect "Advanced C function1.inRn" RnSC.out as Connection143
            [
                breakpoints = 7936, 8248; 7936, 8216; 7936, 8216
            ]
            connect VpSC.out "Advanced C function1.inVp" as Connection144
            [
                breakpoints = 7920, 8224; 7920, 8264
            ]
            connect VnSC.out "Advanced C function1.inVn" as Connection145
            connect "Advanced C function1.inVarVn" VarVnSC_hidden.out as Connection147
            [
                breakpoints = 7936, 8312; 7936, 8352
            ]
            connect VarVpSC_hidden.out "Advanced C function1.inVarVp" as Connection146
            [
                breakpoints = 7920, 8312; 7920, 8296
            ]
            connect "Advanced C function1.inVarR" VarResSC.out as Connection148
            [
                breakpoints = 7952, 8328; 7952, 8392
            ]
            connect SurfaceSC.out Junction14 as Connection150
            connect Junction14 "Advanced C function1.inSurface" as Connection151
            [
                breakpoints = 7968, 8440
            ]
            connect Surface.in Junction14 as Connection152

            RnSC = "20.7"
            RpSC = "20.7"
            SurfaceSC = "2"
            SurfaceSC_mask = "Concrete"
            VarResSC = "2"
            VarVnSC = "0"
            VarVpSC = "0"
            VnSC = "2000"
            VpSC = "1500"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">High Impedance Fault model, introduced in 2012 by S. Gautam and S. M. Brahma at \"Detection of High Impedance Fault in Power Distribution Systems Using Mathematical Morphology\".</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Vp min: Minimum value to P-leg voltage;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Vn min: Minimum value to N-leg voltage;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Var Vp: Variation value to P-leg voltage (Vp max - Vp min);</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Var Vn: Variation value to N-leg voltage (Vn max - Vn min);</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Rp min: Minimum value to P-leg resistance;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Rn min: Minimum value to N-leg resistance;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Var Res: Variation value to P-leg and N-leg resistance (Rmax-RMin)</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Surfaces:</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Default</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Concrete</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Dry Grass</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Wet Sand</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-User Surface (Editable on Surface tab)</p></body></html>"

                SurfaceSC {
                    label = "Surface"
                    widget = combo
                    combo_values = "1", "2", "3", "4", "5"
                    type = string
                    default_value = "5"
                    nonvisible
                    no_evaluate
                }

                SurfaceSC_mask {
                    label = "Surface"
                    widget = combo
                    combo_values = "Default", "Concrete", "Dry Grass", "Wet Sand", "User Surface"
                    type = string
                    default_value = "User Surface"
                    no_evaluate

                    CODE property_value_changed
                        surfaces = {
                        'Default': 1,
                        'Concrete': 2,
                        'Dry Grass': 3,
                        'Wet Sand': 4,
                        'User Surface': 5
                        }
                        
                        
                        mdl.set_property_value(mdl.prop(container_handle, 'SurfaceSC'), surfaces.get(new_value))
                    ENDCODE

                    CODE property_value_edited
                        prop_names = ["VpSC", "VnSC", "VarVpSC", "VarVnSC", "RpSC", "RnSC", "VarResSC"]
                        
                        # Values for each surface to be shown in the dialog
                        # Note that in some cases it's shown a string but the value passed to the block
                        # C will be zero.
                        surfaces = {
                        'Default': {'VpSC': '900', 'VnSC': '450', 'RpSC': '100', 'RnSC': '100', 'VarVpSC': 'rand()%(200+1)', 'VarVnSC': 'rand()%(200+1)', 'VarResSC': '25'},
                        'Concrete': {'VpSC': '1500', 'VnSC': '2000', 'RpSC': '20.7', 'RnSC': '20.7', 'VarVpSC': '0', 'VarVnSC': '0', 'VarResSC': '2'},
                        'Dry Grass': {'VpSC': '1200', 'VnSC': '1400', 'RpSC': '63', 'RnSC': '63', 'VarVpSC': '0', 'VarVnSC': '0', 'VarResSC': '7'},
                        'Wet Sand': {'VpSC': '750', 'VnSC': '900', 'RpSC': '124.20', 'RnSC': '124.20', 'VarVpSC': '0', 'VarVnSC': '0', 'VarResSC': '14'},
                        'User Surface': {'VpSC': '1200', 'VnSC': '1400', 'RpSC': '63', 'RnSC': '63', 'VarVpSC': '1', 'VarVnSC': '1', 'VarResSC': '7'}
                        }
                        
                        for name in prop_names:
                            prop = mdl.prop(container_handle, name)
                            mdl.disable_property(prop) # Disable editin if its not the User Surface
                            mdl.set_property_disp_value(prop, surfaces.get(new_value).get(name))
                        # When "User Surface" is selected, enable the fields to enter the values by the user
                        if new_value == "User Surface":
                            for name in prop_names:
                                mdl.enable_property(mdl.prop(container_handle, name))
                    ENDCODE
                }

                VpSC {
                    label = "Vp min"
                    widget = edit
                    type = generic
                    default_value = "1200"
                    unit = "V"
                    group = "Surface"
                    disabled
                }

                VnSC {
                    label = "Vn min"
                    widget = edit
                    type = generic
                    default_value = "1400"
                    unit = "V"
                    group = "Surface"
                    disabled
                }

                VarVpSC {
                    label = "Var Vp"
                    widget = edit
                    type = generic
                    default_value = "1"
                    unit = "V"
                    group = "Surface"
                    disabled
                    no_evaluate
                }

                VarVpSC_hidden {
                    label = "VarVpSC"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                    group = "Surface"
                    nonvisible
                    disabled
                }

                VarVnSC {
                    label = "Var Vn"
                    widget = edit
                    type = generic
                    default_value = "1"
                    unit = "V"
                    group = "Surface"
                    disabled
                    no_evaluate
                }

                VarVnSC_hidden {
                    label = "VarVnSC"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                    group = "Surface"
                    nonvisible
                    disabled
                }

                RpSC {
                    label = "Rp min"
                    widget = edit
                    type = generic
                    default_value = "63"
                    unit = "Ω"
                    group = "Surface"
                    disabled
                }

                RnSC {
                    label = "Rn min"
                    widget = edit
                    type = generic
                    default_value = "63"
                    unit = "Ω"
                    group = "Surface"
                    disabled
                }

                VarResSC {
                    label = "Var Res"
                    widget = edit
                    type = generic
                    default_value = "7"
                    unit = "Ω"
                    group = "Surface"
                    disabled
                    no_evaluate
                }

                exrate {
                    label = "Execution Rate"
                    widget = edit
                    type = generic
                    default_value = "100e-6"
                    unit = "s"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                ENDCODE

                CODE pre_compile
                    # HEADER START
                    SurfaceSC = mdl.get_property_value(mdl.prop(item_handle, "SurfaceSC"))
                    SurfaceSC_mask = mdl.get_property_value(mdl.prop(item_handle, "SurfaceSC_mask"))
                    VpSC = mdl.get_property_value(mdl.prop(item_handle, "VpSC"))
                    VnSC = mdl.get_property_value(mdl.prop(item_handle, "VnSC"))
                    VarVpSC = mdl.get_property_value(mdl.prop(item_handle, "VarVpSC"))
                    VarVpSC_hidden = mdl.get_property_value(mdl.prop(item_handle, "VarVpSC_hidden"))
                    VarVnSC = mdl.get_property_value(mdl.prop(item_handle, "VarVnSC"))
                    VarVnSC_hidden = mdl.get_property_value(mdl.prop(item_handle, "VarVnSC_hidden"))
                    RpSC = mdl.get_property_value(mdl.prop(item_handle, "RpSC"))
                    RnSC = mdl.get_property_value(mdl.prop(item_handle, "RnSC"))
                    VarResSC = mdl.get_property_value(mdl.prop(item_handle, "VarResSC"))
                    exrate = mdl.get_property_value(mdl.prop(item_handle, "exrate"))
                    # HEADER STOP
                    SurfaceSC_mask = mdl.get_property_value(mdl.prop(item_handle, "SurfaceSC_mask"))
                    
                    if SurfaceSC_mask == "Default":
                        VarVpSC_hidden = 200
                        VarVarVnSC_hidden = 100
                    if SurfaceSC_mask == "User Surface":
                        mdl.set_property_value(mdl.prop(item_handle, "VarVpSC_hidden"), mdl.get_property_value(mdl.prop(item_handle, "VarVpSC")))
                        mdl.set_property_value(mdl.prop(item_handle, "VarVnSC_hidden"), mdl.get_property_value(mdl.prop(item_handle, "VarVnSC")))
                    else:
                        VarVpSC_hidden = 0
                        VarVarVnSC_hidden = 0
                ENDCODE
            }
        }
        [
            position = 12416, 8288
            size = 56, 56
        ]

        component Subsystem HIF718 {
            layout = dynamic
            component "core/Variable Resistor" Rp1 {
            }
            [
                position = 8632, 8200
                rotation = right
                scale = -1, 1
                size = 64, 48
            ]

            component "core/Variable Resistor" Rn1 {
            }
            [
                position = 8936, 8192
                rotation = right
                size = 64, 48
            ]

            component "core/Signal Controlled Voltage Source" Vp1 {
                execution_rate = "exrate"
            }
            [
                position = 8632, 8336
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Signal Controlled Voltage Source" Vn1 {
                execution_rate = "exrate"
            }
            [
                position = 8936, 8328
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            component gen_adv_c_function "Advanced C function1" {
                arb_defs = "/*Begin code section*/
float varRp = 0;
float varRn = 0;
float varVp = 0;
float varVn = 0;
/*End code section*/"
                execution_rate = "exrate"
                input_terminals = "real inRp;real inRn;real inVp;real inVn;int inVarVp;int inVarVn;int inVarR;int inSurface;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "True;True;True;True;True;True;True;True"
                output_fnc = "/*Begin code section*/
if (inSurface == 1 || inSurface == 5)
{
    varVp = rand() % (inVarVp+1);
    varVn = rand() % (inVarVp+1);
}else
    {
        varVp = inVarVp;
        varVn = inVarVn;
    }

varRp = rand() % ((2*inVarR)+1);
varRn = rand() % ((2*inVarR)+1);

Rp = inRp + varRp;
Rn = inRn + varRn;
Vp = inVp + varVp;
Vn = inVn + varVn;
/*End code section*/"
                output_terminals = "real Rp;real Rn;real Vp;real Vn;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True"
                output_terminals_show_labels = "True;True;True;True"
            }
            [
                position = 8048, 8288
                size = 128, 192
            ]

            component "core/Diode Leg" Dp1 {
            }
            [
                position = 8784, 8456
                rotation = left
                scale = -1, -1
                size = 127, 256
            ]

            component src_constant RpSC {
                execution_rate = "exrate"
                value = "RpSC"
            }
            [
                position = 7864, 8136
            ]

            component src_constant RnSC {
                execution_rate = "exrate"
                value = "RnSC"
            }
            [
                position = 7808, 8192
            ]

            component src_constant VpSC {
                execution_rate = "exrate"
                value = "VpSC"
            }
            [
                position = 7864, 8224
            ]

            component src_constant VnSC {
                execution_rate = "exrate"
                value = "VnSC"
            }
            [
                position = 7808, 8280
            ]

            component src_constant VarVpSC_hidden {
                execution_rate = "exrate"
                signal_type = "int"
                value = "VarVpSC_hidden"
            }
            [
                position = 7864, 8312
            ]

            component src_constant VarVnSC_hidden {
                execution_rate = "exrate"
                signal_type = "int"
                value = "VarVnSC_hidden"
            }
            [
                position = 7808, 8352
            ]

            component src_constant VarResSC {
                execution_rate = "exrate"
                signal_type = "int"
                value = "VarResSC"
            }
            [
                position = 7864, 8392
            ]

            component src_constant SurfaceSC {
                execution_rate = "exrate"
                signal_type = "int"
                value = "SurfaceSC"
            }
            [
                position = 7808, 8440
            ]

            component gen_probe Rp {
                execution_rate = "exrate"
                signal_type = "resistance"
            }
            [
                position = 8264, 8176
            ]

            component gen_probe Rn {
                execution_rate = "exrate"
                signal_type = "resistance"
            }
            [
                position = 8264, 8264
            ]

            component gen_probe Vp {
                execution_rate = "exrate"
                signal_type = "voltage"
            }
            [
                position = 8264, 8352
            ]

            component gen_probe Vn {
                execution_rate = "exrate"
                signal_type = "voltage"
            }
            [
                position = 8264, 8416
            ]

            component gen_probe Surface {
            }
            [
                position = 8032, 8456
            ]

            port Port1 {
                label = "in"
                position = top:1
                kind = pe
            }
            [
                position = 8736, 8080
            ]

            port Port2 {
                label = "out"
                position = bottom:1
                kind = pe
            }
            [
                position = 8736, 8584
            ]

            tag Goto1 {
                value = "RpTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8216
                size = 60, 20
            ]

            tag Goto2 {
                value = "RnTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8296
                size = 60, 20
            ]

            tag Goto3 {
                value = "VpTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8376
                size = 60, 20
            ]

            tag Goto4 {
                value = "VnTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8440
                size = 60, 20
            ]

            tag From1 {
                value = "VpTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8440, 8336
                size = 60, 20
            ]

            tag From2 {
                value = "RpTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8440, 8200
                size = 60, 20
            ]

            tag From3 {
                value = "RnTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9104, 8192
                scale = -1, 1
                size = 60, 20
            ]

            tag From4 {
                value = "VnTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9104, 8328
                scale = -1, 1
                size = 60, 20
            ]

            junction Junction8 pe
            [
                position = 8776, 8152
            ]

            junction Junction9 sp
            [
                position = 8144, 8296
            ]

            junction Junction11 sp
            [
                position = 8136, 8416
            ]

            junction Junction12 sp
            [
                position = 8144, 8352
            ]

            junction Junction13 sp
            [
                position = 8136, 8216
            ]

            junction Junction14 sp
            [
                position = 7968, 8440
            ]

            connect From2 Rp1.In as Connection72
            [
                breakpoints = 8488, 8200; 8544, 8200
            ]
            connect Rn1.In From3 as Connection73
            [
                breakpoints = 9016, 8192
            ]
            connect From1 Vp1.in as Connection74
            [
                breakpoints = 8488, 8336; 8560, 8336
            ]
            connect Vn1.in From4 as Connection75
            [
                breakpoints = 9016, 8328
            ]
            connect Rn1.p_node Junction8 as Connection58
            connect Junction8 Rp1.p_node as Connection59
            [
                breakpoints = 8768, 8152; 8760, 8152
            ]
            connect Port1 Junction8 as Connection60
            connect Vn1.n_node Rn1.n_node as Connection76
            connect Vp1.p_node Rp1.n_node as Connection77
            connect Vn1.p_node Dp1.pos_out as Connection78
            connect Vp1.n_node Dp1.neg_out as Connection79
            connect Dp1.abc_in Port2 as Connection80
            connect "Advanced C function1.Rn" Junction9 as Connection94
            connect Junction9 Goto2 as Connection95
            connect Rn.in Junction9 as Connection96
            connect "Advanced C function1.Vn" Junction11 as Connection108
            [
                breakpoints = 8136, 8360
            ]
            connect Junction11 Vn.in as Connection109
            [
                breakpoints = 8136, 8416; 8232, 8416
            ]
            connect Goto4 Junction11 as Connection110
            connect "Advanced C function1.Vp" Junction12 as Connection111
            connect Junction12 Goto3 as Connection112
            connect Vp.in Junction12 as Connection113
            connect Rp.in Junction13 as Connection115
            connect Junction13 "Advanced C function1.Rp" as Connection116
            [
                breakpoints = 8136, 8216
            ]
            connect Goto1 Junction13 as Connection117
            connect "Advanced C function1.inRp" RpSC.out as Connection142
            [
                breakpoints = 7968, 8232; 7968, 8136; 7904, 8136
            ]
            connect "Advanced C function1.inRn" RnSC.out as Connection143
            [
                breakpoints = 7936, 8248; 7936, 8216; 7936, 8216
            ]
            connect VpSC.out "Advanced C function1.inVp" as Connection144
            [
                breakpoints = 7920, 8224; 7920, 8264
            ]
            connect VnSC.out "Advanced C function1.inVn" as Connection145
            connect "Advanced C function1.inVarVn" VarVnSC_hidden.out as Connection147
            [
                breakpoints = 7936, 8312; 7936, 8352
            ]
            connect VarVpSC_hidden.out "Advanced C function1.inVarVp" as Connection146
            [
                breakpoints = 7920, 8312; 7920, 8296
            ]
            connect "Advanced C function1.inVarR" VarResSC.out as Connection148
            [
                breakpoints = 7952, 8328; 7952, 8392
            ]
            connect SurfaceSC.out Junction14 as Connection150
            connect Junction14 "Advanced C function1.inSurface" as Connection151
            [
                breakpoints = 7968, 8440
            ]
            connect Surface.in Junction14 as Connection152

            VarVnSC = "12"
            VarVpSC = "6"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">High Impedance Fault model, introduced in 2012 by S. Gautam and S. M. Brahma at \"Detection of High Impedance Fault in Power Distribution Systems Using Mathematical Morphology\".</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Vp min: Minimum value to P-leg voltage;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Vn min: Minimum value to N-leg voltage;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Var Vp: Variation value to P-leg voltage (Vp max - Vp min);</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Var Vn: Variation value to N-leg voltage (Vn max - Vn min);</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Rp min: Minimum value to P-leg resistance;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Rn min: Minimum value to N-leg resistance;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Var Res: Variation value to P-leg and N-leg resistance (Rmax-RMin)</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Surfaces:</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Default</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Concrete</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Dry Grass</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Wet Sand</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-User Surface (Editable on Surface tab)</p></body></html>"

                SurfaceSC {
                    label = "Surface"
                    widget = combo
                    combo_values = "1", "2", "3", "4", "5"
                    type = string
                    default_value = "5"
                    nonvisible
                    no_evaluate
                }

                SurfaceSC_mask {
                    label = "Surface"
                    widget = combo
                    combo_values = "Default", "Concrete", "Dry Grass", "Wet Sand", "User Surface"
                    type = string
                    default_value = "User Surface"
                    no_evaluate

                    CODE property_value_changed
                        surfaces = {
                        'Default': 1,
                        'Concrete': 2,
                        'Dry Grass': 3,
                        'Wet Sand': 4,
                        'User Surface': 5
                        }
                        
                        
                        mdl.set_property_value(mdl.prop(container_handle, 'SurfaceSC'), surfaces.get(new_value))
                    ENDCODE

                    CODE property_value_edited
                        prop_names = ["VpSC", "VnSC", "VarVpSC", "VarVnSC", "RpSC", "RnSC", "VarResSC"]
                        
                        # Values for each surface to be shown in the dialog
                        # Note that in some cases it's shown a string but the value passed to the block
                        # C will be zero.
                        surfaces = {
                        'Default': {'VpSC': '900', 'VnSC': '450', 'RpSC': '100', 'RnSC': '100', 'VarVpSC': 'rand()%(200+1)', 'VarVnSC': 'rand()%(200+1)', 'VarResSC': '25'},
                        'Concrete': {'VpSC': '1500', 'VnSC': '2000', 'RpSC': '20.7', 'RnSC': '20.7', 'VarVpSC': '0', 'VarVnSC': '0', 'VarResSC': '2'},
                        'Dry Grass': {'VpSC': '1200', 'VnSC': '1400', 'RpSC': '63', 'RnSC': '63', 'VarVpSC': '0', 'VarVnSC': '0', 'VarResSC': '7'},
                        'Wet Sand': {'VpSC': '750', 'VnSC': '900', 'RpSC': '124.20', 'RnSC': '124.20', 'VarVpSC': '0', 'VarVnSC': '0', 'VarResSC': '14'},
                        'User Surface': {'VpSC': '1200', 'VnSC': '1400', 'RpSC': '63', 'RnSC': '63', 'VarVpSC': '1', 'VarVnSC': '1', 'VarResSC': '7'}
                        }
                        
                        for name in prop_names:
                            prop = mdl.prop(container_handle, name)
                            mdl.disable_property(prop) # Disable editin if its not the User Surface
                            mdl.set_property_disp_value(prop, surfaces.get(new_value).get(name))
                        # When "User Surface" is selected, enable the fields to enter the values by the user
                        if new_value == "User Surface":
                            for name in prop_names:
                                mdl.enable_property(mdl.prop(container_handle, name))
                    ENDCODE
                }

                VpSC {
                    label = "Vp min"
                    widget = edit
                    type = generic
                    default_value = "1200"
                    unit = "V"
                    group = "Surface"
                }

                VnSC {
                    label = "Vn min"
                    widget = edit
                    type = generic
                    default_value = "1400"
                    unit = "V"
                    group = "Surface"
                }

                VarVpSC {
                    label = "Var Vp"
                    widget = edit
                    type = generic
                    default_value = "1"
                    unit = "V"
                    group = "Surface"
                    no_evaluate
                }

                VarVpSC_hidden {
                    label = "VarVpSC"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                    group = "Surface"
                    nonvisible
                    disabled
                }

                VarVnSC {
                    label = "Var Vn"
                    widget = edit
                    type = generic
                    default_value = "1"
                    unit = "V"
                    group = "Surface"
                    no_evaluate
                }

                VarVnSC_hidden {
                    label = "VarVnSC"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                    group = "Surface"
                    nonvisible
                    disabled
                }

                RpSC {
                    label = "Rp min"
                    widget = edit
                    type = generic
                    default_value = "63"
                    unit = "Ω"
                    group = "Surface"
                }

                RnSC {
                    label = "Rn min"
                    widget = edit
                    type = generic
                    default_value = "63"
                    unit = "Ω"
                    group = "Surface"
                }

                VarResSC {
                    label = "Var Res"
                    widget = edit
                    type = generic
                    default_value = "7"
                    unit = "Ω"
                    group = "Surface"
                    no_evaluate
                }

                exrate {
                    label = "Execution Rate"
                    widget = edit
                    type = generic
                    default_value = "100e-6"
                    unit = "s"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                ENDCODE

                CODE pre_compile
                    # HEADER START
                    SurfaceSC = mdl.get_property_value(mdl.prop(item_handle, "SurfaceSC"))
                    SurfaceSC_mask = mdl.get_property_value(mdl.prop(item_handle, "SurfaceSC_mask"))
                    VpSC = mdl.get_property_value(mdl.prop(item_handle, "VpSC"))
                    VnSC = mdl.get_property_value(mdl.prop(item_handle, "VnSC"))
                    VarVpSC = mdl.get_property_value(mdl.prop(item_handle, "VarVpSC"))
                    VarVpSC_hidden = mdl.get_property_value(mdl.prop(item_handle, "VarVpSC_hidden"))
                    VarVnSC = mdl.get_property_value(mdl.prop(item_handle, "VarVnSC"))
                    VarVnSC_hidden = mdl.get_property_value(mdl.prop(item_handle, "VarVnSC_hidden"))
                    RpSC = mdl.get_property_value(mdl.prop(item_handle, "RpSC"))
                    RnSC = mdl.get_property_value(mdl.prop(item_handle, "RnSC"))
                    VarResSC = mdl.get_property_value(mdl.prop(item_handle, "VarResSC"))
                    exrate = mdl.get_property_value(mdl.prop(item_handle, "exrate"))
                    # HEADER STOP
                    SurfaceSC_mask = mdl.get_property_value(mdl.prop(item_handle, "SurfaceSC_mask"))
                    
                    if SurfaceSC_mask == "Default":
                        VarVpSC_hidden = 200
                        VarVarVnSC_hidden = 100
                    if SurfaceSC_mask == "User Surface":
                        mdl.set_property_value(mdl.prop(item_handle, "VarVpSC_hidden"), mdl.get_property_value(mdl.prop(item_handle, "VarVpSC")))
                        mdl.set_property_value(mdl.prop(item_handle, "VarVnSC_hidden"), mdl.get_property_value(mdl.prop(item_handle, "VarVnSC")))
                    else:
                        VarVpSC_hidden = 0
                        VarVarVnSC_hidden = 0
                ENDCODE
            }
        }
        [
            position = 14104, 10784
            size = 56, 56
        ]

        component Subsystem HIF725 {
            layout = dynamic
            component "core/Variable Resistor" Rp1 {
            }
            [
                position = 8632, 8200
                rotation = right
                scale = -1, 1
                size = 64, 48
            ]

            component "core/Variable Resistor" Rn1 {
            }
            [
                position = 8936, 8192
                rotation = right
                size = 64, 48
            ]

            component "core/Signal Controlled Voltage Source" Vp1 {
                execution_rate = "exrate"
            }
            [
                position = 8632, 8336
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Signal Controlled Voltage Source" Vn1 {
                execution_rate = "exrate"
            }
            [
                position = 8936, 8328
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            component gen_adv_c_function "Advanced C function1" {
                arb_defs = "/*Begin code section*/
float varRp = 0;
float varRn = 0;
float varVp = 0;
float varVn = 0;
/*End code section*/"
                execution_rate = "exrate"
                input_terminals = "real inRp;real inRn;real inVp;real inVn;int inVarVp;int inVarVn;int inVarR;int inSurface;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "True;True;True;True;True;True;True;True"
                output_fnc = "/*Begin code section*/
if (inSurface == 1 || inSurface == 5)
{
    varVp = rand() % (inVarVp+1);
    varVn = rand() % (inVarVp+1);
}else
    {
        varVp = inVarVp;
        varVn = inVarVn;
    }

varRp = rand() % ((2*inVarR)+1);
varRn = rand() % ((2*inVarR)+1);

Rp = inRp + varRp;
Rn = inRn + varRn;
Vp = inVp + varVp;
Vn = inVn + varVn;
/*End code section*/"
                output_terminals = "real Rp;real Rn;real Vp;real Vn;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True"
                output_terminals_show_labels = "True;True;True;True"
            }
            [
                position = 8048, 8288
                size = 128, 192
            ]

            component "core/Diode Leg" Dp1 {
            }
            [
                position = 8784, 8456
                rotation = left
                scale = -1, -1
                size = 127, 256
            ]

            component src_constant RpSC {
                execution_rate = "exrate"
                value = "RpSC"
            }
            [
                position = 7864, 8136
            ]

            component src_constant RnSC {
                execution_rate = "exrate"
                value = "RnSC"
            }
            [
                position = 7808, 8192
            ]

            component src_constant VpSC {
                execution_rate = "exrate"
                value = "VpSC"
            }
            [
                position = 7864, 8224
            ]

            component src_constant VnSC {
                execution_rate = "exrate"
                value = "VnSC"
            }
            [
                position = 7808, 8280
            ]

            component src_constant VarVpSC_hidden {
                execution_rate = "exrate"
                signal_type = "int"
                value = "VarVpSC_hidden"
            }
            [
                position = 7864, 8312
            ]

            component src_constant VarVnSC_hidden {
                execution_rate = "exrate"
                signal_type = "int"
                value = "VarVnSC_hidden"
            }
            [
                position = 7808, 8352
            ]

            component src_constant VarResSC {
                execution_rate = "exrate"
                signal_type = "int"
                value = "VarResSC"
            }
            [
                position = 7864, 8392
            ]

            component src_constant SurfaceSC {
                execution_rate = "exrate"
                signal_type = "int"
                value = "SurfaceSC"
            }
            [
                position = 7808, 8440
            ]

            component gen_probe Rp {
                execution_rate = "exrate"
                signal_type = "resistance"
            }
            [
                position = 8264, 8176
            ]

            component gen_probe Rn {
                execution_rate = "exrate"
                signal_type = "resistance"
            }
            [
                position = 8264, 8264
            ]

            component gen_probe Vp {
                execution_rate = "exrate"
                signal_type = "voltage"
            }
            [
                position = 8264, 8352
            ]

            component gen_probe Vn {
                execution_rate = "exrate"
                signal_type = "voltage"
            }
            [
                position = 8264, 8416
            ]

            component gen_probe Surface {
            }
            [
                position = 8032, 8456
            ]

            port Port1 {
                label = "in"
                position = top:1
                kind = pe
            }
            [
                position = 8736, 8080
            ]

            port Port2 {
                label = "out"
                position = bottom:1
                kind = pe
            }
            [
                position = 8736, 8584
            ]

            tag Goto1 {
                value = "RpTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8216
                size = 60, 20
            ]

            tag Goto2 {
                value = "RnTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8296
                size = 60, 20
            ]

            tag Goto3 {
                value = "VpTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8376
                size = 60, 20
            ]

            tag Goto4 {
                value = "VnTag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8192, 8440
                size = 60, 20
            ]

            tag From1 {
                value = "VpTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8440, 8336
                size = 60, 20
            ]

            tag From2 {
                value = "RpTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8440, 8200
                size = 60, 20
            ]

            tag From3 {
                value = "RnTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9104, 8192
                scale = -1, 1
                size = 60, 20
            ]

            tag From4 {
                value = "VnTag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9104, 8328
                scale = -1, 1
                size = 60, 20
            ]

            junction Junction8 pe
            [
                position = 8776, 8152
            ]

            junction Junction9 sp
            [
                position = 8144, 8296
            ]

            junction Junction11 sp
            [
                position = 8136, 8416
            ]

            junction Junction12 sp
            [
                position = 8144, 8352
            ]

            junction Junction13 sp
            [
                position = 8136, 8216
            ]

            junction Junction14 sp
            [
                position = 7968, 8440
            ]

            connect From2 Rp1.In as Connection72
            [
                breakpoints = 8488, 8200; 8544, 8200
            ]
            connect Rn1.In From3 as Connection73
            [
                breakpoints = 9016, 8192
            ]
            connect From1 Vp1.in as Connection74
            [
                breakpoints = 8488, 8336; 8560, 8336
            ]
            connect Vn1.in From4 as Connection75
            [
                breakpoints = 9016, 8328
            ]
            connect Rn1.p_node Junction8 as Connection58
            connect Junction8 Rp1.p_node as Connection59
            [
                breakpoints = 8768, 8152; 8760, 8152
            ]
            connect Port1 Junction8 as Connection60
            connect Vn1.n_node Rn1.n_node as Connection76
            connect Vp1.p_node Rp1.n_node as Connection77
            connect Vn1.p_node Dp1.pos_out as Connection78
            connect Vp1.n_node Dp1.neg_out as Connection79
            connect Dp1.abc_in Port2 as Connection80
            connect "Advanced C function1.Rn" Junction9 as Connection94
            connect Junction9 Goto2 as Connection95
            connect Rn.in Junction9 as Connection96
            connect "Advanced C function1.Vn" Junction11 as Connection108
            [
                breakpoints = 8136, 8360
            ]
            connect Junction11 Vn.in as Connection109
            [
                breakpoints = 8136, 8416; 8232, 8416
            ]
            connect Goto4 Junction11 as Connection110
            connect "Advanced C function1.Vp" Junction12 as Connection111
            connect Junction12 Goto3 as Connection112
            connect Vp.in Junction12 as Connection113
            connect Rp.in Junction13 as Connection115
            connect Junction13 "Advanced C function1.Rp" as Connection116
            [
                breakpoints = 8136, 8216
            ]
            connect Goto1 Junction13 as Connection117
            connect "Advanced C function1.inRp" RpSC.out as Connection142
            [
                breakpoints = 7968, 8232; 7968, 8136; 7904, 8136
            ]
            connect "Advanced C function1.inRn" RnSC.out as Connection143
            [
                breakpoints = 7936, 8248; 7936, 8216; 7936, 8216
            ]
            connect VpSC.out "Advanced C function1.inVp" as Connection144
            [
                breakpoints = 7920, 8224; 7920, 8264
            ]
            connect VnSC.out "Advanced C function1.inVn" as Connection145
            connect "Advanced C function1.inVarVn" VarVnSC_hidden.out as Connection147
            [
                breakpoints = 7936, 8312; 7936, 8352
            ]
            connect VarVpSC_hidden.out "Advanced C function1.inVarVp" as Connection146
            [
                breakpoints = 7920, 8312; 7920, 8296
            ]
            connect "Advanced C function1.inVarR" VarResSC.out as Connection148
            [
                breakpoints = 7952, 8328; 7952, 8392
            ]
            connect SurfaceSC.out Junction14 as Connection150
            connect Junction14 "Advanced C function1.inSurface" as Connection151
            [
                breakpoints = 7968, 8440
            ]
            connect Surface.in Junction14 as Connection152

            RnSC = "100"
            RpSC = "100"
            SurfaceSC = "1"
            SurfaceSC_mask = "Default"
            VarResSC = "25"
            VarVnSC = "rand()%(200+1)"
            VarVpSC = "rand()%(200+1)"
            VnSC = "450"
            VpSC = "900"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">High Impedance Fault model, introduced in 2012 by S. Gautam and S. M. Brahma at \"Detection of High Impedance Fault in Power Distribution Systems Using Mathematical Morphology\".</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Vp min: Minimum value to P-leg voltage;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Vn min: Minimum value to N-leg voltage;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Var Vp: Variation value to P-leg voltage (Vp max - Vp min);</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Var Vn: Variation value to N-leg voltage (Vn max - Vn min);</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Rp min: Minimum value to P-leg resistance;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Rn min: Minimum value to N-leg resistance;</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Var Res: Variation value to P-leg and N-leg resistance (Rmax-RMin)</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Surfaces:</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Default</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Concrete</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Dry Grass</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-Wet Sand</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">-User Surface (Editable on Surface tab)</p></body></html>"

                SurfaceSC {
                    label = "Surface"
                    widget = combo
                    combo_values = "1", "2", "3", "4", "5"
                    type = string
                    default_value = "5"
                    nonvisible
                    no_evaluate
                }

                SurfaceSC_mask {
                    label = "Surface"
                    widget = combo
                    combo_values = "Default", "Concrete", "Dry Grass", "Wet Sand", "User Surface"
                    type = string
                    default_value = "User Surface"
                    no_evaluate

                    CODE property_value_changed
                        surfaces = {
                        'Default': 1,
                        'Concrete': 2,
                        'Dry Grass': 3,
                        'Wet Sand': 4,
                        'User Surface': 5
                        }
                        
                        
                        mdl.set_property_value(mdl.prop(container_handle, 'SurfaceSC'), surfaces.get(new_value))
                    ENDCODE

                    CODE property_value_edited
                        prop_names = ["VpSC", "VnSC", "VarVpSC", "VarVnSC", "RpSC", "RnSC", "VarResSC"]
                        
                        # Values for each surface to be shown in the dialog
                        # Note that in some cases it's shown a string but the value passed to the block
                        # C will be zero.
                        surfaces = {
                        'Default': {'VpSC': '900', 'VnSC': '450', 'RpSC': '100', 'RnSC': '100', 'VarVpSC': 'rand()%(200+1)', 'VarVnSC': 'rand()%(200+1)', 'VarResSC': '25'},
                        'Concrete': {'VpSC': '1500', 'VnSC': '2000', 'RpSC': '20.7', 'RnSC': '20.7', 'VarVpSC': '0', 'VarVnSC': '0', 'VarResSC': '2'},
                        'Dry Grass': {'VpSC': '1200', 'VnSC': '1400', 'RpSC': '63', 'RnSC': '63', 'VarVpSC': '0', 'VarVnSC': '0', 'VarResSC': '7'},
                        'Wet Sand': {'VpSC': '750', 'VnSC': '900', 'RpSC': '124.20', 'RnSC': '124.20', 'VarVpSC': '0', 'VarVnSC': '0', 'VarResSC': '14'},
                        'User Surface': {'VpSC': '1200', 'VnSC': '1400', 'RpSC': '63', 'RnSC': '63', 'VarVpSC': '1', 'VarVnSC': '1', 'VarResSC': '7'}
                        }
                        
                        for name in prop_names:
                            prop = mdl.prop(container_handle, name)
                            mdl.disable_property(prop) # Disable editin if its not the User Surface
                            mdl.set_property_disp_value(prop, surfaces.get(new_value).get(name))
                        # When "User Surface" is selected, enable the fields to enter the values by the user
                        if new_value == "User Surface":
                            for name in prop_names:
                                mdl.enable_property(mdl.prop(container_handle, name))
                    ENDCODE
                }

                VpSC {
                    label = "Vp min"
                    widget = edit
                    type = generic
                    default_value = "1200"
                    unit = "V"
                    group = "Surface"
                    disabled
                }

                VnSC {
                    label = "Vn min"
                    widget = edit
                    type = generic
                    default_value = "1400"
                    unit = "V"
                    group = "Surface"
                    disabled
                }

                VarVpSC {
                    label = "Var Vp"
                    widget = edit
                    type = generic
                    default_value = "1"
                    unit = "V"
                    group = "Surface"
                    disabled
                    no_evaluate
                }

                VarVpSC_hidden {
                    label = "VarVpSC"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                    group = "Surface"
                    nonvisible
                    disabled
                }

                VarVnSC {
                    label = "Var Vn"
                    widget = edit
                    type = generic
                    default_value = "1"
                    unit = "V"
                    group = "Surface"
                    disabled
                    no_evaluate
                }

                VarVnSC_hidden {
                    label = "VarVnSC"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                    group = "Surface"
                    nonvisible
                    disabled
                }

                RpSC {
                    label = "Rp min"
                    widget = edit
                    type = generic
                    default_value = "63"
                    unit = "Ω"
                    group = "Surface"
                    disabled
                }

                RnSC {
                    label = "Rn min"
                    widget = edit
                    type = generic
                    default_value = "63"
                    unit = "Ω"
                    group = "Surface"
                    disabled
                }

                VarResSC {
                    label = "Var Res"
                    widget = edit
                    type = generic
                    default_value = "7"
                    unit = "Ω"
                    group = "Surface"
                    disabled
                    no_evaluate
                }

                exrate {
                    label = "Execution Rate"
                    widget = edit
                    type = generic
                    default_value = "100e-6"
                    unit = "s"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                ENDCODE

                CODE pre_compile
                    # HEADER START
                    SurfaceSC = mdl.get_property_value(mdl.prop(item_handle, "SurfaceSC"))
                    SurfaceSC_mask = mdl.get_property_value(mdl.prop(item_handle, "SurfaceSC_mask"))
                    VpSC = mdl.get_property_value(mdl.prop(item_handle, "VpSC"))
                    VnSC = mdl.get_property_value(mdl.prop(item_handle, "VnSC"))
                    VarVpSC = mdl.get_property_value(mdl.prop(item_handle, "VarVpSC"))
                    VarVpSC_hidden = mdl.get_property_value(mdl.prop(item_handle, "VarVpSC_hidden"))
                    VarVnSC = mdl.get_property_value(mdl.prop(item_handle, "VarVnSC"))
                    VarVnSC_hidden = mdl.get_property_value(mdl.prop(item_handle, "VarVnSC_hidden"))
                    RpSC = mdl.get_property_value(mdl.prop(item_handle, "RpSC"))
                    RnSC = mdl.get_property_value(mdl.prop(item_handle, "RnSC"))
                    VarResSC = mdl.get_property_value(mdl.prop(item_handle, "VarResSC"))
                    exrate = mdl.get_property_value(mdl.prop(item_handle, "exrate"))
                    # HEADER STOP
                    SurfaceSC_mask = mdl.get_property_value(mdl.prop(item_handle, "SurfaceSC_mask"))
                    
                    if SurfaceSC_mask == "Default":
                        VarVpSC_hidden = 200
                        VarVarVnSC_hidden = 100
                    if SurfaceSC_mask == "User Surface":
                        mdl.set_property_value(mdl.prop(item_handle, "VarVpSC_hidden"), mdl.get_property_value(mdl.prop(item_handle, "VarVpSC")))
                        mdl.set_property_value(mdl.prop(item_handle, "VarVnSC_hidden"), mdl.get_property_value(mdl.prop(item_handle, "VarVnSC")))
                    else:
                        VarVpSC_hidden = 0
                        VarVarVnSC_hidden = 0
                ENDCODE
            }
        }
        [
            position = 9248, 7824
            size = 56, 56
        ]

        tag V_REF_goto1 {
            value = "V_REFG"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 4984, 9008
            hide_name = True
            size = 60, 20
        ]

        junction Junction1099 pe
        [
            position = 6320, 8800
        ]

        junction Junction1100 pe
        [
            position = 6304, 8816
        ]

        junction Junction1101 pe
        [
            position = 6288, 8832
        ]

        junction Junction1102 pe
        [
            position = 6168, 8832
        ]

        junction Junction1103 pe
        [
            position = 6192, 8816
        ]

        junction Junction1104 pe
        [
            position = 6216, 8800
        ]

        junction Junction1107 pe
        [
            position = 7184, 8800
        ]

        junction Junction1108 pe
        [
            position = 7200, 8816
        ]

        junction Junction1109 pe
        [
            position = 7216, 8832
        ]

        junction Junction1110 pe
        [
            position = 6904, 8832
        ]

        junction Junction1111 pe
        [
            position = 6936, 8816
        ]

        junction Junction1112 pe
        [
            position = 6960, 8800
        ]

        junction Junction1114 pe
        [
            position = 6768, 10088
        ]

        junction Junction1115 pe
        [
            position = 6792, 10072
        ]

        junction Junction1116 pe
        [
            position = 6816, 10056
        ]

        junction Junction1118 pe
        [
            position = 7304, 10088
        ]

        junction Junction1119 pe
        [
            position = 7328, 10072
        ]

        junction Junction1120 pe
        [
            position = 7352, 10056
        ]

        junction Junction1121 pe
        [
            position = 7864, 10088
        ]

        junction Junction1122 pe
        [
            position = 7888, 10072
        ]

        junction Junction1123 pe
        [
            position = 7912, 10056
        ]

        junction Junction1124 pe
        [
            position = 7752, 8832
        ]

        junction Junction1125 pe
        [
            position = 7800, 8800
        ]

        junction Junction1126 pe
        [
            position = 7776, 8816
        ]

        junction Junction1127 pe
        [
            position = 8416, 8832
        ]

        junction Junction1128 pe
        [
            position = 8440, 8816
        ]

        junction Junction1129 pe
        [
            position = 8464, 8800
        ]

        junction Junction1130 pe
        [
            position = 7784, 7768
        ]

        junction Junction1131 pe
        [
            position = 7808, 7752
        ]

        junction Junction1132 pe
        [
            position = 7832, 7736
        ]

        junction Junction1133 pe
        [
            position = 8368, 7768
        ]

        junction Junction1134 pe
        [
            position = 8392, 7752
        ]

        junction Junction1135 pe
        [
            position = 8416, 7736
        ]

        junction Junction1136 pe
        [
            position = 9000, 7736
        ]

        junction Junction1142 pe
        [
            position = 9056, 8832
        ]

        junction Junction1143 pe
        [
            position = 9080, 8816
        ]

        junction Junction1144 pe
        [
            position = 9104, 8800
        ]

        junction Junction1145 pe
        [
            position = 9216, 8832
        ]

        junction Junction1146 pe
        [
            position = 9200, 8816
        ]

        junction Junction1147 pe
        [
            position = 9184, 8800
        ]

        junction Junction1148 pe
        [
            position = 9856, 8184
        ]

        junction Junction1149 pe
        [
            position = 9880, 8168
        ]

        junction Junction1150 pe
        [
            position = 9904, 8152
        ]

        junction Junction1151 pe
        [
            position = 10384, 8184
        ]

        junction Junction1152 pe
        [
            position = 10408, 8168
        ]

        junction Junction1153 pe
        [
            position = 10432, 8152
        ]

        junction Junction1157 pe
        [
            position = 9808, 8832
        ]

        junction Junction1158 pe
        [
            position = 9832, 8816
        ]

        junction Junction1159 pe
        [
            position = 9856, 8800
        ]

        junction Junction1160 pe
        [
            position = 10432, 8832
        ]

        junction Junction1161 pe
        [
            position = 10464, 8816
        ]

        junction Junction1162 pe
        [
            position = 10488, 8800
        ]

        junction Junction1171 pe
        [
            position = 12824, 8184
        ]

        junction Junction1172 pe
        [
            position = 12848, 8168
        ]

        junction Junction1173 pe
        [
            position = 12872, 8152
        ]

        junction Junction1174 pe
        [
            position = 13416, 8184
        ]

        junction Junction1175 pe
        [
            position = 13440, 8168
        ]

        junction Junction1176 pe
        [
            position = 13464, 8152
        ]

        junction Junction1177 pe
        [
            position = 11160, 8832
        ]

        junction Junction1178 pe
        [
            position = 11176, 8816
        ]

        junction Junction1179 pe
        [
            position = 11208, 8800
        ]

        junction Junction1180 pe
        [
            position = 10984, 10056
        ]

        junction Junction1181 pe
        [
            position = 10936, 10088
        ]

        junction Junction1182 pe
        [
            position = 10960, 10072
        ]

        junction Junction1183 pe
        [
            position = 10392, 10056
        ]

        junction Junction1184 pe
        [
            position = 10376, 10072
        ]

        junction Junction1185 pe
        [
            position = 10344, 10088
        ]

        junction Junction1189 pe
        [
            position = 10152, 10688
        ]

        junction Junction1190 pe
        [
            position = 10176, 10672
        ]

        junction Junction1191 pe
        [
            position = 10200, 10656
        ]

        junction Junction1192 pe
        [
            position = 10960, 10672
        ]

        junction Junction1193 pe
        [
            position = 10936, 10688
        ]

        junction Junction1194 pe
        [
            position = 10984, 10656
        ]

        junction Junction1195 pe
        [
            position = 11576, 10688
        ]

        junction Junction1196 pe
        [
            position = 11600, 10672
        ]

        junction Junction1197 pe
        [
            position = 11624, 10656
        ]

        junction Junction1198 pe
        [
            position = 12344, 10688
        ]

        junction Junction1199 pe
        [
            position = 12368, 10672
        ]

        junction Junction1200 pe
        [
            position = 12392, 10656
        ]

        junction Junction1201 pe
        [
            position = 13072, 10688
        ]

        junction Junction1202 pe
        [
            position = 13096, 10672
        ]

        junction Junction1203 pe
        [
            position = 13120, 10656
        ]

        junction Junction1206 pe
        [
            position = 13824, 10656
        ]

        junction Junction1211 pe
        [
            position = 10904, 8184
        ]

        junction Junction1212 pe
        [
            position = 10928, 8168
        ]

        junction Junction1213 pe
        [
            position = 10952, 8152
        ]

        junction Junction1214 pe
        [
            position = 11472, 8184
        ]

        junction Junction1215 pe
        [
            position = 11488, 8168
        ]

        junction Junction1216 pe
        [
            position = 11520, 8152
        ]

        junction Junction1217 pe
        [
            position = 12168, 8184
        ]

        junction Junction1218 pe
        [
            position = 12192, 8168
        ]

        junction Junction1225 pe
        [
            position = 12216, 8144
        ]

        junction Junction1226 pe
        [
            position = 9496, 10056
        ]

        junction Junction1235 pe
        [
            position = 11544, 10832
        ]

        junction Junction1236 pe
        [
            position = 13728, 10856
        ]

        junction Junction1237 pe
        [
            position = 9712, 10056
        ]

        junction Junction1238 pe
        [
            position = 9688, 10072
        ]

        junction Junction1239 pe
        [
            position = 9664, 10088
        ]

        comment Comment9 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 716</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kVAr  </p></body></html> ENDCOMMENT 
        [
            position = 12176, 10480
        ]

        comment Comment13 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 715</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 10 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 11408, 10512
        ]

        comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 714</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 120 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 80 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 10680, 10496
        ]

        comment Comment17 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 713</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 35 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 9968, 10496
        ]

        comment Comment18 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 712</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 35 kVAr  </p></body></html> ENDCOMMENT 
        [
            position = 9792, 9928
        ]

        comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 711</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 45 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 30 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 10472, 9920
        ]

        comment Comment20 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 710</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 11040, 9912
        ]

        comment Comment21 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 709</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 10968, 8664
        ]

        comment Comment22 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 708</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 200 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 100 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 10240, 8664
        ]

        comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 707</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 200 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 100 kVAr  </p></body></html> ENDCOMMENT 
        [
            position = 9624, 8656
        ]

        comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 706</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 8864, 8664
        ]

        comment Comment25 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 733</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 13864, 8000
        ]

        comment Comment26 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 732</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 210 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 100 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 13264, 7992
        ]

        comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 731</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 150 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 70 kVAr  </p></body></html> ENDCOMMENT 
        [
            position = 12664, 7992
        ]

        comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 730</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 200 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 600 kVAr  </p></body></html> ENDCOMMENT 
        [
            position = 11968, 7968
        ]

        comment Comment29 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 729</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 120 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 70 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 11336, 8000
        ]

        comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 728</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 10768, 8016
        ]

        comment Comment31 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 727</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 25 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 10240, 8008
        ]

        comment Comment32 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 726</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 25 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 9688, 8016
        ]

        comment Comment33 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 705</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 30 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 8240, 8656
        ]

        comment Comment34 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 704</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 120 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 80 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 7592, 8640
        ]

        comment Comment35 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 703</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kVAr  </p></body></html> ENDCOMMENT 
        [
            position = 6736, 8664
        ]

        comment Comment38 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 724</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 420 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 200 kVAr  </p></body></html> ENDCOMMENT 
        [
            position = 8264, 7584
        ]

        comment Comment37 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 723</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 50 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 7664, 7584
        ]

        comment Comment39 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 725</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 420 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 200 kVAr   </p></body></html> ENDCOMMENT 
        [
            position = 8784, 7584
        ]

        comment Comment40 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 702</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 100 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 60 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 6008, 8680
        ]

        comment Comment41 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 720</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 7224, 9904
        ]

        comment Comment36 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 719</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 6616, 9920
        ]

        comment Comment42 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 721</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kVAr  </p></body></html> ENDCOMMENT 
        [
            position = 7744, 9888
        ]

        comment Comment43 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 722</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 8440, 9920
        ]

        comment Comment44 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 701</p></body></html> ENDCOMMENT 
        [
            position = 5456, 8696
        ]

        comment Comment6 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 718 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kVAr </p></body></html> ENDCOMMENT 
        [
            position = 13600, 10520
        ]

        comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 717 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kVAr  </p></body></html> ENDCOMMENT 
        [
            position = 12896, 10520
        ]

        comment Comment45 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:20pt; font-weight:600;">IEEE 33 BUS - RADIAL SYSTEM + HIGH IMPEDANCE FAULT MODEL</span></p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;">Developed by: </span>Prof. Adriano P. de Morais, Aldair Wontroba, Prof. Fernando K. Guarda and Jhonatan  A. Cassol</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;">Contact: </span>adriano@ctism.ufsm.br, jhonatancassol@gmail.com</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;">Research Group:</span> Centro de Excelência em Energia e Sistemas de Potência (LAPES/CEESP)</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;">Federal University of Santa Maria - UFSM</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Santa Maria, RS, Brazil </p></body></html> ENDCOMMENT 
        [
            position = 5496, 8128
        ]

        comment Comment46 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Core coupling</p></body></html> ENDCOMMENT 
        [
            position = 7592, 8736
        ]

        comment Comment48 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Core coupling</p></body></html> ENDCOMMENT 
        [
            position = 10968, 8744
        ]

        comment Comment50 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Core coupling</p></body></html> ENDCOMMENT 
        [
            position = 11408, 10592
        ]

        comment Comment52 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Core coupling</p></body></html> ENDCOMMENT 
        [
            position = 10232, 8096
        ]

        connect iHIF718rms.p_node SwHIF718.a_out as Connection7607
        connect SwHIF725.a_out iHIF725rms.p_node as Connection7630
        connect SE.B2 "Line 700.P3" as Connection7637
        connect "Line 700.P5" SE.A2 as Connection7638
        connect "Line 700.P1" SE.C2 as Connection7639
        connect BUS_701.B1 "Line 700.P4" as Connection7644
        connect "Line 700.P6" BUS_701.A1 as Connection7645
        connect "Line 700.P2" BUS_701.C1 as Connection7646
        connect BUS_702.B1 "Line 701.P4" as Connection7678
        connect "Line 701.P6" BUS_702.A1 as Connection7679
        connect BUS_702.C1 "Line 701.P2" as Connection7680
        connect "Line 718.P5" Junction1099 as Connection7681
        connect Junction1099 "Line 702.P5" as Connection7682
        [
            breakpoints = 6320, 8800
        ]
        connect "Line 702.P3" Junction1100 as Connection7692
        connect Junction1100 "Line 718.P3" as Connection7693
        [
            breakpoints = 6304, 8816; 6304, 8816
        ]
        connect "Line 718.P1" Junction1101 as Connection7695
        connect Junction1101 "Line 702.P1" as Connection7696
        [
            breakpoints = 6288, 8832; 6288, 8832
        ]
        connect BUS_702.C2 Junction1102 as Connection7698
        connect Junction1102 Junction1101 as Connection7699
        connect Pg702.C Junction1102 as Connection7700
        connect BUS_702.B2 Junction1103 as Connection7701
        connect Junction1103 Junction1100 as Connection7702
        connect Pg702.B Junction1103 as Connection7703
        connect Pg702.A Junction1104 as Connection7706
        connect gnd_700.node SE.GND as Connection7708
        connect BUS_703.A1 "Line 702.P6" as Connection7721
        connect "Line 702.P4" BUS_703.B1 as Connection7722
        connect BUS_703.C1 "Line 702.P2" as Connection7723
        connect "Line 703.P5" Junction1107 as Connection7724
        connect Junction1107 "Line 722.P5" as Connection7725
        [
            breakpoints = 7184, 8800
        ]
        connect "Line 722.P3" Junction1108 as Connection7727
        connect Junction1108 "Line 703.P3" as Connection7728
        [
            breakpoints = 7200, 8816
        ]
        connect "Line 722.P1" Junction1109 as Connection7730
        connect Junction1109 "Line 703.P1" as Connection7731
        [
            breakpoints = 7216, 8832
        ]
        connect BUS_703.C2 Junction1110 as Connection7733
        connect Junction1110 Junction1109 as Connection7734
        connect Pg703.C Junction1110 as Connection7735
        connect BUS_703.B2 Junction1111 as Connection7736
        connect Junction1111 Junction1108 as Connection7737
        connect Pg703.B Junction1111 as Connection7738
        connect Junction1112 Junction1107 as Connection7740
        connect Pg703.A Junction1112 as Connection7741
        connect gnd_703.node BUS_703.GND1 as Connection7743
        connect BUS_719.A1 "Line 718.P6" as Connection7747
        connect BUS_719.B1 "Line 718.P4" as Connection7748
        connect BUS_719.C1 "Line 718.P2" as Connection7749
        connect BUS_719.C2 Junction1114 as Connection7753
        connect Junction1114 "Line 719.P1" as Connection7754
        connect Pg719.C Junction1114 as Connection7755
        connect "Line 719.P3" Junction1115 as Connection7756
        connect Junction1115 BUS_719.B2 as Connection7757
        connect Pg719.B Junction1115 as Connection7758
        connect BUS_719.A2 Junction1116 as Connection7759
        connect Pg719.A Junction1116 as Connection7761
        connect BUS_720.A1 "Line 719.P6" as Connection7767
        connect BUS_720.B1 "Line 719.P4" as Connection7768
        connect BUS_720.C1 "Line 719.P2" as Connection7769
        connect BUS_720.C2 Junction1118 as Connection7773
        connect Junction1118 "Line 720.P1" as Connection7774
        connect Pg720.C Junction1118 as Connection7775
        connect "Line 720.P3" Junction1119 as Connection7776
        connect Junction1119 BUS_720.B2 as Connection7777
        connect Pg720.B Junction1119 as Connection7778
        connect BUS_720.A2 Junction1120 as Connection7779
        connect Junction1120 "Line 720.P5" as Connection7780
        connect Pg720.A Junction1120 as Connection7781
        connect BUS_721.A1 "Line 720.P6" as Connection7783
        connect "Line 720.P4" BUS_721.B1 as Connection7784
        connect "Line 720.P2" BUS_721.C1 as Connection7785
        connect "Line 721.P1" Junction1121 as Connection7789
        connect Junction1121 BUS_721.C2 as Connection7790
        connect Pg721.C Junction1121 as Connection7791
        connect "Line 721.P3" Junction1122 as Connection7792
        connect Junction1122 BUS_721.B2 as Connection7793
        connect Pg721.B Junction1122 as Connection7794
        connect BUS_721.A2 Junction1123 as Connection7795
        connect Junction1123 "Line 721.P5" as Connection7796
        connect Pg721.A Junction1123 as Connection7797
        connect BUS_722.A1 "Line 721.P6" as Connection7799
        connect BUS_722.B1 "Line 721.P4" as Connection7800
        connect BUS_722.C1 "Line 721.P2" as Connection7801
        connect Pg722.C BUS_722.C2 as Connection7802
        connect Pg722.B BUS_722.B2 as Connection7803
        connect Pg722.A BUS_722.A2 as Connection7804
        connect BUS_704.B1 "Line 703.P4" as Connection7806
        connect "Line 703.P6" BUS_704.A1 as Connection7807
        connect BUS_704.C1 "Line 703.P2" as Connection7808
        connect BUS_704.C2 Junction1124 as Connection7812
        connect Junction1124 "Line 704.P1" as Connection7813
        connect Pg704.C Junction1124 as Connection7814
        connect "Line 704.P5" Junction1125 as Connection7815
        connect Junction1125 BUS_704.A2 as Connection7816
        connect Pg704.A Junction1125 as Connection7817
        connect "Line 704.P3" Junction1126 as Connection7818
        connect Junction1126 BUS_704.B2 as Connection7819
        connect Pg704.B Junction1126 as Connection7820
        connect BUS_705.B1 "Line 704.P4" as Connection7822
        connect "Line 704.P6" BUS_705.A1 as Connection7823
        connect BUS_705.C1 "Line 704.P2" as Connection7824
        connect BUS_705.C2 Junction1127 as Connection7828
        connect Junction1127 "Line 705.P1" as Connection7829
        connect Pg705.C Junction1127 as Connection7830
        connect "Line 705.P3" Junction1128 as Connection7831
        connect Junction1128 BUS_705.B2 as Connection7832
        connect Pg705.B Junction1128 as Connection7833
        connect BUS_705.A2 Junction1129 as Connection7834
        connect Junction1129 "Line 705.P5" as Connection7835
        connect Pg705.A Junction1129 as Connection7836
        connect BUS_723.B1 "Line 722.P4" as Connection7838
        connect "Line 722.P6" BUS_723.A1 as Connection7839
        connect "Line 722.P2" BUS_723.C1 as Connection7840
        connect BUS_723.C2 Junction1130 as Connection7844
        connect Junction1130 "Line 723.P1" as Connection7845
        connect Pg723.C Junction1130 as Connection7846
        connect "Line 723.P3" Junction1131 as Connection7847
        connect Junction1131 BUS_723.B2 as Connection7848
        connect Pg723.B Junction1131 as Connection7849
        connect BUS_723.A2 Junction1132 as Connection7850
        connect Junction1132 "Line 723.P5" as Connection7851
        connect Pg723.A Junction1132 as Connection7852
        connect BUS_724.A1 "Line 723.P6" as Connection7854
        connect "Line 723.P4" BUS_724.B1 as Connection7855
        connect BUS_724.C1 "Line 723.P2" as Connection7856
        connect BUS_724.C2 Junction1133 as Connection7860
        connect Junction1133 "Line 724.P1" as Connection7861
        connect Pg724.C Junction1133 as Connection7862
        connect "Line 724.P3" Junction1134 as Connection7863
        connect Junction1134 BUS_724.B2 as Connection7864
        connect Pg724.B Junction1134 as Connection7865
        connect BUS_724.A2 Junction1135 as Connection7866
        connect Junction1135 "Line 724.P5" as Connection7867
        connect Pg724.A Junction1135 as Connection7868
        connect BUS_725.B1 "Line 724.P4" as Connection7871
        connect "Line 724.P6" BUS_725.A1 as Connection7872
        connect "Line 724.P2" BUS_725.C1 as Connection7873
        connect BUS_725.C2 Pg725.C as Connection7874
        connect Pg725.B BUS_725.B2 as Connection7875
        connect BUS_725.A2 Junction1136 as Connection7878
        connect Junction1136 Pg725.A as Connection7879
        connect SwHIF725.a_in Junction1136 as Connection7880
        connect BUS_706.B1 "Line 705.P4" as Connection7891
        connect "Line 705.P6" BUS_706.A1 as Connection7892
        connect BUS_706.C1 "Line 705.P2" as Connection7893
        connect BUS_706.C2 Junction1142 as Connection7907
        connect Pg706.C Junction1142 as Connection7909
        connect BUS_706.B2 Junction1143 as Connection7910
        connect Pg706.B Junction1143 as Connection7912
        connect BUS_706.A2 Junction1144 as Connection7913
        connect Pg706.A Junction1144 as Connection7915
        connect Junction1142 Junction1145 as Connection7922
        connect Junction1145 "Line 706.P1" as Connection7923
        [
            breakpoints = 9336, 8832
        ]
        connect "Line 725.P1" Junction1145 as Connection7924
        connect "Line 706.P3" Junction1146 as Connection7925
        [
            breakpoints = 9320, 8816
        ]
        connect Junction1146 Junction1143 as Connection7926
        connect "Line 725.P3" Junction1146 as Connection7927
        connect Junction1147 "Line 706.P5" as Connection7929
        [
            breakpoints = 9304, 8800
        ]
        connect "Line 725.P5" Junction1147 as Connection7930
        [
            breakpoints = 9184, 8152; 9184, 8800
        ]
        connect BUS_726.B1 "Line 725.P4" as Connection7931
        connect "Line 725.P6" BUS_726.A1 as Connection7932
        connect "Line 725.P2" BUS_726.C1 as Connection7935
        connect BUS_726.C2 Junction1148 as Connection7937
        connect Junction1148 "Line 726.P1" as Connection7938
        connect Pg726.C Junction1148 as Connection7939
        connect "Line 726.P3" Junction1149 as Connection7940
        connect Junction1149 BUS_726.B2 as Connection7941
        connect Pg726.B Junction1149 as Connection7942
        connect BUS_726.A2 Junction1150 as Connection7943
        connect Junction1150 "Line 726.P5" as Connection7944
        connect Pg726.A Junction1150 as Connection7945
        connect BUS_727.A1 "Line 726.P6" as Connection7947
        connect "Line 726.P4" BUS_727.B1 as Connection7948
        connect BUS_727.C1 "Line 726.P2" as Connection7949
        connect BUS_727.C2 Junction1151 as Connection7953
        connect Junction1151 "Line 727.P1" as Connection7954
        connect Pg727.C Junction1151 as Connection7955
        connect "Line 727.P3" Junction1152 as Connection7956
        connect Junction1152 BUS_727.B2 as Connection7957
        connect Pg727.B Junction1152 as Connection7958
        connect BUS_727.A2 Junction1153 as Connection7959
        connect Junction1153 "Line 727.P5" as Connection7960
        connect Pg727.A Junction1153 as Connection7961
        connect BUS_707.B1 "Line 706.P4" as Connection7983
        connect "Line 706.P6" BUS_707.A1 as Connection7984
        connect BUS_707.C1 "Line 706.P2" as Connection7985
        connect BUS_707.C2 Junction1157 as Connection7989
        connect Pg707.C Junction1157 as Connection7991
        connect Junction1158 BUS_707.B2 as Connection7993
        connect Pg707.B Junction1158 as Connection7994
        connect Junction1159 "Line 707.P5" as Connection7996
        connect Pg707.A Junction1159 as Connection7997
        connect BUS_708.C1 "Line 707.P2" as Connection7999
        connect "Line 707.P4" BUS_708.B1 as Connection8000
        connect BUS_708.A1 "Line 707.P6" as Connection8001
        connect BUS_708.C2 Junction1160 as Connection8005
        connect Junction1160 "Line 708.P1" as Connection8006
        connect Pg708.C Junction1160 as Connection8007
        connect "Line 708.P3" Junction1161 as Connection8008
        connect Junction1161 BUS_708.B2 as Connection8009
        connect Pg708.B Junction1161 as Connection8010
        connect BUS_708.A2 Junction1162 as Connection8011
        connect Junction1162 "Line 708.P5" as Connection8012
        connect Pg708.A Junction1162 as Connection8013
        connect BUS_731.B1 "Line 730.P4" as Connection8060
        connect "Line 730.P6" BUS_731.A1 as Connection8061
        connect BUS_731.C1 "Line 730.P2" as Connection8062
        connect BUS_731.C2 Junction1171 as Connection8066
        connect Junction1171 "Line 731.P1" as Connection8067
        connect Pg731.C Junction1171 as Connection8068
        connect "Line 731.P3" Junction1172 as Connection8069
        connect Junction1172 BUS_731.B2 as Connection8070
        connect Pg731.B Junction1172 as Connection8071
        connect BUS_731.A2 Junction1173 as Connection8072
        connect Junction1173 "Line 731.P5" as Connection8073
        connect Pg731.A Junction1173 as Connection8074
        connect BUS_732.B1 "Line 731.P4" as Connection8076
        connect "Line 731.P6" BUS_732.A1 as Connection8077
        connect BUS_732.C1 "Line 731.P2" as Connection8078
        connect BUS_732.C2 Junction1174 as Connection8082
        connect Junction1174 "Line 732.P1" as Connection8083
        connect Pg732.C Junction1174 as Connection8084
        connect "Line 732.P3" Junction1175 as Connection8085
        connect Junction1175 BUS_732.B2 as Connection8086
        connect Pg732.B Junction1175 as Connection8087
        connect BUS_732.A2 Junction1176 as Connection8088
        connect Junction1176 "Line 732.P5" as Connection8089
        connect Pg732.A Junction1176 as Connection8090
        connect BUS_733.B1 "Line 732.P4" as Connection8092
        connect "Line 732.P6" BUS_733.A1 as Connection8093
        connect BUS_733.C1 "Line 732.P2" as Connection8094
        connect Pg733.C BUS_733.C2 as Connection8095
        connect BUS_733.B2 Pg733.B as Connection8096
        connect Pg733.A BUS_733.A2 as Connection8097
        connect BUS_709.B1 "Line 708.P4" as Connection8102
        connect "Line 708.P6" BUS_709.A1 as Connection8103
        connect BUS_709.C1 "Line 708.P2" as Connection8104
        connect BUS_709.C2 Junction1177 as Connection8117
        connect Junction1177 "Line 709.P2" as Connection8118
        connect Pg709.C Junction1177 as Connection8119
        connect "Line 709.P4" Junction1178 as Connection8120
        [
            breakpoints = 11520, 8816; 11320, 8816; 11320, 8816; 11320, 8816
        ]
        connect Junction1178 BUS_709.B2 as Connection8121
        connect Pg709.B Junction1178 as Connection8122
        connect "Line 709.P6" Junction1179 as Connection8123
        [
            breakpoints = 11504, 8800; 11344, 8800
        ]
        connect Junction1179 BUS_709.A2 as Connection8124
        connect Pg709.A Junction1179 as Connection8125
        connect "Line 709.P5" BUS_710.A1 as Connection8145
        [
            breakpoints = 11208, 10056
        ]
        connect "Line 709.P1" BUS_710.C1 as Connection8144
        [
            breakpoints = 11168, 10088; 11168, 10088
        ]
        connect BUS_710.B1 "Line 709.P3" as Connection8146
        [
            breakpoints = 11192, 10072
        ]
        connect "Line 710.P5" Junction1180 as Connection8147
        connect Junction1180 BUS_710.A2 as Connection8148
        connect Pg710.A Junction1180 as Connection8149
        connect BUS_710.C2 Junction1181 as Connection8151
        connect Junction1181 "Line 710.P1" as Connection8152
        connect Pg710.C Junction1181 as Connection8153
        connect Pg710.B Junction1182 as Connection8154
        connect Junction1182 "Line 710.P3" as Connection8155
        connect BUS_710.B2 Junction1182 as Connection8156
        connect BUS_711.B1 "Line 710.P4" as Connection8158
        connect "Line 710.P6" BUS_711.A1 as Connection8159
        connect BUS_711.C1 "Line 710.P2" as Connection8160
        connect BUS_711.A2 Junction1183 as Connection8164
        connect Junction1183 "Line 711.P6" as Connection8165
        connect Pg711.A Junction1183 as Connection8166
        connect "Line 711.P4" Junction1184 as Connection8167
        connect Junction1184 BUS_711.B2 as Connection8168
        connect Pg711.B Junction1184 as Connection8169
        connect BUS_711.C2 Junction1185 as Connection8170
        connect Junction1185 "Line 711.P2" as Connection8171
        connect Pg711.C Junction1185 as Connection8172
        connect "Line 712.P5" BUS_713.C1 as Connection8202
        connect BUS_713.B1 "Line 712.P3" as Connection8203
        connect "Line 712.P1" BUS_713.A1 as Connection8204
        connect BUS_713.C2 Junction1189 as Connection8208
        connect Junction1189 "Line 713.P1" as Connection8209
        connect Pg713.C Junction1189 as Connection8210
        connect BUS_713.B2 Junction1190 as Connection8211
        connect Junction1190 "Line 713.P3" as Connection8212
        connect Pg713.B Junction1190 as Connection8213
        connect "Line 713.P5" Junction1191 as Connection8214
        connect Junction1191 BUS_713.A2 as Connection8215
        connect Pg713.A Junction1191 as Connection8216
        connect BUS_714.B1 "Line 713.P4" as Connection8218
        connect "Line 713.P6" BUS_714.A1 as Connection8219
        connect BUS_714.C1 "Line 713.P2" as Connection8220
        connect BUS_714.B2 Junction1192 as Connection8224
        connect Junction1192 "Line 714.P3" as Connection8225
        connect Pg714.B Junction1192 as Connection8226
        connect BUS_714.C2 Junction1193 as Connection8227
        connect Junction1193 "Line 714.P1" as Connection8228
        connect Pg714.C Junction1193 as Connection8229
        connect "Line 714.P5" Junction1194 as Connection8230
        connect Junction1194 BUS_714.A2 as Connection8231
        connect Pg714.A Junction1194 as Connection8232
        connect BUS_737.B1 "Line 714.P4" as Connection8234
        connect "Line 714.P6" BUS_737.A1 as Connection8235
        connect BUS_737.C1 "Line 714.P2" as Connection8236
        connect "Line 715.P1" Junction1195 as Connection8240
        connect Junction1195 BUS_737.C2 as Connection8241
        connect Pg715.C Junction1195 as Connection8242
        connect "Line 715.P3" Junction1196 as Connection8243
        connect Junction1196 BUS_737.B2 as Connection8244
        connect Pg715.B Junction1196 as Connection8245
        connect BUS_737.A2 Junction1197 as Connection8246
        connect Junction1197 "Line 715.P5" as Connection8247
        connect Pg715.A Junction1197 as Connection8248
        connect BUS_716.B1 "Line 715.P4" as Connection8252
        connect "Line 715.P6" BUS_716.A1 as Connection8253
        connect BUS_716.C1 "Line 715.P2" as Connection8254
        connect "Line 716.P1" Junction1198 as Connection8258
        connect Junction1198 BUS_716.C2 as Connection8259
        connect Pg716.C Junction1198 as Connection8260
        connect BUS_716.B2 Junction1199 as Connection8261
        connect Junction1199 "Line 716.P3" as Connection8262
        connect Pg716.B Junction1199 as Connection8263
        connect BUS_716.A2 Junction1200 as Connection8264
        connect Junction1200 "Line 716.P5" as Connection8265
        connect Pg716.A Junction1200 as Connection8266
        connect BUS_717.B1 "Line 716.P4" as Connection8268
        connect BUS_717.A1 "Line 716.P6" as Connection8269
        connect "Line 716.P2" BUS_717.C1 as Connection8270
        connect BUS_717.C2 Junction1201 as Connection8274
        connect Junction1201 "Line 717.P1" as Connection8275
        connect Pg717.C Junction1201 as Connection8276
        connect BUS_717.B2 Junction1202 as Connection8277
        connect Junction1202 "Line 717.P3" as Connection8278
        connect Pg717.B Junction1202 as Connection8279
        connect "Line 717.P5" Junction1203 as Connection8280
        connect Junction1203 BUS_717.A2 as Connection8281
        connect Pg717.A Junction1203 as Connection8282
        connect BUS_718.B1 "Line 717.P4" as Connection8288
        connect "Line 717.P6" BUS_718.A1 as Connection8289
        connect BUS_718.C1 "Line 717.P2" as Connection8290
        connect BUS_718.C2 Pg718.C as Connection8291
        connect Pg718.B BUS_718.B2 as Connection8292
        connect Junction1206 Pg718.A as Connection8299
        connect SwHIF718.a_in Junction1206 as Connection8300
        connect V_REF_goto1 SE.Out1 as Connection8309
        connect Junction1104 Junction1099 as Connection8318
        [
            breakpoints = 6216, 8800; 6248, 8800
        ]
        connect BUS_728.B1 "Line 727.P4" as Connection8338
        connect "Line 727.P6" BUS_728.A1 as Connection8339
        connect BUS_728.C1 "Line 727.P2" as Connection8340
        connect Pg728.C Junction1211 as Connection8341
        connect Junction1211 "Line 728.P1" as Connection8342
        [
            breakpoints = 10904, 8184
        ]
        connect BUS_728.C2 Junction1211 as Connection8343
        connect Pg728.B Junction1212 as Connection8344
        connect Junction1212 "Line 728.P3" as Connection8345
        [
            breakpoints = 10928, 8168
        ]
        connect BUS_728.B2 Junction1212 as Connection8346
        connect Pg728.A Junction1213 as Connection8347
        connect Junction1213 "Line 728.P5" as Connection8348
        [
            breakpoints = 10952, 8152
        ]
        connect BUS_728.A2 Junction1213 as Connection8349
        connect BUS_729.B1 "Line 728.P4" as Connection8356
        connect "Line 728.P6" BUS_729.A1 as Connection8357
        connect "Line 728.P2" BUS_729.C1 as Connection8358
        connect "Line 729.P1" Junction1214 as Connection8359
        connect Junction1214 Pg729.C as Connection8360
        [
            breakpoints = 11472, 8184
        ]
        connect BUS_729.C2 Junction1214 as Connection8361
        connect "Line 729.P3" Junction1215 as Connection8362
        connect Junction1215 Pg729.B as Connection8363
        [
            breakpoints = 11496, 8168
        ]
        connect BUS_729.B2 Junction1215 as Connection8364
        connect Pg729.A Junction1216 as Connection8365
        connect Junction1216 "Line 729.P5" as Connection8366
        [
            breakpoints = 11520, 8152; 11520, 8152
        ]
        connect BUS_729.A2 Junction1216 as Connection8367
        connect BUS_730.B1 "Line 729.P4" as Connection8371
        connect "Line 729.P6" BUS_730.A1 as Connection8372
        connect BUS_730.C1 "Line 729.P2" as Connection8373
        connect Pg730.C Junction1217 as Connection8374
        connect Junction1217 "Line 730.P1" as Connection8375
        [
            breakpoints = 12168, 8184
        ]
        connect BUS_730.C2 Junction1217 as Connection8376
        connect "Line 730.P3" Junction1218 as Connection8377
        connect Junction1218 Pg730.B as Connection8378
        [
            breakpoints = 12192, 8168
        ]
        connect BUS_730.B2 Junction1218 as Connection8379
        connect Junction1147 Junction1144 as Connection8416
        [
            breakpoints = 9176, 8800; 9160, 8800; 9104, 8800
        ]
        connect Junction1104 BUS_702.A2 as Connection8424
        [
            breakpoints = 6216, 8800; 6216, 8800; 6176, 8800; 6160, 8800
        ]
        connect "Line 719.P5" Junction1116 as Connection8429
        [
            breakpoints = 6824, 10056
        ]
        connect BUS_703.A2 Junction1112 as Connection8434
        [
            breakpoints = 6928, 8800
        ]
        connect Pg730.A Junction1225 as Connection8441
        connect Junction1225 BUS_730.A2 as Connection8442
        [
            breakpoints = 12216, 8152; 12208, 8152
        ]
        connect SwHIF30.in Junction1225 as Connection8443
        connect SwHIF30.out "Line 730.P5" as Connection8444
        connect iHIF730rms.p_node SwHIF30.HIF as Connection8445
        connect "Line 712.P2" Junction1226 as Connection8510
        connect Junction1206 BUS_718.A2 as Connection8559
        [
            breakpoints = 13824, 10656; 13792, 10656
        ]
        connect "Line 701.P1" BUS_701.C2 as Connection8569
        [
            breakpoints = 5576, 8832
        ]
        connect BUS_701.B2 "Line 701.P3" as Connection8568
        [
            breakpoints = 5600, 8816
        ]
        connect "Line 701.P5" BUS_701.A2 as Connection8567
        [
            breakpoints = 5624, 8800; 5600, 8800
        ]
        connect iSC712rms.p_node SC1P.a_out as Connection8570
        connect Pg704.N gnd4.node as Connection8608
        connect Pg705.N gnd5.node as Connection8609
        connect Pg707.N gnd10.node as Connection8616
        connect Pg708.N gnd11.node as Connection8617
        connect Pg709.N gnd12.node as Connection8618
        connect gnd13.node Pg723.N as Connection8619
        connect Pg724.N gnd14.node as Connection8620
        connect Pg726.N gnd17.node as Connection8628
        connect gnd18.node Pg727.N as Connection8629
        connect Pg729.N gnd21.node as Connection8634
        connect Pg731.N gnd24.node as Connection8640
        connect gnd25.node Pg732.N as Connection8641
        connect Pg733.N gnd26.node as Connection8642
        connect gnd28.node Pg720.N as Connection8647
        connect gnd29.node Pg721.N as Connection8648
        connect gnd30.node Pg722.N as Connection8649
        connect Pg711.N gnd33.node as Connection8655
        connect gnd34.node Pg710.N as Connection8656
        connect gnd35.node Pg713.N as Connection8657
        connect gnd36.node Pg714.N as Connection8658
        connect Pg715.N Junction1235 as Connection8659
        connect Junction1235 BUS_737.GND2 as Connection8660
        connect gnd38.node Junction1235 as Connection8661
        connect gnd37.node BUS_737.GND1 as Connection8662
        connect Pg716.N gnd39.node as Connection8663
        connect Pg717.N gnd40.node as Connection8664
        connect BUS_718.GND Junction1236 as Connection8666
        [
            breakpoints = 13648, 10856
        ]
        connect Junction1236 Pg718.N as Connection8667
        [
            breakpoints = 13800, 10856
        ]
        connect gnd41.node Junction1236 as Connection8668
        connect iSC712rms.n_node gnd31.node as Connection8679
        [
            breakpoints = 9200, 10056
        ]
        connect SC1P.a_in Junction1226 as Connection8680
        [
            breakpoints = 9432, 10056
        ]
        connect Junction1159 BUS_707.A2 as Connection8693
        [
            breakpoints = 9856, 8800; 9856, 8800
        ]
        connect Junction1158 "Line 707.P3" as Connection8695
        [
            breakpoints = 9832, 8816; 9928, 8816
        ]
        connect Junction1157 "Line 707.P1" as Connection8696
        [
            breakpoints = 9808, 8832; 9944, 8832
        ]
        connect Pg703.N gnd1.node as Connection8697
        connect BUS_703.GND2 gnd43.node as Connection8698
        connect BUS_702.GND gnd_702.node as Connection8699
        connect Pg702.N gnd44.node as Connection8700
        connect gnd7.node Pg706.N as Connection8701
        connect Pg728.N gnd20.node as Connection8703
        connect gnd22.node Pg730.N as Connection8705
        connect BUS_730.GND gnd47.node as Connection8706
        connect Pg725.N gnd15.node as Connection8707
        connect BUS_725.GND gnd48.node as Connection8708
        connect gnd27.node Pg719.N as Connection8709
        connect BUS_706.Port2 gnd6.node as Connection8715
        connect gnd45.node BUS_727.Port1 as Connection8718
        connect gnd49.node BUS_727.Port2 as Connection8719
        connect gnd32.node BUS_712.GND as Connection8722
        connect Pg712.N gnd50.node as Connection8723
        connect gnd_704.node BUS_704.GND1 as Connection8724
        connect BUS_704.GND2 gnd51.node as Connection8725
        connect BUS_709.GND1 gnd8.node as Connection8726
        connect BUS_709.GND2 gnd9.node as Connection8727
        connect gnd23.node HIF730.Port2 as Connection8746
        connect iHIF730rms.n_node HIF730.Port1 as Connection8747
        connect gnd16.node HIF725.Port2 as Connection8751
        connect iHIF725rms.n_node HIF725.Port1 as Connection8752
        connect iHIF718rms.n_node HIF718.Port1 as Connection8753
        connect HIF718.Port2 gnd42.node as Connection8754
        connect "Line 711.P5" BUS_712.A1 as Connection8758
        connect "Line 711.P3" BUS_712.B1 as Connection8759
        connect "Line 711.P1" BUS_712.C1 as Connection8760
        connect Junction1237 BUS_712.A2 as Connection8761
        connect Junction1237 Junction1226 as Connection8762
        connect Junction1237 Pg712.A as Connection8763
        connect Junction1238 BUS_712.B2 as Connection8764
        connect Junction1238 Pg712.B as Connection8765
        connect Junction1238 "Line 712.P4" as Connection8766
        [
            breakpoints = 9512, 10072; 9512, 10672
        ]
        connect Junction1239 BUS_712.C2 as Connection8767
        connect Junction1239 "Line 712.P6" as Connection8768
        [
            breakpoints = 9528, 10128; 9528, 10688
        ]
        connect Junction1239 Pg712.C as Connection8769
    }

    logically_deleted {
        "BUS_737.Core Coupling 1"
    }

    default {
        gen_adv_c_function {
            input_terminals = "real in;"
            input_terminals_show_labels = "False;"
            input_terminals_feedthrough = "True;"
            input_terminals_dimensions = "inherit;"
            output_terminals = "real out;"
            output_terminals_show_labels = "False;"
            output_terminals_feedthrough = "True;"
            output_terminals_dimensions = "inherit;"
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            library_load_type = "Compile-time load"
            dll_file_path = ""
            dll_file_path_full = ""
            h_file_path = ""
            h_file_path_full = ""
            add_src_path = ""
            add_src_path_full = ""
            convert_to_relative_dll = "True"
            convert_to_relative_src = "True"
            arb_defs = ""
            add_macros = ""
            skip_pre_cmpl_check = "False"
            generate_for_hil = "True"
            execution_rate = "inherit"
            _supported_platforms = "[\'generic\']"
            refresh = "refresh"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            input_terminals = "real in;"
            input_terminals_show_labels = "False;"
            input_terminals_feedthrough = "True;"
            input_terminals_dimensions = "inherit;"
            output_terminals = "real out;"
            output_terminals_show_labels = "False;"
            output_terminals_feedthrough = "True;"
            output_terminals_dimensions = "inherit;"
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_rms_value {
            op_mode = "PLL based"
            frequency = "50"
            period_timeout = "0.5"
            period_deadband = "0"
            filter_en = "False"
            lpf_cutoff = "500"
            frequency_src = "Internal"
            execution_rate = "inherit"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
            _tunable = "False"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/(51) AC Inverse Time Overcurrent" {
            In = "2000"
            TOC_thresh = "1"
            TOC_timeDial = "1"
            TOC_curve_type = "U1 - Moderatly Inverse (US)"
            curve_prm_A = "6.407"
            curve_prm_B = "0.025"
            curve_prm_P = "2.0"
            curve_prm_C = "3.0"
            curve_prm_Pr = "1.0"
            EM_reset = "True"
            block_fnc = "False"
            trip_mem = "True"
            execution_rate = "100e-6"
        }

        "core/Constant Impedance Load" {
            fn = "60"
            conn_type = "Y"
            enable_neutral = "False"
            set_balanced = "True"
            Vn_3ph = "480"
            Sn_3ph = "1.0e6"
            pf_mode_3ph = "Unit"
            pf_3ph = "0.9"
            VAn = "480/(3**0.5)"
            VAB = "480"
            SAn = "1.0e6/3"
            SAB = "1.0e6/3"
            pf_modeA = "Unit"
            pfA = "0.9"
            VBn = "480/(3**0.5)"
            VBC = "480"
            SBn = "1.0e6/3"
            SBC = "1.0e6/3"
            pf_modeB = "Unit"
            pfB = "0.9"
            VCn = "480/(3**0.5)"
            VCA = "480"
            SCn = "1.0e6/3"
            SCA = "1.0e6/3"
            pf_modeC = "Unit"
            pfC = "0.9"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Current RMS" {
            op_mode = "PLL based"
            frequency = "50"
            pin_to_system_cpu = "True"
            Tfast = "100e-6"
            Tslow = "200e-6"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "False"
            nd_msr_estimation = "false"
        }

        "core/Diode Leg" {
            show_monitoring = "False"
            PESB_Optimization = "True"
            switches_names_at_mask = "[]"
            losses_estimation = "False"
            Import_diode_xml = "not selected"
            Vd = "1.2"
            Rd = "0"
            i_sw = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw = "[0.0, 600.0]"
            temp_sw = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            vd_table_out = "[1.2, 1.2, 1.2, 1.2, 1.2]"
            ed_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            temp_estimation = "False"
            thermal_networks_type = "Foster"
            diode_Rth = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            loss_exec_rate = "100e-6"
            visualize_luts = "Visualize Lookup Tables"
        }

        "core/Four Phase TLM Core Coupling" {
            type = "Inductive"
            capacitance = "1e-3"
            inductance = "1e-3"
            embedded_components = "False"
            ratio_type = "Automatic"
            ratio = "0.1"
            cpl_connection = "3 CPLs, Star Connection"
        }

        "core/Meter Split" {
            van = "True"
            vbn = "True"
            vcn = "True"
            van_rms = "False"
            vbn_rms = "False"
            vcn_rms = "False"
            vln_rms = "False"
            vn = "False"
            vn_rms = "False"
            vab = "False"
            vbc = "False"
            vca = "False"
            vab_rms = "False"
            vbc_rms = "False"
            vca_rms = "False"
            vll_rms = "False"
            ia = "False"
            ib = "False"
            ic = "False"
            ia_rms = "False"
            ib_rms = "False"
            ic_rms = "False"
            i_rms = "False"
            ineutral = "False"
            in_rms = "False"
            freq = "False"
            power_p = "False"
            power_q = "False"
            power_s = "False"
            power_pf = "False"
            enable_extra_in = "No"
            power_pa = "False"
            power_pb = "False"
            power_pc = "False"
            power_qa = "False"
            power_qb = "False"
            power_qc = "False"
            power_sa = "False"
            power_sb = "False"
            power_sc = "False"
            power_pfa = "False"
            power_pfb = "False"
            power_pfc = "False"
        }

        "core/RL Section" {
            model_def = "R-L"
            unit_sys = "imperial"
            num_of_phases = "3"
            resistance_per_l = "1"
            resistance_per_l_mile = "1"
            inductance_per_l = "1e-3"
            inductance_per_l_mile = "1e-3"
            length = "1.0"
            length_mile = "1.0"
            power = "500.0"
            voltage = "11.0"
            frequency = "50.0"
            R_value = "21.55"
            L_value = "0.00842"
            embedded_coupling = "False"
            ratio_type = "Automatic"
            ratio = "0.1"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Single Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
            switching = "any current"
            hide_int_meas = "False"
        }

        "core/Three Phase Voltage Source" {
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Three-phase Meter" {
            R = "1e5"
            n_cycles = "1"
            Ts = "100e-6"
            enable_probes = "True"
            enable_out = "True"
            remove_snubber = "False"
            enable_bandwidth = "False"
            bandwidth = "10e3"
            VAn = "True"
            VBn = "True"
            VCn = "True"
            VAB = "False"
            VBC = "False"
            VCA = "False"
            VN = "False"
            IA = "True"
            IB = "True"
            IC = "True"
            IN = "False"
            freq = "False"
            VLn_rms = "False"
            VLL_rms = "False"
            VLn_avg_rms = "False"
            VLL_avg_rms = "False"
            VN_rms = "False"
            I_rms = "False"
            I_avg_rms = "False"
            IN_rms = "False"
            P_method = "alpha-beta"
            enable_extra_out = "False"
            P_meas = "False"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Variable Resistor" {
            inductance = "1e-3"
            initial_current = "0.0"
            hide_int_meas = "False"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        
        # General system parameters
        f=60
        w=2*np.pi*f
        
        V_ll=12.66e3
        Vln=V_ll/np.sqrt(3)
        
        if "t_exec" not in mdl.get_ns_vars():
            t_exec=200e-6 #400e-6
        
        
        load = {"701": {"P": 1,   "Q": 1},
                "702": {"P": 100e3, "Q": 60e3},
                "703": {"P": 90e3,  "Q": 40e3},
                "704": {"P": 120e3, "Q": 80e3},
                "705": {"P": 60e3,  "Q": 30e3},
                "706": {"P": 60e3,  "Q": 20e3},
                "707": {"P": 200e3, "Q": 100e3},
                "708": {"P": 200e3, "Q": 100e3},
                "709": {"P": 60e3,  "Q": 20e3},
                "710": {"P": 60e3,  "Q": 20e3},
                "711": {"P": 45e3,  "Q": 30e3},
                "712": {"P": 60e3,  "Q": 35e3},
                "713": {"P": 60e3,  "Q": 35e3},
                "714": {"P": 120e3, "Q": 80e3},
                "715": {"P": 60e3,  "Q": 10e3},
                "716": {"P": 60e3,  "Q": 20e3},
                "717": {"P": 60e3,  "Q": 20e3},
                "718": {"P": 90e3,  "Q": 40e3},
                "719": {"P": 90e3,  "Q": 40e3},
                "720": {"P": 90e3,  "Q": 40e3},
                "721": {"P": 90e3,  "Q": 40e3},
                "722": {"P": 90e3,  "Q": 40e3},
                "723": {"P": 90e3,  "Q": 50e3},
                "724": {"P": 420e3, "Q": 200e3},
                "725": {"P": 420e3, "Q": 200e3},
                "726": {"P": 60e3,  "Q": 25e3},
                "727": {"P": 60e3,  "Q": 25e3},
                "728": {"P": 60e3,  "Q": 20e3},
                "729": {"P": 120e3, "Q": 70e3},
                "730": {"P": 200e3, "Q": 600e3},
                "731": {"P": 150e3, "Q": 70e3},
                "732": {"P": 210e3, "Q": 100e3},
                "733": {"P": 60e3,  "Q": 40e3}}
        
        for bus in load:
            load[bus]["pf"] = np.cos(np.arctan2(load[bus]["Q"], load[bus]["P"]))
            load[bus]["S"] = load[bus]["P"]/load[bus]["pf"]
        
        branch ={"700": {"R": 1e-6,   "X": 1e-6},
                 "701": {"R": 0.0922, "X": 0.0470},
                 "702": {"R": 0.4930, "X": 0.2511},
                 "703": {"R": 0.3660, "X": 0.1864},
                 "704": {"R": 0.3811, "X": 0.1941},
                 "705": {"R": 0.8190, "X": 0.7070},
                 "706": {"R": 0.1872, "X": 0.6188},
                 "707": {"R": 0.7114, "X": 0.2351},
                 "708": {"R": 1.0300, "X": 0.7400},
                 "709": {"R": 1.0440, "X": 0.7400},
                 "710": {"R": 0.1966, "X": 0.0650},
                 "711": {"R": 0.3744, "X": 0.1238},
                 "712": {"R": 1.4680, "X": 1.1550},
                 "713": {"R": 0.5416, "X": 0.7129},
                 "714": {"R": 0.5910, "X": 0.5260},
                 "715": {"R": 0.7463, "X": 0.5450},
                 "716": {"R": 1.2890, "X": 1.7210},
                 "717": {"R": 0.7320, "X": 0.5740},
                 "718": {"R": 0.1640, "X": 0.1565},
                 "719": {"R": 1.5042, "X": 1.3554},
                 "720": {"R": 0.4095, "X": 0.4784},
                 "721": {"R": 0.7089, "X": 0.9373},
                 "722": {"R": 0.4512, "X": 0.3083},
                 "723": {"R": 0.8980, "X": 0.7091},
                 "724": {"R": 0.8960, "X": 0.7011},
                 "725": {"R": 0.2030, "X": 0.1034},
                 "726": {"R": 0.2842, "X": 0.1447},
                 "727": {"R": 1.0590, "X": 0.9337},
                 "728": {"R": 0.8042, "X": 0.7006},
                 "729": {"R": 0.5075, "X": 0.2585},
                 "730": {"R": 0.9744, "X": 0.9630},
                 "731": {"R": 0.3105, "X": 0.3619},
                 "732": {"R": 0.3410, "X": 0.5302},
                 "733": {"R": 2.0000, "X": 2.0000},
                 "734": {"R": 2.0000, "X": 2.0000},
                 "735": {"R": 2.0000, "X": 2.0000},
                 "736": {"R": 0.5000, "X": 0.5000},
                 "737": {"R": 0.5000, "X": 0.5000}}
        
        for branch_id in branch:
            branch[branch_id]["L"] = branch[branch_id]["X"]/w
        
        # Line element length values
        line_len = 1
        
        #Core coupling inductances
        L_cpl_1 = branch["703"]["L"]/100
        L_cpl_2 = branch["705"]["L"]/10
        L_cpl_3 = branch["708"]["L"]/10
        L_cpl_4 = branch["715"]["L"]/10
        L_cpl_5 = branch["737"]["L"]/10
        L_cpl_6 = branch["728"]["L"]/10
        L_cpl_7 = branch["733"]["L"]/10
        L_cpl_8 = branch["735"]["L"]/10
        L_cpl_9 = branch["706"]["L"]/10
        L_cpl_10 = branch["704"]["L"]/10
    ENDCODE
}
