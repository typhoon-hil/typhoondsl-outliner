version = 4.2

//
// Saved by sw version: 2022.1 DEV
// Save timestamp: 06-Jan-2022 @ 03:20:28 PM
//

model "ieee 33 bus system" {
    configuration {
        hil_device = "HIL602+"
        hil_configuration_id = 2
        simulation_method = bilinear
        simulation_time_step = 4e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        reset_analog_outputs_on_sim_stop = True
        reset_digital_outputs_on_sim_stop = True
        vhil_adio_loopback = False
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "external memory"
        sys_sp_rate_1 = 1e-05
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "medium"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        ground_scope_core = False
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
        tunable_params = "component defined"
        sp_compiler_type = "C compiler"
        sig_stim = "off"
        export_resource_list = ""
        export_dependency_list = ""
        export_out_file = ""
        export_lock_top_level = True
        export_encrypt_library = True
        export_encrypt_resources = True
    }

    component Subsystem Root {
        component src_scada_input "feeder ON" {
            addr = "1426063424"
            execution_rate = "t_exec"
            unit = ""
        }
        [
            position = 5056, 8648
        ]

        component "core/Triple Pole Single Throw Contactor" "Feeder sw" {
            ctrl_src = "Model"
            execution_rate = "t_exec"
        }
        [
            position = 5088, 8816
            size = 64, 256
        ]

        component "core/RL Section" "Line 716" {
            inductance_per_l = "branch[\"716\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"716\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 13528, 10408
            rotation = right
            size = 256, 56
        ]

        component "core/RL Section" "Line 715" {
            inductance_per_l = "branch[\"715\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"715\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 12360, 10672
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 710" {
            inductance_per_l = "branch[\"710\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"710\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10752, 10072
            rotation = down
            scale = -1, 1
            size = 256, 56
        ]

        component "core/RL Section" "Line 734" {
            inductance_per_l = "branch[\"734\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"734\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 11920, 9288
            rotation = right
            size = 256, 56
        ]

        component "core/RL Section" "Line 707" {
            inductance_per_l = "branch[\"707\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"707\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10088, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 706" {
            inductance_per_l = "branch[\"706\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"706\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 9584, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 705" {
            inductance_per_l = "branch[\"705\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"705\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8696, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 731" {
            inductance_per_l = "branch[\"731\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"731\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 13400, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 730" {
            inductance_per_l = "branch[\"730\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"730\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 12816, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 729" {
            inductance_per_l = "branch[\"729\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"729\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 12128, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 728" {
            inductance_per_l = "branch[\"728\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"728\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 11136, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 727" {
            inductance_per_l = "branch[\"727\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"727\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10616, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 726" {
            inductance_per_l = "branch[\"726\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"726\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10080, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 704" {
            inductance_per_l = "branch[\"704\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"704\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8080, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 703" {
            inductance_per_l = "branch[\"703\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"703\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 7424, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 722" {
            inductance_per_l = "branch[\"722\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"722\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 7464, 7752
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 724" {
            inductance_per_l = "branch[\"724\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"724\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8624, 7752
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 723" {
            inductance_per_l = "branch[\"723\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"723\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8032, 7752
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 725" {
            inductance_per_l = "branch[\"725\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"725\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 9536, 8168
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 701" {
            inductance_per_l = "branch[\"701\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"701\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 5776, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 719" {
            inductance_per_l = "branch[\"719\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"719\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 6992, 10072
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 718" {
            inductance_per_l = "branch[\"718\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"718\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 6464, 10072
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 721" {
            inductance_per_l = "branch[\"721\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"721\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8264, 10072
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 720" {
            inductance_per_l = "branch[\"720\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"720\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 7536, 10072
            rotation = down
            size = 256, 56
        ]

        component src_ground gnd_700 {
        }
        [
            position = 4864, 8872
        ]

        component "core/RL Section" "Line 737" {
            inductance_per_l = "branch[\"737\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"737\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 9568, 7752
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 733" {
            inductance_per_l = "branch[\"733\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"733\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8704, 9592
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 709" {
            inductance_per_l = "branch[\"709\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"709\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 11520, 9472
            rotation = right
            size = 256, 56
        ]

        component "core/RL Section" "Line 735" {
            inductance_per_l = "branch[\"735\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"735\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8896, 10072
            rotation = down
            size = 256, 56
        ]

        component "core/Three Phase TLM Core Coupling" "CC 3" {
            inductance = "L_cpl_3"
        }
        [
            position = 11160, 8816
            size = 12, 256
        ]

        component "core/Three Phase TLM Core Coupling" "CC 4" {
            inductance = "L_cpl_4"
        }
        [
            position = 12112, 10672
            size = 12, 256
        ]

        component "core/Three Phase TLM Core Coupling" "CC 5" {
            inductance = "L_cpl_5"
        }
        [
            position = 10392, 7752
            size = 12, 256
        ]

        component "core/Three Phase TLM Core Coupling" "CC 7" {
            inductance = "L_cpl_7"
        }
        [
            position = 9368, 9592
            size = 12, 256
        ]

        component "core/RL Section" "Line 708" {
            inductance_per_l = "branch[\"708\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"708\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10808, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 700" {
            inductance_per_l = "branch[\"700\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"700\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 5288, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 713" {
            inductance_per_l = "branch[\"713\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"713\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10512, 10672
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 714" {
            inductance_per_l = "branch[\"714\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"714\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 11232, 10672
            rotation = down
            size = 256, 56
        ]

        component "core/Voltage Measurement" Vref {
            addr = "51"
            execution_rate = "t_exec"
            sig_output = "True"
        }
        [
            position = 4936, 8640
            scale = -1, 1
            size = 64, 32
        ]

        component "core/Three Phase TLM Core Coupling" CC1 {
            inductance = "L_cpl_1"
        }
        [
            position = 6776, 8816
            size = 12, 256
        ]

        component Subsystem Meter701 {
            layout = dynamic
            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8912, 8024
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 5520, 9144
            size = 104, 80
        ]

        component "core/Three Phase TLM Core Coupling" "CC 2" {
            inductance = "L_cpl_2"
        }
        [
            position = 8920, 8816
            size = 12, 256
        ]

        component "core/RL Section" "Line 702" {
            inductance_per_l = "branch[\"702\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"702\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 6568, 8816
            rotation = down
            size = 256, 56
        ]

        component "core/Three Phase Voltage Source" Vs {
            init_frequency = "f"
            init_rms_value = "Vln"
        }
        [
            position = 4944, 8816
            size = 62, 256
        ]

        component "core/Three Phase TLM Core Coupling" "CC 6" {
            inductance = "L_cpl_6"
        }
        [
            position = 11352, 8168
            size = 12, 256
        ]

        component "core/RL Section" "Line 711" {
            inductance_per_l = "branch[\"711\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"711\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10040, 10072
            rotation = down
            size = 256, 56
        ]

        component "core/RL Section" "Line 712" {
            inductance_per_l = "branch[\"712\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"712\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 9792, 10672
            rotation = down
            scale = -1, -1
            size = 256, 56
        ]

        component "core/Three Phase TLM Core Coupling" "CC 8" {
            inductance = "L_cpl_8"
        }
        [
            position = 9216, 10072
            size = 12, 256
        ]

        component src_scada_input Tie_line_3 {
            addr = "1426063424"
            execution_rate = "t_exec"
            unit = ""
        }
        [
            position = 9616, 9400
        ]

        component "core/Triple Pole Single Throw Contactor" Tie_sw_3 {
            ctrl_src = "Model"
            execution_rate = "t_exec"
            initial_state = "on"
        }
        [
            position = 9696, 9592
            size = 64, 256
        ]

        component "core/Triple Pole Single Throw Contactor" Tie_sw_1 {
            ctrl_src = "Model"
            execution_rate = "t_exec"
            initial_state = "on"
        }
        [
            position = 10536, 7752
            size = 64, 256
        ]

        component src_scada_input Tie_line_1 {
            addr = "1426063424"
            execution_rate = "t_exec"
            unit = ""
        }
        [
            position = 10480, 7592
        ]

        component "core/Triple Pole Single Throw Contactor" Tie_sw_4 {
            ctrl_src = "Model"
            execution_rate = "t_exec"
            initial_state = "on"
        }
        [
            position = 12408, 9496
            rotation = left
            size = 64, 256
        ]

        component src_scada_input Tie_line_4 {
            addr = "1426063424"
            execution_rate = "t_exec"
            unit = ""
        }
        [
            position = 12248, 9568
            rotation = right
            scale = -1, -1
        ]

        component "core/Triple Pole Single Throw Contactor" Tie_sw_2 {
            ctrl_src = "Model"
            execution_rate = "t_exec"
            initial_state = "on"
        }
        [
            position = 11920, 10104
            rotation = right
            scale = 1, -1
            size = 64, 256
        ]

        component src_scada_input Tie_line_2 {
            addr = "1426063424"
            execution_rate = "t_exec"
            unit = ""
        }
        [
            position = 12088, 10168
            rotation = left
        ]

        component "core/Triple Pole Single Throw Contactor" Tie_sw_5 {
            ctrl_src = "Model"
            execution_rate = "t_exec"
            initial_state = "on"
        }
        [
            position = 9328, 10072
            size = 64, 256
        ]

        component src_scada_input Tie_line_5 {
            addr = "1426063424"
            execution_rate = "t_exec"
            unit = ""
        }
        [
            position = 9256, 9872
        ]

        component "core/RL Section" "Line 736" {
            inductance_per_l = "branch[\"736\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"736\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 12984, 9144
            size = 256, 56
        ]

        component "core/RL Section" "Line 732" {
            inductance_per_l = "branch[\"732\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"732\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 13888, 8688
            rotation = left
            size = 256, 56
        ]

        component "core/RL Section" "Line 717" {
            inductance_per_l = "branch[\"717\"][\"L\"]"
            length = "1"
            resistance_per_l = "branch[\"717\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 12920, 10072
            rotation = down
            size = 256, 56
        ]

        component "core/Three-phase Meter" 3ph_Meter701 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 5520, 8888
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg701 {
            SAB = "load[\"701\"][\"S\"]/3"
            SAn = "load[\"701\"][\"S\"]/3"
            SBC = "load[\"701\"][\"S\"]/3"
            SBn = "load[\"701\"][\"S\"]/3"
            SCA = "load[\"701\"][\"S\"]/3"
            SCn = "load[\"701\"][\"S\"]/3"
            Sn_3ph = "load[\"701\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"701\"][\"pf\"]"
            pfB = "load[\"701\"][\"pf\"]"
            pfC = "load[\"701\"][\"pf\"]"
            pf_3ph = "load[\"701\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 5520, 9032
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter702 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 6072, 8888
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg702 {
            SAB = "load[\"702\"][\"S\"]/3"
            SAn = "load[\"702\"][\"S\"]/3"
            SBC = "load[\"702\"][\"S\"]/3"
            SBn = "load[\"702\"][\"S\"]/3"
            SCA = "load[\"702\"][\"S\"]/3"
            SCn = "load[\"702\"][\"S\"]/3"
            Sn_3ph = "load[\"702\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"702\"][\"pf\"]"
            pfB = "load[\"702\"][\"pf\"]"
            pfC = "load[\"702\"][\"pf\"]"
            pf_3ph = "load[\"702\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 6072, 9032
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter703 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 6976, 8896
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg703 {
            SAB = "load[\"703\"][\"S\"]/3"
            SAn = "load[\"703\"][\"S\"]/3"
            SBC = "load[\"703\"][\"S\"]/3"
            SBn = "load[\"703\"][\"S\"]/3"
            SCA = "load[\"703\"][\"S\"]/3"
            SCn = "load[\"703\"][\"S\"]/3"
            Sn_3ph = "load[\"703\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"703\"][\"pf\"]"
            pfB = "load[\"703\"][\"pf\"]"
            pfC = "load[\"703\"][\"pf\"]"
            pf_3ph = "load[\"703\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 6976, 9040
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter704 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 7736, 8896
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg704 {
            SAB = "load[\"704\"][\"S\"]/3"
            SAn = "load[\"704\"][\"S\"]/3"
            SBC = "load[\"704\"][\"S\"]/3"
            SBn = "load[\"704\"][\"S\"]/3"
            SCA = "load[\"704\"][\"S\"]/3"
            SCn = "load[\"704\"][\"S\"]/3"
            Sn_3ph = "load[\"704\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"704\"][\"pf\"]"
            pfB = "load[\"704\"][\"pf\"]"
            pfC = "load[\"704\"][\"pf\"]"
            pf_3ph = "load[\"704\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 7736, 9040
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter702 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8928, 7888
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8928, 8000
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8928, 7832
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8928, 7944
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8928, 8056
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8928, 8112
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8640, 8208
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8448, 8072
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8792, 8160
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7880
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7952
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7976
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7904
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7928
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8560, 8088
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 8000
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8528, 7784
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 6072, 9144
            size = 104, 80
        ]

        component Subsystem Meter703 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8920, 7888
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8920, 8000
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8920, 7832
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8920, 7944
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8920, 8056
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8920, 8112
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8632, 8208
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8440, 8072
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8784, 8160
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7880
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7952
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7976
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7904
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7928
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8088
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 8000
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8520, 7784
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 6976, 9152
            size = 104, 80
        ]

        component Subsystem Meter704 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8960, 7904
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8960, 8016
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8960, 7848
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8960, 7960
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8960, 8072
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8960, 8128
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8672, 8224
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8480, 8088
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8824, 8176
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 7896
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 7968
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 7992
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 7920
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 7944
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8592, 8104
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 8016
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8560, 7800
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 7736, 9152
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter705 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 8408, 8896
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg705 {
            SAB = "load[\"705\"][\"S\"]/3"
            SAn = "load[\"705\"][\"S\"]/3"
            SBC = "load[\"705\"][\"S\"]/3"
            SBn = "load[\"705\"][\"S\"]/3"
            SCA = "load[\"705\"][\"S\"]/3"
            SCn = "load[\"705\"][\"S\"]/3"
            Sn_3ph = "load[\"705\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"705\"][\"pf\"]"
            pfB = "load[\"705\"][\"pf\"]"
            pfC = "load[\"705\"][\"pf\"]"
            pf_3ph = "load[\"705\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 8408, 9040
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter705 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7904
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8912, 8016
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7848
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7960
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8072
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8128
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8224
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8088
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8176
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7896
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7968
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7992
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7920
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7944
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8104
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8016
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7800
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 8408, 9152
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter706 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 9152, 8888
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg706 {
            SAB = "load[\"706\"][\"S\"]/3"
            SAn = "load[\"706\"][\"S\"]/3"
            SBC = "load[\"706\"][\"S\"]/3"
            SBn = "load[\"706\"][\"S\"]/3"
            SCA = "load[\"706\"][\"S\"]/3"
            SCn = "load[\"706\"][\"S\"]/3"
            Sn_3ph = "load[\"706\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"706\"][\"pf\"]"
            pfB = "load[\"706\"][\"pf\"]"
            pfC = "load[\"706\"][\"pf\"]"
            pf_3ph = "load[\"706\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 9152, 9032
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter706 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8896, 7880
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8896, 7992
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8896, 7824
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8896, 7936
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8896, 8048
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8896, 8104
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8608, 8200
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8416, 8064
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8760, 8152
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7872
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7944
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7968
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7896
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7920
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8528, 8080
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7992
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8496, 7776
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 9152, 9144
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter707 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 9832, 8896
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg707 {
            SAB = "load[\"707\"][\"S\"]/3"
            SAn = "load[\"707\"][\"S\"]/3"
            SBC = "load[\"707\"][\"S\"]/3"
            SBn = "load[\"707\"][\"S\"]/3"
            SCA = "load[\"707\"][\"S\"]/3"
            SCn = "load[\"707\"][\"S\"]/3"
            Sn_3ph = "load[\"707\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"707\"][\"pf\"]"
            pfB = "load[\"707\"][\"pf\"]"
            pfC = "load[\"707\"][\"pf\"]"
            pf_3ph = "load[\"707\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 9832, 9040
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter707 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8920, 7904
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8920, 8016
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8920, 7848
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8920, 7960
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8920, 8072
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8920, 8128
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8632, 8224
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8440, 8088
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8784, 8176
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7896
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7968
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7992
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7920
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7944
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8104
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 8016
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8520, 7800
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 9832, 9152
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter708 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 10360, 8912
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg708 {
            SAB = "load[\"708\"][\"S\"]/3"
            SAn = "load[\"708\"][\"S\"]/3"
            SBC = "load[\"708\"][\"S\"]/3"
            SBn = "load[\"708\"][\"S\"]/3"
            SCA = "load[\"708\"][\"S\"]/3"
            SCn = "load[\"708\"][\"S\"]/3"
            Sn_3ph = "load[\"708\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"708\"][\"pf\"]"
            pfB = "load[\"708\"][\"pf\"]"
            pfC = "load[\"708\"][\"pf\"]"
            pf_3ph = "load[\"708\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10360, 9056
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter708 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8960, 7904
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8960, 8016
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8960, 7848
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8960, 7960
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8960, 8072
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8960, 8128
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8672, 8224
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8480, 8088
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8824, 8176
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 7896
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 7968
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 7992
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 7920
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 7944
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8592, 8104
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8360, 8016
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8560, 7800
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 10360, 9168
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter709 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 11320, 8896
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg709 {
            SAB = "load[\"709\"][\"S\"]/3"
            SAn = "load[\"709\"][\"S\"]/3"
            SBC = "load[\"709\"][\"S\"]/3"
            SBn = "load[\"709\"][\"S\"]/3"
            SCA = "load[\"709\"][\"S\"]/3"
            SCn = "load[\"709\"][\"S\"]/3"
            Sn_3ph = "load[\"709\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"709\"][\"pf\"]"
            pfB = "load[\"709\"][\"pf\"]"
            pfC = "load[\"709\"][\"pf\"]"
            pf_3ph = "load[\"709\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 11320, 9040
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter709 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8880, 7888
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8880, 8000
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8880, 7832
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8880, 7944
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8880, 8056
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8880, 8112
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8592, 8208
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8400, 8072
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8744, 8160
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 7880
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 7952
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 7976
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 7904
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 7928
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8512, 8088
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 8000
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8480, 7784
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 11320, 9152
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter710 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 11192, 10160
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg710 {
            SAB = "load[\"710\"][\"S\"]/3"
            SAn = "load[\"710\"][\"S\"]/3"
            SBC = "load[\"710\"][\"S\"]/3"
            SBn = "load[\"710\"][\"S\"]/3"
            SCA = "load[\"710\"][\"S\"]/3"
            SCn = "load[\"710\"][\"S\"]/3"
            Sn_3ph = "load[\"710\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"710\"][\"pf\"]"
            pfB = "load[\"710\"][\"pf\"]"
            pfC = "load[\"710\"][\"pf\"]"
            pf_3ph = "load[\"710\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 11192, 10304
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter710 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8904, 7872
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8904, 7984
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8904, 7816
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8904, 7928
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8904, 8040
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8904, 8096
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8616, 8192
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8424, 8056
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8760, 8144
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7864
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7936
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7960
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7888
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7912
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8536, 8072
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7984
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8504, 7768
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 11192, 10416
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter711 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 10400, 10160
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg711 {
            SAB = "load[\"711\"][\"S\"]/3"
            SAn = "load[\"711\"][\"S\"]/3"
            SBC = "load[\"711\"][\"S\"]/3"
            SBn = "load[\"711\"][\"S\"]/3"
            SCA = "load[\"711\"][\"S\"]/3"
            SCn = "load[\"711\"][\"S\"]/3"
            Sn_3ph = "load[\"711\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"711\"][\"pf\"]"
            pfB = "load[\"711\"][\"pf\"]"
            pfC = "load[\"711\"][\"pf\"]"
            pf_3ph = "load[\"711\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10400, 10304
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter711 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8904, 7904
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8904, 8016
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8904, 7848
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8904, 7960
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8904, 8072
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8904, 8128
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8616, 8224
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8424, 8088
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8768, 8176
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7896
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7968
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7992
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7920
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7944
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8536, 8104
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 8016
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8504, 7800
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 10400, 10416
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter712 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 9728, 10160
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg712 {
            SAB = "load[\"712\"][\"S\"]/3"
            SAn = "load[\"712\"][\"S\"]/3"
            SBC = "load[\"712\"][\"S\"]/3"
            SBn = "load[\"712\"][\"S\"]/3"
            SCA = "load[\"712\"][\"S\"]/3"
            SCn = "load[\"712\"][\"S\"]/3"
            Sn_3ph = "load[\"712\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"712\"][\"pf\"]"
            pfB = "load[\"712\"][\"pf\"]"
            pfC = "load[\"712\"][\"pf\"]"
            pf_3ph = "load[\"712\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 9728, 10304
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter712 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8904, 7888
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8904, 8000
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8904, 7832
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8904, 7944
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8904, 8056
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8904, 8112
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8616, 8208
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8424, 8072
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8768, 8160
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7880
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7952
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7976
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7904
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7928
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8536, 8088
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 8000
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8504, 7784
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 9728, 10416
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter713 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 10136, 10760
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg713 {
            SAB = "load[\"713\"][\"S\"]/3"
            SAn = "load[\"713\"][\"S\"]/3"
            SBC = "load[\"713\"][\"S\"]/3"
            SBn = "load[\"713\"][\"S\"]/3"
            SCA = "load[\"713\"][\"S\"]/3"
            SCn = "load[\"713\"][\"S\"]/3"
            Sn_3ph = "load[\"713\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"713\"][\"pf\"]"
            pfB = "load[\"713\"][\"pf\"]"
            pfC = "load[\"713\"][\"pf\"]"
            pf_3ph = "load[\"713\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10136, 10904
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter713 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8928, 7880
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8928, 7992
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8928, 7824
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8928, 7936
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8928, 8048
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8928, 8104
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8640, 8200
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8448, 8064
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8792, 8152
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7872
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7944
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7968
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7896
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7920
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8560, 8080
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7992
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8528, 7776
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 10136, 11016
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter714 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 10928, 10768
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg714 {
            SAB = "load[\"714\"][\"S\"]/3"
            SAn = "load[\"714\"][\"S\"]/3"
            SBC = "load[\"714\"][\"S\"]/3"
            SBn = "load[\"714\"][\"S\"]/3"
            SCA = "load[\"714\"][\"S\"]/3"
            SCn = "load[\"714\"][\"S\"]/3"
            Sn_3ph = "load[\"714\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"714\"][\"pf\"]"
            pfB = "load[\"714\"][\"pf\"]"
            pfC = "load[\"714\"][\"pf\"]"
            pf_3ph = "load[\"714\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10928, 10912
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter714 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8920, 7888
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8920, 8000
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8920, 7832
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8920, 7944
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8920, 8056
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8920, 8112
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8632, 8208
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8440, 8072
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8784, 8160
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7880
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7952
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7976
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7904
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7928
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8088
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 8000
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8520, 7784
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 10928, 11024
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter715 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 11560, 10768
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg715 {
            SAB = "load[\"715\"][\"S\"]/3"
            SAn = "load[\"715\"][\"S\"]/3"
            SBC = "load[\"715\"][\"S\"]/3"
            SBn = "load[\"715\"][\"S\"]/3"
            SCA = "load[\"715\"][\"S\"]/3"
            SCn = "load[\"715\"][\"S\"]/3"
            Sn_3ph = "load[\"715\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"715\"][\"pf\"]"
            pfB = "load[\"715\"][\"pf\"]"
            pfC = "load[\"715\"][\"pf\"]"
            pf_3ph = "load[\"715\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 11560, 10912
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter715 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8928, 7880
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8928, 7992
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8928, 7824
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8928, 7936
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8928, 8048
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8928, 8104
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8640, 8200
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8448, 8064
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8792, 8152
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7872
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7944
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7968
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7896
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7920
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8560, 8080
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7992
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8528, 7776
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 11560, 11024
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter716 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 12936, 10752
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg716 {
            SAB = "load[\"716\"][\"S\"]/3"
            SAn = "load[\"716\"][\"S\"]/3"
            SBC = "load[\"716\"][\"S\"]/3"
            SBn = "load[\"716\"][\"S\"]/3"
            SCA = "load[\"716\"][\"S\"]/3"
            SCn = "load[\"716\"][\"S\"]/3"
            Sn_3ph = "load[\"716\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"716\"][\"pf\"]"
            pfB = "load[\"716\"][\"pf\"]"
            pfC = "load[\"716\"][\"pf\"]"
            pf_3ph = "load[\"716\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 12936, 10896
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter716 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8936, 7888
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8936, 8000
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8936, 7832
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8936, 7944
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8936, 8056
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8936, 8112
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8648, 8208
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8456, 8072
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8800, 8160
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8336, 7880
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8336, 7952
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8336, 7976
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8336, 7904
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8336, 7928
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8568, 8088
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8336, 8000
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8536, 7784
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 12936, 11008
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter717 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 13192, 10152
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg717 {
            SAB = "load[\"717\"][\"S\"]/3"
            SAn = "load[\"717\"][\"S\"]/3"
            SBC = "load[\"717\"][\"S\"]/3"
            SBn = "load[\"717\"][\"S\"]/3"
            SCA = "load[\"717\"][\"S\"]/3"
            SCn = "load[\"717\"][\"S\"]/3"
            Sn_3ph = "load[\"717\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"717\"][\"pf\"]"
            pfB = "load[\"717\"][\"pf\"]"
            pfC = "load[\"717\"][\"pf\"]"
            pf_3ph = "load[\"717\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 13192, 10296
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter717 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8920, 7888
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8920, 8000
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8920, 7832
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8920, 7944
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8920, 8056
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8920, 8112
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8632, 8208
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8440, 8072
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8784, 8160
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7880
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7952
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7976
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7904
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7928
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8088
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 8000
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8520, 7784
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 13192, 10408
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter718 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 12640, 10160
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg718 {
            SAB = "load[\"718\"][\"S\"]/3"
            SAn = "load[\"718\"][\"S\"]/3"
            SBC = "load[\"718\"][\"S\"]/3"
            SBn = "load[\"718\"][\"S\"]/3"
            SCA = "load[\"718\"][\"S\"]/3"
            SCn = "load[\"718\"][\"S\"]/3"
            Sn_3ph = "load[\"718\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"718\"][\"pf\"]"
            pfB = "load[\"718\"][\"pf\"]"
            pfC = "load[\"718\"][\"pf\"]"
            pf_3ph = "load[\"718\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 12640, 10304
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter718 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8904, 7896
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8904, 8008
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8904, 7840
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8904, 7952
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8904, 8064
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8904, 8120
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8616, 8216
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8424, 8080
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8768, 8168
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7888
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7960
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7984
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7912
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7936
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8536, 8096
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 8008
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8504, 7792
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 12640, 10416
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter719 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 6720, 10160
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg719 {
            SAB = "load[\"719\"][\"S\"]/3"
            SAn = "load[\"719\"][\"S\"]/3"
            SBC = "load[\"719\"][\"S\"]/3"
            SBn = "load[\"719\"][\"S\"]/3"
            SCA = "load[\"719\"][\"S\"]/3"
            SCn = "load[\"719\"][\"S\"]/3"
            Sn_3ph = "load[\"719\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"719\"][\"pf\"]"
            pfB = "load[\"719\"][\"pf\"]"
            pfC = "load[\"719\"][\"pf\"]"
            pf_3ph = "load[\"719\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 6720, 10304
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter719 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8920, 7880
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8920, 7992
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8920, 7824
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8920, 7936
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8920, 8048
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8920, 8104
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8632, 8200
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8440, 8064
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8784, 8152
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7872
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7944
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7968
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7896
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7920
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8080
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7992
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8520, 7776
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 6720, 10416
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter720 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 7272, 10160
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg720 {
            SAB = "load[\"720\"][\"S\"]/3"
            SAn = "load[\"720\"][\"S\"]/3"
            SBC = "load[\"720\"][\"S\"]/3"
            SBn = "load[\"720\"][\"S\"]/3"
            SCA = "load[\"720\"][\"S\"]/3"
            SCn = "load[\"720\"][\"S\"]/3"
            Sn_3ph = "load[\"720\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"720\"][\"pf\"]"
            pfB = "load[\"720\"][\"pf\"]"
            pfC = "load[\"720\"][\"pf\"]"
            pf_3ph = "load[\"720\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 7272, 10304
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter720 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8888, 7888
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8888, 8000
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8888, 7832
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8888, 7944
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8888, 8056
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8888, 8112
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8600, 8208
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8408, 8072
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8752, 8160
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 7880
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 7952
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 7976
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 7904
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 7928
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8520, 8088
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 8000
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8488, 7784
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 7272, 10416
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter721 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 7816, 10152
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg721 {
            SAB = "load[\"721\"][\"S\"]/3"
            SAn = "load[\"721\"][\"S\"]/3"
            SBC = "load[\"721\"][\"S\"]/3"
            SBn = "load[\"721\"][\"S\"]/3"
            SCA = "load[\"721\"][\"S\"]/3"
            SCn = "load[\"721\"][\"S\"]/3"
            Sn_3ph = "load[\"721\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"721\"][\"pf\"]"
            pfB = "load[\"721\"][\"pf\"]"
            pfC = "load[\"721\"][\"pf\"]"
            pf_3ph = "load[\"721\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 7816, 10296
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter721 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7896
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8912, 8008
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7840
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7952
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8064
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8120
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8216
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8080
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8168
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7888
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7960
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7984
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7912
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7936
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8096
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8008
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7792
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 7816, 10408
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter722 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 8568, 10152
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg722 {
            SAB = "load[\"722\"][\"S\"]/3"
            SAn = "load[\"722\"][\"S\"]/3"
            SBC = "load[\"722\"][\"S\"]/3"
            SBn = "load[\"722\"][\"S\"]/3"
            SCA = "load[\"722\"][\"S\"]/3"
            SCn = "load[\"722\"][\"S\"]/3"
            Sn_3ph = "load[\"722\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"722\"][\"pf\"]"
            pfB = "load[\"722\"][\"pf\"]"
            pfC = "load[\"722\"][\"pf\"]"
            pf_3ph = "load[\"722\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 8568, 10296
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter722 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8904, 7904
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8904, 8016
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8904, 7848
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8904, 7960
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8904, 8072
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8904, 8128
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8616, 8224
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8424, 8088
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8768, 8176
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7896
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7968
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7992
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7920
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7944
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8536, 8104
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 8016
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8504, 7800
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 8568, 10408
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter723 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 7736, 7832
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg723 {
            SAB = "load[\"723\"][\"S\"]/3"
            SAn = "load[\"723\"][\"S\"]/3"
            SBC = "load[\"723\"][\"S\"]/3"
            SBn = "load[\"723\"][\"S\"]/3"
            SCA = "load[\"723\"][\"S\"]/3"
            SCn = "load[\"723\"][\"S\"]/3"
            Sn_3ph = "load[\"723\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"723\"][\"pf\"]"
            pfB = "load[\"723\"][\"pf\"]"
            pfC = "load[\"723\"][\"pf\"]"
            pf_3ph = "load[\"723\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 7736, 7976
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter723 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8888, 7896
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8888, 8008
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8888, 7840
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8888, 7952
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8888, 8064
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8888, 8120
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8600, 8216
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8408, 8080
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8752, 8168
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 7888
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 7960
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 7984
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 7912
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 7936
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8520, 8096
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8288, 8008
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8488, 7792
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 7736, 8088
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter724 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 8320, 7832
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg724 {
            SAB = "load[\"724\"][\"S\"]/3"
            SAn = "load[\"724\"][\"S\"]/3"
            SBC = "load[\"724\"][\"S\"]/3"
            SBn = "load[\"724\"][\"S\"]/3"
            SCA = "load[\"724\"][\"S\"]/3"
            SCn = "load[\"724\"][\"S\"]/3"
            Sn_3ph = "load[\"724\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"724\"][\"pf\"]"
            pfB = "load[\"724\"][\"pf\"]"
            pfC = "load[\"724\"][\"pf\"]"
            pf_3ph = "load[\"724\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 8320, 7976
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter724 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7920
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8912, 8032
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7864
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7976
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8088
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8144
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8240
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8104
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8192
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7912
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7984
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8008
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7936
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7960
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8120
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8032
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7816
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 8320, 8088
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter725 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 8920, 7840
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg725 {
            SAB = "load[\"725\"][\"S\"]/3"
            SAn = "load[\"725\"][\"S\"]/3"
            SBC = "load[\"725\"][\"S\"]/3"
            SBn = "load[\"725\"][\"S\"]/3"
            SCA = "load[\"725\"][\"S\"]/3"
            SCn = "load[\"725\"][\"S\"]/3"
            Sn_3ph = "load[\"725\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"725\"][\"pf\"]"
            pfB = "load[\"725\"][\"pf\"]"
            pfC = "load[\"725\"][\"pf\"]"
            pf_3ph = "load[\"725\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 8920, 7984
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter725 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8920, 7896
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8920, 8008
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8920, 7840
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8920, 7952
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8920, 8064
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8920, 8120
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8632, 8216
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8440, 8080
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8784, 8168
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7888
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7960
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7984
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7912
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7936
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8096
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 8008
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8520, 7792
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 8920, 8096
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter726 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 9792, 8248
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg726 {
            SAB = "load[\"726\"][\"S\"]/3"
            SAn = "load[\"726\"][\"S\"]/3"
            SBC = "load[\"726\"][\"S\"]/3"
            SBn = "load[\"726\"][\"S\"]/3"
            SCA = "load[\"726\"][\"S\"]/3"
            SCn = "load[\"726\"][\"S\"]/3"
            Sn_3ph = "load[\"726\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"726\"][\"pf\"]"
            pfB = "load[\"726\"][\"pf\"]"
            pfC = "load[\"726\"][\"pf\"]"
            pf_3ph = "load[\"726\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 9792, 8392
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter726 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8928, 7888
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8928, 8000
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8928, 7832
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8928, 7944
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8928, 8056
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8928, 8112
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8640, 8208
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8448, 8072
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8792, 8160
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7880
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7952
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7976
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7904
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 7928
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8560, 8088
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 8000
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8528, 7784
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 9792, 8504
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter727 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 10360, 8248
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg727 {
            SAB = "load[\"727\"][\"S\"]/3"
            SAn = "load[\"727\"][\"S\"]/3"
            SBC = "load[\"727\"][\"S\"]/3"
            SBn = "load[\"727\"][\"S\"]/3"
            SCA = "load[\"727\"][\"S\"]/3"
            SCn = "load[\"727\"][\"S\"]/3"
            Sn_3ph = "load[\"727\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"727\"][\"pf\"]"
            pfB = "load[\"727\"][\"pf\"]"
            pfC = "load[\"727\"][\"pf\"]"
            pf_3ph = "load[\"727\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10360, 8392
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter727 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7896
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8912, 8008
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7840
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7952
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8064
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8120
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8216
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8080
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8168
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7888
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7960
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7984
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7912
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7936
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8096
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8008
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7792
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 10360, 8504
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter728 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 10872, 8264
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg728 {
            SAB = "load[\"728\"][\"S\"]/3"
            SAn = "load[\"728\"][\"S\"]/3"
            SBC = "load[\"728\"][\"S\"]/3"
            SBn = "load[\"728\"][\"S\"]/3"
            SCA = "load[\"728\"][\"S\"]/3"
            SCn = "load[\"728\"][\"S\"]/3"
            Sn_3ph = "load[\"728\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"728\"][\"pf\"]"
            pfB = "load[\"728\"][\"pf\"]"
            pfC = "load[\"728\"][\"pf\"]"
            pf_3ph = "load[\"728\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10872, 8408
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter728 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8904, 7904
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8904, 8016
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8904, 7848
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8904, 7960
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8904, 8072
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8904, 8128
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8616, 8224
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8424, 8088
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8768, 8176
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7896
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7968
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7992
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7920
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 7944
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8536, 8104
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8304, 8016
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8504, 7800
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 10872, 8520
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter729 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 11648, 8248
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg729 {
            SAB = "load[\"729\"][\"S\"]/3"
            SAn = "load[\"729\"][\"S\"]/3"
            SBC = "load[\"729\"][\"S\"]/3"
            SBn = "load[\"729\"][\"S\"]/3"
            SCA = "load[\"729\"][\"S\"]/3"
            SCn = "load[\"729\"][\"S\"]/3"
            Sn_3ph = "load[\"729\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"729\"][\"pf\"]"
            pfB = "load[\"729\"][\"pf\"]"
            pfC = "load[\"729\"][\"pf\"]"
            pf_3ph = "load[\"729\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 11648, 8392
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter729 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8920, 7896
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8920, 8008
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8920, 7840
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8920, 7952
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8920, 8064
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8920, 8120
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8632, 8216
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8440, 8080
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8784, 8168
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7888
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7960
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7984
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7912
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 7936
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8096
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8320, 8008
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8520, 7792
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 11648, 8504
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter730 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 12456, 8248
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg730 {
            SAB = "load[\"730\"][\"S\"]/3"
            SAn = "load[\"730\"][\"S\"]/3"
            SBC = "load[\"730\"][\"S\"]/3"
            SBn = "load[\"730\"][\"S\"]/3"
            SCA = "load[\"730\"][\"S\"]/3"
            SCn = "load[\"730\"][\"S\"]/3"
            Sn_3ph = "load[\"730\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"730\"][\"pf\"]"
            pfB = "load[\"730\"][\"pf\"]"
            pfC = "load[\"730\"][\"pf\"]"
            pf_3ph = "load[\"730\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 12456, 8392
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter730 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8896, 7904
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8896, 8016
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8896, 7848
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8896, 7960
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8896, 8072
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8896, 8128
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8608, 8224
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8416, 8088
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8760, 8176
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7896
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7968
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7992
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7920
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7944
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8528, 8104
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 8016
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8496, 7800
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 12456, 8504
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter731 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 13096, 8248
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg731 {
            SAB = "load[\"731\"][\"S\"]/3"
            SAn = "load[\"731\"][\"S\"]/3"
            SBC = "load[\"731\"][\"S\"]/3"
            SBn = "load[\"731\"][\"S\"]/3"
            SCA = "load[\"731\"][\"S\"]/3"
            SCn = "load[\"731\"][\"S\"]/3"
            Sn_3ph = "load[\"731\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"731\"][\"pf\"]"
            pfB = "load[\"731\"][\"pf\"]"
            pfC = "load[\"731\"][\"pf\"]"
            pf_3ph = "load[\"731\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 13096, 8392
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter731 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7888
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8912, 8000
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7832
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7944
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8056
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8112
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8208
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8072
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8160
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7880
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8088
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7784
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 13096, 8504
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter732 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 13680, 8248
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg732 {
            SAB = "load[\"732\"][\"S\"]/3"
            SAn = "load[\"732\"][\"S\"]/3"
            SBC = "load[\"732\"][\"S\"]/3"
            SBn = "load[\"732\"][\"S\"]/3"
            SCA = "load[\"732\"][\"S\"]/3"
            SCn = "load[\"732\"][\"S\"]/3"
            Sn_3ph = "load[\"732\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"732\"][\"pf\"]"
            pfB = "load[\"732\"][\"pf\"]"
            pfC = "load[\"732\"][\"pf\"]"
            pf_3ph = "load[\"732\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 13680, 8392
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter732 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8896, 7880
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8896, 7992
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8896, 7824
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8896, 7936
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8896, 8048
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8896, 8104
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8608, 8200
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8416, 8064
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8760, 8152
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7872
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7944
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7968
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7896
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7920
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8528, 8080
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8296, 7992
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8496, 7776
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 13680, 8504
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter733 {
            I_rms = "True"
            Ts = "t_exec"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 13560, 9248
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg733 {
            SAB = "load[\"733\"][\"S\"]/3"
            SAn = "load[\"733\"][\"S\"]/3"
            SBC = "load[\"733\"][\"S\"]/3"
            SBn = "load[\"733\"][\"S\"]/3"
            SCA = "load[\"733\"][\"S\"]/3"
            SCn = "load[\"733\"][\"S\"]/3"
            Sn_3ph = "load[\"733\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/(3**0.5)"
            VBC = "V_ll"
            VBn = "V_ll/(3**0.5)"
            VCA = "V_ll"
            VCn = "V_ll/(3**0.5)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"733\"][\"pf\"]"
            pfB = "load[\"733\"][\"pf\"]"
            pfC = "load[\"733\"][\"pf\"]"
            pf_3ph = "load[\"733\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 13560, 9392
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter733 {
            layout = dynamic
            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component gen_probe IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component gen_probe VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component gen_probe IA_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8096
            ]

            component gen_probe VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component gen_probe IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component gen_probe VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component gen_probe Vb_ph {
                addr = "17999"
            }
            [
                position = 8880, 7880
            ]

            component gen_probe Ia_ph {
                addr = "17999"
            }
            [
                position = 8880, 7992
            ]

            component gen_probe Va_ph {
                addr = "17999"
            }
            [
                position = 8880, 7824
            ]

            component gen_probe Vc_ph {
                addr = "17999"
            }
            [
                position = 8880, 7936
            ]

            component gen_probe Ib_ph {
                addr = "17999"
            }
            [
                position = 8880, 8048
            ]

            component gen_probe Ic_ph {
                addr = "17999"
            }
            [
                position = 8880, 8104
            ]

            component gen_c_function phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8592, 8200
                size = 96, 128
            ]

            component gen_bus_join "Bus Join" {
                inputs = "6"
            }
            [
                position = 8400, 8064
                rotation = right
                hide_name = True
            ]

            component gen_bus_split "Bus Split" {
                outputs = "6"
            }
            [
                position = 8744, 8152
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 7872
                hide_name = True
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 7944
                hide_name = True
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 7968
                hide_name = True
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 7896
                hide_name = True
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 7920
                hide_name = True
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8512, 8080
                rotation = right
                hide_name = True
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8280, 7992
                hide_name = True
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8480, 7776
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect IA_rms.in "Meter Split2.IA_RMS" as Connection486
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out3" Ia_ph.in as Connection592
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
        }
        [
            position = 13560, 9504
            size = 104, 80
        ]

        component gen_rms_value "RMS value1" {
        }
        [
            position = 4984, 8560
            hide_name = True
        ]

        component gen_probe Vref_rms {
        }
        [
            position = 5072, 8560
        ]

        tag V_REF_goto {
            value = "V_REF"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4984, 8600
            hide_name = True
            size = 60, 20
        ]

        tag Goto701 {
            value = "output701"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 5632, 8888
            hide_name = True
            size = 60, 20
        ]

        tag From701 {
            value = "output701"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5400, 9128
            hide_name = True
            size = 60, 20
        ]

        tag From734 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5400, 9160
            hide_name = True
            size = 60, 20
        ]

        tag Goto734 {
            value = "output702"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 6184, 8888
            hide_name = True
            size = 60, 20
        ]

        tag Goto735 {
            value = "output703"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7088, 8896
            hide_name = True
            size = 60, 20
        ]

        tag Goto736 {
            value = "output704"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7848, 8896
            hide_name = True
            size = 60, 20
        ]

        tag From735 {
            value = "output702"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5952, 9128
            hide_name = True
            size = 60, 20
        ]

        tag From736 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5952, 9160
            hide_name = True
            size = 60, 20
        ]

        tag From737 {
            value = "output703"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6856, 9136
            hide_name = True
            size = 60, 20
        ]

        tag From738 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6856, 9168
            hide_name = True
            size = 60, 20
        ]

        tag From739 {
            value = "output704"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7616, 9136
            hide_name = True
            size = 60, 20
        ]

        tag From740 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7616, 9168
            hide_name = True
            size = 60, 20
        ]

        tag Goto737 {
            value = "output705"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8520, 8896
            hide_name = True
            size = 60, 20
        ]

        tag From741 {
            value = "output705"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8288, 9136
            hide_name = True
            size = 60, 20
        ]

        tag From742 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8288, 9168
            hide_name = True
            size = 60, 20
        ]

        tag Goto738 {
            value = "output706"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9264, 8888
            hide_name = True
            size = 60, 20
        ]

        tag From743 {
            value = "output706"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9032, 9128
            hide_name = True
            size = 60, 20
        ]

        tag From744 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9032, 9160
            hide_name = True
            size = 60, 20
        ]

        tag Goto739 {
            value = "output707"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9944, 8896
            hide_name = True
            size = 60, 20
        ]

        tag From745 {
            value = "output707"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9712, 9136
            hide_name = True
            size = 60, 20
        ]

        tag From746 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9712, 9168
            hide_name = True
            size = 60, 20
        ]

        tag Goto740 {
            value = "output708"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 10472, 8912
            hide_name = True
            size = 60, 20
        ]

        tag From747 {
            value = "output708"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10240, 9152
            hide_name = True
            size = 60, 20
        ]

        tag From748 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10240, 9184
            hide_name = True
            size = 60, 20
        ]

        tag Goto741 {
            value = "output709"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 11432, 8896
            hide_name = True
            size = 60, 20
        ]

        tag From749 {
            value = "output709"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 11200, 9136
            hide_name = True
            size = 60, 20
        ]

        tag From750 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 11200, 9168
            hide_name = True
            size = 60, 20
        ]

        tag Goto742 {
            value = "output710"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 11304, 10160
            hide_name = True
            size = 60, 20
        ]

        tag From751 {
            value = "output710"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 11072, 10400
            hide_name = True
            size = 60, 20
        ]

        tag From752 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 11072, 10432
            hide_name = True
            size = 60, 20
        ]

        tag Goto743 {
            value = "output711"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 10512, 10160
            hide_name = True
            size = 60, 20
        ]

        tag From753 {
            value = "output711"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10280, 10400
            hide_name = True
            size = 60, 20
        ]

        tag From754 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10280, 10432
            hide_name = True
            size = 60, 20
        ]

        tag Goto744 {
            value = "output712"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9840, 10160
            hide_name = True
            size = 60, 20
        ]

        tag From755 {
            value = "output712"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9608, 10400
            hide_name = True
            size = 60, 20
        ]

        tag From756 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9608, 10432
            hide_name = True
            size = 60, 20
        ]

        tag Goto745 {
            value = "output713"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 10248, 10760
            hide_name = True
            size = 60, 20
        ]

        tag From757 {
            value = "output713"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10016, 11000
            hide_name = True
            size = 60, 20
        ]

        tag From758 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10016, 11032
            hide_name = True
            size = 60, 20
        ]

        tag Goto746 {
            value = "output714"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 11040, 10768
            hide_name = True
            size = 60, 20
        ]

        tag From759 {
            value = "output714"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10808, 11008
            hide_name = True
            size = 60, 20
        ]

        tag From760 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10808, 11040
            hide_name = True
            size = 60, 20
        ]

        tag Goto747 {
            value = "output715"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 11672, 10768
            hide_name = True
            size = 60, 20
        ]

        tag From761 {
            value = "output715"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 11440, 11008
            hide_name = True
            size = 60, 20
        ]

        tag From762 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 11440, 11040
            hide_name = True
            size = 60, 20
        ]

        tag Goto748 {
            value = "output716"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 13048, 10752
            hide_name = True
            size = 60, 20
        ]

        tag From763 {
            value = "output716"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 12816, 10992
            hide_name = True
            size = 60, 20
        ]

        tag From764 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 12816, 11024
            hide_name = True
            size = 60, 20
        ]

        tag Goto749 {
            value = "output717"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 13304, 10152
            hide_name = True
            size = 60, 20
        ]

        tag From765 {
            value = "output717"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 13072, 10392
            hide_name = True
            size = 60, 20
        ]

        tag From766 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 13072, 10424
            hide_name = True
            size = 60, 20
        ]

        tag Goto750 {
            value = "output718"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 12752, 10160
            hide_name = True
            size = 60, 20
        ]

        tag From767 {
            value = "output718"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 12520, 10400
            hide_name = True
            size = 60, 20
        ]

        tag From768 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 12520, 10432
            hide_name = True
            size = 60, 20
        ]

        tag Goto751 {
            value = "output719"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 6832, 10160
            hide_name = True
            size = 60, 20
        ]

        tag From769 {
            value = "output719"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6600, 10400
            hide_name = True
            size = 60, 20
        ]

        tag From770 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6600, 10432
            hide_name = True
            size = 60, 20
        ]

        tag Goto752 {
            value = "output720"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7384, 10160
            hide_name = True
            size = 60, 20
        ]

        tag From771 {
            value = "output720"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7152, 10400
            hide_name = True
            size = 60, 20
        ]

        tag From772 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7152, 10432
            hide_name = True
            size = 60, 20
        ]

        tag Goto753 {
            value = "output721"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7928, 10152
            hide_name = True
            size = 60, 20
        ]

        tag From773 {
            value = "output721"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7696, 10392
            hide_name = True
            size = 60, 20
        ]

        tag From774 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7696, 10424
            hide_name = True
            size = 60, 20
        ]

        tag Goto754 {
            value = "output722"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8680, 10152
            hide_name = True
            size = 60, 20
        ]

        tag From775 {
            value = "output722"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8448, 10392
            hide_name = True
            size = 60, 20
        ]

        tag From776 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8448, 10424
            hide_name = True
            size = 60, 20
        ]

        tag Goto755 {
            value = "output723"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7848, 7832
            hide_name = True
            size = 60, 20
        ]

        tag From777 {
            value = "output723"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7616, 8072
            hide_name = True
            size = 60, 20
        ]

        tag From778 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7616, 8104
            hide_name = True
            size = 60, 20
        ]

        tag Goto756 {
            value = "output724"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8432, 7832
            hide_name = True
            size = 60, 20
        ]

        tag From779 {
            value = "output724"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8200, 8072
            hide_name = True
            size = 60, 20
        ]

        tag From780 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8200, 8104
            hide_name = True
            size = 60, 20
        ]

        tag Goto757 {
            value = "output725"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9032, 7840
            hide_name = True
            size = 60, 20
        ]

        tag From781 {
            value = "output725"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8800, 8080
            hide_name = True
            size = 60, 20
        ]

        tag From782 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8800, 8112
            hide_name = True
            size = 60, 20
        ]

        tag Goto758 {
            value = "output726"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9904, 8248
            hide_name = True
            size = 60, 20
        ]

        tag From783 {
            value = "output726"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9672, 8488
            hide_name = True
            size = 60, 20
        ]

        tag From784 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9672, 8520
            hide_name = True
            size = 60, 20
        ]

        tag Goto759 {
            value = "output727"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 10472, 8248
            hide_name = True
            size = 60, 20
        ]

        tag From785 {
            value = "output727"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10240, 8488
            hide_name = True
            size = 60, 20
        ]

        tag From786 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10240, 8520
            hide_name = True
            size = 60, 20
        ]

        tag Goto760 {
            value = "output728"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 10984, 8264
            hide_name = True
            size = 60, 20
        ]

        tag From787 {
            value = "output728"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10752, 8504
            hide_name = True
            size = 60, 20
        ]

        tag From788 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10752, 8536
            hide_name = True
            size = 60, 20
        ]

        tag Goto761 {
            value = "output729"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 11760, 8248
            hide_name = True
            size = 60, 20
        ]

        tag From789 {
            value = "output729"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 11528, 8488
            hide_name = True
            size = 60, 20
        ]

        tag From790 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 11528, 8520
            hide_name = True
            size = 60, 20
        ]

        tag Goto762 {
            value = "output730"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 12568, 8248
            hide_name = True
            size = 60, 20
        ]

        tag From791 {
            value = "output730"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 12336, 8488
            hide_name = True
            size = 60, 20
        ]

        tag From792 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 12336, 8520
            hide_name = True
            size = 60, 20
        ]

        tag Goto763 {
            value = "output731"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 13208, 8248
            hide_name = True
            size = 60, 20
        ]

        tag From793 {
            value = "output731"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 12976, 8488
            hide_name = True
            size = 60, 20
        ]

        tag From794 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 12976, 8520
            hide_name = True
            size = 60, 20
        ]

        tag Goto764 {
            value = "output732"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 13792, 8248
            hide_name = True
            size = 60, 20
        ]

        tag From795 {
            value = "output732"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 13560, 8488
            hide_name = True
            size = 60, 20
        ]

        tag From796 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 13560, 8520
            hide_name = True
            size = 60, 20
        ]

        tag Goto765 {
            value = "output733"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 13672, 9248
            hide_name = True
            size = 60, 20
        ]

        tag From797 {
            value = "output733"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 13440, 9488
            hide_name = True
            size = 60, 20
        ]

        tag From798 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 13440, 9520
            hide_name = True
            size = 60, 20
        ]

        junction Junction602 pe
        [
            position = 7216, 8832
        ]

        junction Junction603 pe
        [
            position = 7200, 8816
        ]

        junction Junction619 pe
        [
            position = 5544, 8800
        ]

        junction Junction620 pe
        [
            position = 5520, 8816
        ]

        junction Junction621 pe
        [
            position = 5496, 8832
        ]

        junction Junction688 pe
        [
            position = 7184, 8800
        ]

        junction Junction736 pe
        [
            position = 5016, 8720
        ]

        junction Junction737 pe
        [
            position = 4864, 8816
        ]

        junction Junction808 pe
        [
            position = 9304, 8800
        ]

        junction Junction809 pe
        [
            position = 9320, 8816
        ]

        junction Junction811 pe
        [
            position = 9336, 8832
        ]

        junction Junction845 pe
        [
            position = 11520, 8816
        ]

        junction Junction873 pe
        [
            position = 11504, 8800
        ]

        junction Junction889 pe
        [
            position = 10544, 8816
        ]

        junction Junction891 pe
        [
            position = 10528, 8800
        ]

        junction Junction895 pe
        [
            position = 11920, 8168
        ]

        junction Junction896 pe
        [
            position = 11936, 8152
        ]

        junction Junction901 pe
        [
            position = 11536, 8832
        ]

        junction Junction921 pe
        [
            position = 7960, 10056
        ]

        junction Junction923 pe
        [
            position = 7976, 10072
        ]

        junction Junction924 pe
        [
            position = 7992, 10088
        ]

        junction Junction928 pe
        [
            position = 9480, 10072
        ]

        junction Junction955 pe
        [
            position = 6320, 8800
        ]

        junction Junction956 pe
        [
            position = 6304, 8816
        ]

        junction Junction959 pe
        [
            position = 6288, 8832
        ]

        junction Junction962 pe
        [
            position = 10560, 8832
        ]

        junction Junction966 pe
        [
            position = 11920, 10672
        ]

        junction Junction971 pe
        [
            position = 6096, 8800
        ]

        junction Junction972 pe
        [
            position = 6072, 8816
        ]

        junction Junction973 pe
        [
            position = 6048, 8832
        ]

        junction Junction974 pe
        [
            position = 7000, 8800
        ]

        junction Junction975 pe
        [
            position = 6976, 8816
        ]

        junction Junction976 pe
        [
            position = 6952, 8832
        ]

        junction Junction978 pe
        [
            position = 7760, 8800
        ]

        junction Junction979 pe
        [
            position = 7736, 8816
        ]

        junction Junction980 pe
        [
            position = 7712, 8832
        ]

        junction Junction981 pe
        [
            position = 8432, 8800
        ]

        junction Junction982 pe
        [
            position = 8408, 8816
        ]

        junction Junction983 pe
        [
            position = 8384, 8832
        ]

        junction Junction987 pe
        [
            position = 9152, 8816
        ]

        junction Junction988 pe
        [
            position = 9128, 8832
        ]

        junction Junction989 pe
        [
            position = 9856, 8800
        ]

        junction Junction990 pe
        [
            position = 9832, 8816
        ]

        junction Junction991 pe
        [
            position = 9808, 8832
        ]

        junction Junction992 pe
        [
            position = 10384, 8800
        ]

        junction Junction993 pe
        [
            position = 10360, 8816
        ]

        junction Junction994 pe
        [
            position = 10336, 8832
        ]

        junction Junction995 pe
        [
            position = 11344, 8800
        ]

        junction Junction996 pe
        [
            position = 11320, 8816
        ]

        junction Junction997 pe
        [
            position = 11296, 8832
        ]

        junction Junction999 pe
        [
            position = 9496, 10056
        ]

        junction Junction1000 pe
        [
            position = 9464, 10088
        ]

        junction Junction1001 pe
        [
            position = 11216, 10056
        ]

        junction Junction1002 pe
        [
            position = 11192, 10072
        ]

        junction Junction1003 pe
        [
            position = 11168, 10088
        ]

        junction Junction1004 pe
        [
            position = 10424, 10056
        ]

        junction Junction1005 pe
        [
            position = 10400, 10072
        ]

        junction Junction1006 pe
        [
            position = 10376, 10088
        ]

        junction Junction1007 pe
        [
            position = 9752, 10056
        ]

        junction Junction1008 pe
        [
            position = 9728, 10072
        ]

        junction Junction1009 pe
        [
            position = 9704, 10088
        ]

        junction Junction1010 pe
        [
            position = 10160, 10656
        ]

        junction Junction1011 pe
        [
            position = 10136, 10672
        ]

        junction Junction1012 pe
        [
            position = 10112, 10688
        ]

        junction Junction1013 pe
        [
            position = 10952, 10656
        ]

        junction Junction1014 pe
        [
            position = 10928, 10672
        ]

        junction Junction1015 pe
        [
            position = 10904, 10688
        ]

        junction Junction1016 pe
        [
            position = 11584, 10656
        ]

        junction Junction1017 pe
        [
            position = 11560, 10672
        ]

        junction Junction1018 pe
        [
            position = 11536, 10688
        ]

        junction Junction1020 pe
        [
            position = 12016, 10656
        ]

        junction Junction1021 pe
        [
            position = 12960, 10656
        ]

        junction Junction1022 pe
        [
            position = 12936, 10672
        ]

        junction Junction1023 pe
        [
            position = 12912, 10688
        ]

        junction Junction1024 pe
        [
            position = 13216, 10056
        ]

        junction Junction1025 pe
        [
            position = 13192, 10072
        ]

        junction Junction1026 pe
        [
            position = 13168, 10088
        ]

        junction Junction1027 pe
        [
            position = 12664, 10056
        ]

        junction Junction1028 pe
        [
            position = 12640, 10072
        ]

        junction Junction1029 pe
        [
            position = 12616, 10088
        ]

        junction Junction1030 pe
        [
            position = 6744, 10056
        ]

        junction Junction1031 pe
        [
            position = 6720, 10072
        ]

        junction Junction1032 pe
        [
            position = 6696, 10088
        ]

        junction Junction1033 pe
        [
            position = 7296, 10056
        ]

        junction Junction1034 pe
        [
            position = 7272, 10072
        ]

        junction Junction1035 pe
        [
            position = 7248, 10088
        ]

        junction Junction1036 pe
        [
            position = 7840, 10056
        ]

        junction Junction1037 pe
        [
            position = 7816, 10072
        ]

        junction Junction1038 pe
        [
            position = 7792, 10088
        ]

        junction Junction1039 pe
        [
            position = 8592, 10056
        ]

        junction Junction1040 pe
        [
            position = 8568, 10072
        ]

        junction Junction1041 pe
        [
            position = 8544, 10088
        ]

        junction Junction1042 pe
        [
            position = 7760, 7736
        ]

        junction Junction1043 pe
        [
            position = 7736, 7752
        ]

        junction Junction1044 pe
        [
            position = 7712, 7768
        ]

        junction Junction1045 pe
        [
            position = 8344, 7736
        ]

        junction Junction1046 pe
        [
            position = 8320, 7752
        ]

        junction Junction1047 pe
        [
            position = 8296, 7768
        ]

        junction Junction1048 pe
        [
            position = 8944, 7736
        ]

        junction Junction1049 pe
        [
            position = 8920, 7752
        ]

        junction Junction1050 pe
        [
            position = 8896, 7768
        ]

        junction Junction1051 pe
        [
            position = 9816, 8152
        ]

        junction Junction1052 pe
        [
            position = 9792, 8168
        ]

        junction Junction1053 pe
        [
            position = 9768, 8184
        ]

        junction Junction1054 pe
        [
            position = 10384, 8152
        ]

        junction Junction1055 pe
        [
            position = 10360, 8168
        ]

        junction Junction1056 pe
        [
            position = 10336, 8184
        ]

        junction Junction1057 pe
        [
            position = 10896, 8152
        ]

        junction Junction1058 pe
        [
            position = 10872, 8168
        ]

        junction Junction1059 pe
        [
            position = 10848, 8184
        ]

        junction Junction1064 pe
        [
            position = 11648, 8168
        ]

        junction Junction1065 pe
        [
            position = 11624, 8184
        ]

        junction Junction1067 pe
        [
            position = 12480, 8152
        ]

        junction Junction1068 pe
        [
            position = 12456, 8168
        ]

        junction Junction1069 pe
        [
            position = 12432, 8184
        ]

        junction Junction1070 pe
        [
            position = 13120, 8152
        ]

        junction Junction1071 pe
        [
            position = 13096, 8168
        ]

        junction Junction1072 pe
        [
            position = 13072, 8184
        ]

        junction Junction1073 pe
        [
            position = 13704, 8152
        ]

        junction Junction1074 pe
        [
            position = 13680, 8168
        ]

        junction Junction1075 pe
        [
            position = 13656, 8184
        ]

        junction Junction1076 pe
        [
            position = 13584, 9128
        ]

        junction Junction1077 pe
        [
            position = 13560, 9144
        ]

        junction Junction1078 pe
        [
            position = 13536, 9160
        ]

        junction Junction1079 pe
        [
            position = 11904, 8184
        ]

        junction Junction1080 pe
        [
            position = 11824, 10688
        ]

        junction Junction1081 sp
        [
            position = 4936, 8600
        ]

        junction Junction1082 pe
        [
            position = 11672, 8152
        ]

        junction Junction1083 pe
        [
            position = 9176, 8800
        ]

        comment Comment9 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 716</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kW </p></body></html> ENDCOMMENT 
        [
            position = 12880, 10568
        ]

        comment Comment13 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 715</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 10 kW</p></body></html> ENDCOMMENT 
        [
            position = 11504, 10576
        ]

        comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 714</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 120 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 80 kW</p></body></html> ENDCOMMENT 
        [
            position = 10880, 10568
        ]

        comment Comment17 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 713</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 35 kW</p></body></html> ENDCOMMENT 
        [
            position = 10088, 10576
        ]

        comment Comment18 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 712</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 35 kW </p></body></html> ENDCOMMENT 
        [
            position = 9680, 9968
        ]

        comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 711</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 45 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 30 kW</p></body></html> ENDCOMMENT 
        [
            position = 10272, 9968
        ]

        comment Comment20 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 710</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kW</p></body></html> ENDCOMMENT 
        [
            position = 11144, 9960
        ]

        comment Comment21 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 709</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kW</p></body></html> ENDCOMMENT 
        [
            position = 11368, 8712
        ]

        comment Comment22 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 708</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 200 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 100 kW</p></body></html> ENDCOMMENT 
        [
            position = 10224, 8720
        ]

        comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 707</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 200 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 100 kW </p></body></html> ENDCOMMENT 
        [
            position = 9760, 8720
        ]

        comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 706</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kW</p></body></html> ENDCOMMENT 
        [
            position = 9112, 8704
        ]

        comment Comment25 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 733</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kW</p></body></html> ENDCOMMENT 
        [
            position = 13512, 9040
        ]

        comment Comment26 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 732</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 210 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 100 kW</p></body></html> ENDCOMMENT 
        [
            position = 13624, 8072
        ]

        comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 731</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 150 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 70 kW </p></body></html> ENDCOMMENT 
        [
            position = 13056, 8064
        ]

        comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 730</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 200 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 600 kW </p></body></html> ENDCOMMENT 
        [
            position = 12408, 8072
        ]

        comment Comment29 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 729</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 120 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 70 kW</p></body></html> ENDCOMMENT 
        [
            position = 11600, 8064
        ]

        comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 728</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kW</p></body></html> ENDCOMMENT 
        [
            position = 10920, 8072
        ]

        comment Comment31 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 727</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 25 kW</p></body></html> ENDCOMMENT 
        [
            position = 10312, 8072
        ]

        comment Comment32 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 726</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 25 kW</p></body></html> ENDCOMMENT 
        [
            position = 9760, 8072
        ]

        comment Comment33 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 705</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 30 kW</p></body></html> ENDCOMMENT 
        [
            position = 8368, 8704
        ]

        comment Comment34 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 704</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 120 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 80 kW</p></body></html> ENDCOMMENT 
        [
            position = 7696, 8712
        ]

        comment Comment35 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 703</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kW </p></body></html> ENDCOMMENT 
        [
            position = 6928, 8720
        ]

        comment Comment38 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 724</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 420 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 200 kW </p></body></html> ENDCOMMENT 
        [
            position = 8256, 7656
        ]

        comment Comment37 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 723</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 50 kW</p></body></html> ENDCOMMENT 
        [
            position = 7672, 7656
        ]

        comment Comment39 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 725</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 420 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 200 kW  </p></body></html> ENDCOMMENT 
        [
            position = 8848, 7656
        ]

        comment Comment40 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 702</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 100 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 60 kW</p></body></html> ENDCOMMENT 
        [
            position = 6016, 8720
        ]

        comment Comment41 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 720</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kW</p></body></html> ENDCOMMENT 
        [
            position = 7224, 9976
        ]

        comment Comment36 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 719</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kW</p></body></html> ENDCOMMENT 
        [
            position = 6680, 9976
        ]

        comment Comment42 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 721</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kW </p></body></html> ENDCOMMENT 
        [
            position = 7752, 9976
        ]

        comment Comment43 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 722</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kW</p></body></html> ENDCOMMENT 
        [
            position = 8520, 9976
        ]

        comment Comment44 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 701</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 1W</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 1W </p></body></html> ENDCOMMENT 
        [
            position = 5488, 8704
        ]

        comment Comment45 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-style:italic;">Tie line between Node 708 &amp; 721</span></p></body></html> ENDCOMMENT 
        [
            position = 8576, 9632
        ]

        comment Comment47 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-style:italic;">Tie line between</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-style:italic;">Node 709 &amp; 715</span> </p></body></html> ENDCOMMENT 
        [
            position = 12112, 9256
        ]

        comment Comment48 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-style:italic;">Tie line between</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-style:italic;">Node 712 &amp; 722</span> </p></body></html> ENDCOMMENT 
        [
            position = 8816, 10112
        ]

        comment Comment52 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-style:italic;">Tie line between Node 725 &amp; 729</span></p></body></html> ENDCOMMENT 
        [
            position = 9440, 7776
        ]

        comment Comment55 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE REFERENCE </p></body></html> ENDCOMMENT 
        [
            position = 4896, 8504
        ]

        comment Comment51 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-style:italic;">Tie line between</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-style:italic;">Node 718 &amp; 733</span> </p></body></html> ENDCOMMENT 
        [
            position = 12920, 9056
        ]

        comment Comment6 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 718 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 90 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 40 kW</p></body></html> ENDCOMMENT 
        [
            position = 12624, 9952
        ]

        comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus 717 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 60 kW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 20 kW </p></body></html> ENDCOMMENT 
        [
            position = 13128, 9968
        ]

        comment Comment56 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Impedance of the slack bus</p></body></html> ENDCOMMENT 
        [
            position = 5184, 8856
        ]

        comment Comment8 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:22pt; font-weight:600;">Hardware requirements:</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:22pt;">This example can be run on the following HIL devices:</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:22pt;">- HIL 602+</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:22pt;">- HIL 604</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:22pt;">- HIL 606</span>   </p></body></html> ENDCOMMENT 
        [
            position = 4888, 8240
        ]

        connect "Line 733.P4" "CC 7.b_in" as Connection3760
        connect "Line 708.P4" "CC 3.b_in" as Connection3924
        connect "Line 708.P6" "CC 3.a_in" as Connection3925
        connect "Line 708.P2" "CC 3.c_in" as Connection3926
        connect "Line 700.P3" "Feeder sw.b_out" as Connection4053
        connect "Line 700.P1" "Feeder sw.c_out" as Connection4054
        connect "Line 722.P1" Junction602 as Connection4261
        connect Junction602 "Line 703.P1" as Connection4262
        connect "Line 722.P3" Junction603 as Connection4264
        connect Junction603 "Line 703.P3" as Connection4265
        connect From701 Meter701.meter_data as Connection4196
        connect "Line 701.P5" Junction619 as Connection4850
        connect Junction619 "Line 700.P6" as Connection4856
        connect "Line 700.P4" Junction620 as Connection4857
        connect Junction620 "Line 701.P3" as Connection4858
        connect "Line 700.P2" Junction621 as Connection4861
        connect Junction621 "Line 701.P1" as Connection4862
        connect "Line 703.P5" Junction688 as Connection5303
        connect "Line 722.P5" Junction688 as Connection5305
        connect "Line 705.P2" "CC 2.c_in" as Connection5485
        connect "Line 705.P4" "CC 2.b_in" as Connection5486
        connect "Line 705.P6" "CC 2.a_in" as Connection5487
        connect "Line 737.P4" "CC 5.b_in" as Connection5509
        connect "Line 737.P2" "CC 5.c_in" as Connection5510
        connect "Line 702.P6" CC1.a_in as Connection5545
        connect "Line 702.P4" CC1.b_in as Connection5546
        connect "Line 702.P2" CC1.c_in as Connection5547
        connect "feeder ON.out" "Feeder sw.ctrl_in" as Connection5548
        connect Vref.p_node Junction736 as Connection5555
        connect Junction736 "Feeder sw.a_in" as Connection5556
        connect Vs.a_node Junction736 as Connection5557
        connect "Feeder sw.b_in" Vs.b_node as Connection5558
        connect Vs.c_node "Feeder sw.c_in" as Connection5559
        connect Vref.n_node Junction737 as Connection5560
        connect Junction737 gnd_700.node as Connection5561
        connect Vs.n_node Junction737 as Connection5562
        connect "Line 728.P4" "CC 6.b_in" as Connection5569
        connect "Line 737.P6" "CC 5.a_in" as Connection5894
        connect "Line 725.P5" Junction808 as Connection5970
        connect "Line 706.P5" Junction808 as Connection5972
        connect "Line 725.P3" Junction809 as Connection5973
        connect "Line 706.P3" Junction809 as Connection5975
        connect "Line 706.P1" Junction811 as Connection5979
        connect "Line 725.P1" Junction811 as Connection5981
        connect "CC 4.b_out" "Line 715.P3" as Connection6138
        connect "Line 715.P1" "CC 4.c_out" as Connection6139
        connect Junction845 "Line 709.P4" as Connection6147
        connect "Line 734.P4" Junction845 as Connection6148
        connect "Line 735.P4" "CC 8.b_in" as Connection4068
        connect Junction873 "Line 734.P2" as Connection6302
        connect "Line 709.P6" Junction873 as Connection6303
        connect Tie_line_3.out Tie_sw_3.ctrl_in as Connection6371
        connect "Line 708.P3" Junction889 as Connection6380
        connect Tie_sw_3.b_out Junction889 as Connection6382
        connect Tie_sw_3.c_in "CC 7.c_out" as Connection6387
        connect "CC 7.a_out" Tie_sw_3.a_in as Connection6389
        connect "CC 7.b_out" Tie_sw_3.b_in as Connection6390
        connect Junction891 "Line 708.P5" as Connection6392
        connect Tie_sw_3.a_out Junction891 as Connection6393
        connect Tie_line_1.out Tie_sw_1.ctrl_in as Connection6406
        connect Junction895 "Line 729.P3" as Connection6410
        connect Tie_sw_1.b_out Junction895 as Connection6411
        connect "Line 729.P5" Junction896 as Connection6412
        connect Tie_sw_1.a_out Junction896 as Connection6414
        connect Tie_sw_1.c_in "CC 5.c_out" as Connection6419
        connect "CC 5.b_out" Tie_sw_1.b_in as Connection6420
        connect Tie_sw_1.a_in "CC 5.a_out" as Connection6421
        connect Junction901 "Line 709.P2" as Connection6436
        connect "Line 734.P6" Junction901 as Connection6437
        connect Tie_line_2.out Tie_sw_2.ctrl_in as Connection6470
        connect "Line 734.P3" Tie_sw_2.b_out as Connection6472
        connect "Line 721.P5" Junction921 as Connection6522
        connect "Line 733.P5" Junction921 as Connection6524
        connect "Line 721.P3" Junction923 as Connection6531
        connect "Line 733.P3" Junction923 as Connection6533
        connect "Line 721.P1" Junction924 as Connection6534
        connect "Line 733.P1" Junction924 as Connection6536
        connect "Line 735.P6" "CC 8.a_in" as Connection6545
        connect "Line 735.P2" "CC 8.c_in" as Connection6546
        connect Tie_line_5.out Tie_sw_5.ctrl_in as Connection6549
        connect Tie_sw_5.a_in "CC 8.a_out" as Connection6551
        connect "CC 8.b_out" Tie_sw_5.b_in as Connection6556
        connect "Line 712.P4" Junction928 as Connection6557
        connect Tie_sw_5.b_out Junction928 as Connection6559
        connect "CC 8.c_out" Tie_sw_5.c_in as Connection6561
        connect "Line 733.P2" "CC 7.c_in" as Connection6566
        connect "Line 733.P6" "CC 7.a_in" as Connection6567
        connect "Line 736.P2" Tie_sw_4.a_out as Connection6602
        connect "Line 736.P4" Tie_sw_4.b_out as Connection6603
        connect "Line 736.P6" Tie_sw_4.c_out as Connection6604
        connect "Line 702.P5" Junction955 as Connection6744
        connect Junction955 "Line 718.P5" as Connection6745
        connect "Line 718.P3" Junction956 as Connection6747
        connect Junction956 "Line 702.P3" as Connection6748
        connect "Line 718.P1" Junction959 as Connection6756
        connect Junction959 "Line 702.P1" as Connection6757
        connect Tie_sw_3.c_out Junction962 as Connection6767
        connect Junction962 "Line 708.P1" as Connection6768
        connect "Line 734.P5" Tie_sw_2.c_out as Connection6773
        connect Junction966 "CC 4.b_in" as Connection6790
        connect Tie_sw_2.b_in Junction966 as Connection6791
        connect Tie_line_4.out Tie_sw_4.ctrl_in as Connection6450
        connect 3ph_Meter701.A+ Junction619 as Connection6812
        connect 3ph_Meter701.B+ Junction620 as Connection6814
        connect 3ph_Meter701.C+ Junction621 as Connection6816
        connect 3ph_Meter701.A- Pg701.A as Connection6817
        connect 3ph_Meter701.B- Pg701.B as Connection6818
        connect 3ph_Meter701.C- Pg701.C as Connection6819
        connect Pg701.N 3ph_Meter701.GND as Connection6820
        connect Goto701 3ph_Meter701.Out as Connection6821
        connect From734 Meter701.ref as Connection6822
        connect 3ph_Meter702.A- Pg702.A as Connection6828
        connect 3ph_Meter702.B- Pg702.B as Connection6829
        connect 3ph_Meter702.C- Pg702.C as Connection6830
        connect Pg702.N 3ph_Meter702.GND as Connection6831
        connect Goto734 3ph_Meter702.Out as Connection6832
        connect "Line 701.P6" Junction971 as Connection6834
        connect Junction971 Junction955 as Connection6835
        connect 3ph_Meter702.A+ Junction971 as Connection6836
        connect "Line 701.P4" Junction972 as Connection6837
        connect Junction972 Junction956 as Connection6838
        connect 3ph_Meter702.B+ Junction972 as Connection6839
        connect Junction959 Junction973 as Connection6840
        connect Junction973 "Line 701.P2" as Connection6841
        connect 3ph_Meter702.C+ Junction973 as Connection6842
        connect 3ph_Meter703.A- Pg703.A as Connection6851
        connect 3ph_Meter703.B- Pg703.B as Connection6852
        connect 3ph_Meter703.C- Pg703.C as Connection6853
        connect Pg703.N 3ph_Meter703.GND as Connection6854
        connect Goto735 3ph_Meter703.Out as Connection6855
        connect Junction974 Junction688 as Connection6858
        connect 3ph_Meter703.A+ Junction974 as Connection6859
        connect CC1.b_out Junction975 as Connection6860
        connect Junction975 Junction603 as Connection6861
        connect 3ph_Meter703.B+ Junction975 as Connection6862
        connect Junction602 Junction976 as Connection6863
        connect Junction976 CC1.c_out as Connection6864
        connect 3ph_Meter703.C+ Junction976 as Connection6865
        connect 3ph_Meter704.A- Pg704.A as Connection6874
        connect 3ph_Meter704.B- Pg704.B as Connection6875
        connect 3ph_Meter704.C- Pg704.C as Connection6876
        connect Pg704.N 3ph_Meter704.GND as Connection6877
        connect Goto736 3ph_Meter704.Out as Connection6878
        connect "Line 703.P6" Junction978 as Connection6880
        connect Junction978 "Line 704.P5" as Connection6881
        connect 3ph_Meter704.A+ Junction978 as Connection6882
        connect "Line 703.P4" Junction979 as Connection6883
        connect Junction979 "Line 704.P3" as Connection6884
        connect 3ph_Meter704.B+ Junction979 as Connection6885
        connect "Line 703.P2" Junction980 as Connection6886
        connect Junction980 "Line 704.P1" as Connection6887
        connect 3ph_Meter704.C+ Junction980 as Connection6888
        connect From735 Meter702.meter_data as Connection6889
        connect From736 Meter702.ref as Connection6890
        connect From737 Meter703.meter_data as Connection6891
        connect From738 Meter703.ref as Connection6892
        connect From739 Meter704.meter_data as Connection6893
        connect From740 Meter704.ref as Connection6894
        connect 3ph_Meter705.A- Pg705.A as Connection6898
        connect 3ph_Meter705.B- Pg705.B as Connection6899
        connect 3ph_Meter705.C- Pg705.C as Connection6900
        connect Pg705.N 3ph_Meter705.GND as Connection6901
        connect Goto737 3ph_Meter705.Out as Connection6902
        connect From741 Meter705.meter_data as Connection6903
        connect From742 Meter705.ref as Connection6904
        connect "Line 704.P6" Junction981 as Connection6905
        connect Junction981 "Line 705.P5" as Connection6906
        connect 3ph_Meter705.A+ Junction981 as Connection6907
        connect "Line 705.P3" Junction982 as Connection6908
        connect Junction982 "Line 704.P4" as Connection6909
        connect 3ph_Meter705.B+ Junction982 as Connection6910
        connect "Line 705.P1" Junction983 as Connection6911
        connect Junction983 "Line 704.P2" as Connection6912
        connect 3ph_Meter705.C+ Junction983 as Connection6913
        connect 3ph_Meter706.A- Pg706.A as Connection6925
        connect 3ph_Meter706.B- Pg706.B as Connection6926
        connect 3ph_Meter706.C- Pg706.C as Connection6927
        connect Pg706.N 3ph_Meter706.GND as Connection6928
        connect Goto738 3ph_Meter706.Out as Connection6929
        connect From743 Meter706.meter_data as Connection6930
        connect From744 Meter706.ref as Connection6931
        connect "CC 2.b_out" Junction987 as Connection6935
        connect Junction987 Junction809 as Connection6936
        connect 3ph_Meter706.B+ Junction987 as Connection6937
        connect Junction811 Junction988 as Connection6938
        connect Junction988 "CC 2.c_out" as Connection6939
        connect 3ph_Meter706.C+ Junction988 as Connection6940
        connect 3ph_Meter707.A- Pg707.A as Connection6944
        connect 3ph_Meter707.B- Pg707.B as Connection6945
        connect 3ph_Meter707.C- Pg707.C as Connection6946
        connect Pg707.N 3ph_Meter707.GND as Connection6947
        connect Goto739 3ph_Meter707.Out as Connection6948
        connect From745 Meter707.meter_data as Connection6949
        connect From746 Meter707.ref as Connection6950
        connect "Line 707.P5" Junction989 as Connection6951
        connect Junction989 "Line 706.P6" as Connection6952
        connect 3ph_Meter707.A+ Junction989 as Connection6953
        connect "Line 707.P3" Junction990 as Connection6954
        connect Junction990 "Line 706.P4" as Connection6955
        connect 3ph_Meter707.B+ Junction990 as Connection6956
        connect "Line 707.P1" Junction991 as Connection6957
        connect Junction991 "Line 706.P2" as Connection6958
        connect 3ph_Meter707.C+ Junction991 as Connection6959
        connect 3ph_Meter708.A- Pg708.A as Connection6963
        connect 3ph_Meter708.B- Pg708.B as Connection6964
        connect 3ph_Meter708.C- Pg708.C as Connection6965
        connect Pg708.N 3ph_Meter708.GND as Connection6966
        connect Goto740 3ph_Meter708.Out as Connection6967
        connect From747 Meter708.meter_data as Connection6968
        connect From748 Meter708.ref as Connection6969
        connect Junction891 Junction992 as Connection6970
        connect Junction992 "Line 707.P6" as Connection6971
        connect 3ph_Meter708.A+ Junction992 as Connection6972
        connect Junction889 Junction993 as Connection6973
        connect Junction993 "Line 707.P4" as Connection6974
        connect 3ph_Meter708.B+ Junction993 as Connection6975
        connect "Line 707.P2" Junction994 as Connection6976
        connect Junction994 Junction962 as Connection6977
        connect 3ph_Meter708.C+ Junction994 as Connection6978
        connect 3ph_Meter709.A- Pg709.A as Connection6982
        connect 3ph_Meter709.B- Pg709.B as Connection6983
        connect 3ph_Meter709.C- Pg709.C as Connection6984
        connect Pg709.N 3ph_Meter709.GND as Connection6985
        connect Goto741 3ph_Meter709.Out as Connection6986
        connect From749 Meter709.meter_data as Connection6987
        connect From750 Meter709.ref as Connection6988
        connect Junction995 Junction873 as Connection6990
        connect 3ph_Meter709.A+ Junction995 as Connection6991
        connect Junction845 Junction996 as Connection6992
        connect Junction996 "CC 3.b_out" as Connection6993
        connect 3ph_Meter709.B+ Junction996 as Connection6994
        connect Junction901 Junction997 as Connection6999
        connect Junction997 3ph_Meter709.C+ as Connection7000
        connect Junction997 "CC 3.c_out" as Connection7001
        connect "Line 712.P2" Junction999 as Connection7011
        connect Junction999 Tie_sw_5.a_out as Connection7013
        connect Junction1000 Tie_sw_5.c_out as Connection7020
        connect "Line 712.P6" Junction1000 as Connection7021
        connect 3ph_Meter710.A- Pg710.A as Connection7025
        connect 3ph_Meter710.B- Pg710.B as Connection7026
        connect 3ph_Meter710.C- Pg710.C as Connection7027
        connect Pg710.N 3ph_Meter710.GND as Connection7028
        connect Goto742 3ph_Meter710.Out as Connection7029
        connect From751 Meter710.meter_data as Connection7030
        connect From752 Meter710.ref as Connection7031
        connect "Line 710.P5" Junction1001 as Connection7032
        connect Junction1001 "Line 709.P5" as Connection7033
        connect 3ph_Meter710.A+ Junction1001 as Connection7034
        connect "Line 710.P3" Junction1002 as Connection7035
        connect Junction1002 "Line 709.P3" as Connection7036
        connect 3ph_Meter710.B+ Junction1002 as Connection7037
        connect "Line 710.P1" Junction1003 as Connection7038
        connect Junction1003 "Line 709.P1" as Connection7039
        connect 3ph_Meter710.C+ Junction1003 as Connection7040
        connect 3ph_Meter711.A- Pg711.A as Connection7044
        connect 3ph_Meter711.B- Pg711.B as Connection7045
        connect 3ph_Meter711.C- Pg711.C as Connection7046
        connect Pg711.N 3ph_Meter711.GND as Connection7047
        connect Goto743 3ph_Meter711.Out as Connection7048
        connect From753 Meter711.meter_data as Connection7049
        connect From754 Meter711.ref as Connection7050
        connect "Line 711.P6" Junction1004 as Connection7051
        connect Junction1004 "Line 710.P6" as Connection7052
        connect 3ph_Meter711.A+ Junction1004 as Connection7053
        connect "Line 711.P4" Junction1005 as Connection7054
        connect Junction1005 "Line 710.P4" as Connection7055
        connect 3ph_Meter711.B+ Junction1005 as Connection7056
        connect "Line 711.P2" Junction1006 as Connection7057
        connect Junction1006 "Line 710.P2" as Connection7058
        connect 3ph_Meter711.C+ Junction1006 as Connection7059
        connect 3ph_Meter712.A- Pg712.A as Connection7063
        connect 3ph_Meter712.B- Pg712.B as Connection7064
        connect 3ph_Meter712.C- Pg712.C as Connection7065
        connect Pg712.N 3ph_Meter712.GND as Connection7066
        connect Goto744 3ph_Meter712.Out as Connection7067
        connect From755 Meter712.meter_data as Connection7068
        connect From756 Meter712.ref as Connection7069
        connect "Line 711.P5" Junction1007 as Connection7070
        connect Junction1007 Junction999 as Connection7071
        connect 3ph_Meter712.A+ Junction1007 as Connection7072
        connect "Line 711.P3" Junction1008 as Connection7073
        connect Junction1008 Junction928 as Connection7074
        connect 3ph_Meter712.B+ Junction1008 as Connection7075
        connect Junction1000 Junction1009 as Connection7076
        connect Junction1009 "Line 711.P1" as Connection7077
        connect 3ph_Meter712.C+ Junction1009 as Connection7078
        connect 3ph_Meter713.A- Pg713.A as Connection7082
        connect 3ph_Meter713.B- Pg713.B as Connection7083
        connect 3ph_Meter713.C- Pg713.C as Connection7084
        connect Pg713.N 3ph_Meter713.GND as Connection7085
        connect Goto745 3ph_Meter713.Out as Connection7086
        connect From757 Meter713.meter_data as Connection7087
        connect From758 Meter713.ref as Connection7088
        connect "Line 713.P5" Junction1010 as Connection7089
        connect Junction1010 "Line 712.P1" as Connection7090
        connect 3ph_Meter713.A+ Junction1010 as Connection7091
        connect "Line 712.P3" Junction1011 as Connection7092
        connect Junction1011 "Line 713.P3" as Connection7093
        connect 3ph_Meter713.B+ Junction1011 as Connection7094
        connect "Line 713.P1" Junction1012 as Connection7095
        connect Junction1012 "Line 712.P5" as Connection7096
        connect 3ph_Meter713.C+ Junction1012 as Connection7097
        connect 3ph_Meter714.A- Pg714.A as Connection7101
        connect 3ph_Meter714.B- Pg714.B as Connection7102
        connect 3ph_Meter714.C- Pg714.C as Connection7103
        connect Pg714.N 3ph_Meter714.GND as Connection7104
        connect Goto746 3ph_Meter714.Out as Connection7105
        connect From759 Meter714.meter_data as Connection7106
        connect From760 Meter714.ref as Connection7107
        connect "Line 714.P5" Junction1013 as Connection7108
        connect Junction1013 "Line 713.P6" as Connection7109
        connect 3ph_Meter714.A+ Junction1013 as Connection7110
        connect "Line 713.P4" Junction1014 as Connection7111
        connect Junction1014 "Line 714.P3" as Connection7112
        connect 3ph_Meter714.B+ Junction1014 as Connection7113
        connect "Line 714.P1" Junction1015 as Connection7114
        connect Junction1015 "Line 713.P2" as Connection7115
        connect 3ph_Meter714.C+ Junction1015 as Connection7116
        connect 3ph_Meter715.A- Pg715.A as Connection7120
        connect 3ph_Meter715.B- Pg715.B as Connection7121
        connect 3ph_Meter715.C- Pg715.C as Connection7122
        connect Pg715.N 3ph_Meter715.GND as Connection7123
        connect Goto747 3ph_Meter715.Out as Connection7124
        connect From761 Meter715.meter_data as Connection7125
        connect From762 Meter715.ref as Connection7126
        connect Junction1016 "Line 714.P6" as Connection7128
        connect 3ph_Meter715.A+ Junction1016 as Connection7129
        connect Junction966 Junction1017 as Connection7130
        connect Junction1017 "Line 714.P4" as Connection7131
        connect 3ph_Meter715.B+ Junction1017 as Connection7132
        connect Junction1018 "Line 714.P2" as Connection7134
        connect 3ph_Meter715.C+ Junction1018 as Connection7135
        connect Junction1016 Junction1020 as Connection7141
        connect Junction1020 Tie_sw_2.a_in as Connection7142
        connect Junction1020 "CC 4.a_in" as Connection7143
        connect "Line 715.P5" "CC 4.a_out" as Connection7144
        connect 3ph_Meter716.A- Pg716.A as Connection7148
        connect 3ph_Meter716.B- Pg716.B as Connection7149
        connect 3ph_Meter716.C- Pg716.C as Connection7150
        connect Pg716.N 3ph_Meter716.GND as Connection7151
        connect Goto748 3ph_Meter716.Out as Connection7152
        connect From763 Meter716.meter_data as Connection7153
        connect From764 Meter716.ref as Connection7154
        connect "Line 716.P5" Junction1021 as Connection7155
        connect Junction1021 "Line 715.P6" as Connection7156
        connect 3ph_Meter716.A+ Junction1021 as Connection7157
        connect "Line 716.P3" Junction1022 as Connection7158
        connect Junction1022 "Line 715.P4" as Connection7159
        connect 3ph_Meter716.B+ Junction1022 as Connection7160
        connect "Line 716.P1" Junction1023 as Connection7161
        connect Junction1023 "Line 715.P2" as Connection7162
        connect 3ph_Meter716.C+ Junction1023 as Connection7163
        connect 3ph_Meter717.A- Pg717.A as Connection7167
        connect 3ph_Meter717.B- Pg717.B as Connection7168
        connect 3ph_Meter717.C- Pg717.C as Connection7169
        connect Pg717.N 3ph_Meter717.GND as Connection7170
        connect Goto749 3ph_Meter717.Out as Connection7171
        connect From765 Meter717.meter_data as Connection7172
        connect From766 Meter717.ref as Connection7173
        connect "Line 717.P6" Junction1024 as Connection7174
        connect Junction1024 "Line 716.P6" as Connection7175
        connect 3ph_Meter717.A+ Junction1024 as Connection7176
        connect "Line 716.P4" Junction1025 as Connection7177
        connect Junction1025 "Line 717.P4" as Connection7178
        connect 3ph_Meter717.B+ Junction1025 as Connection7179
        connect "Line 716.P2" Junction1026 as Connection7180
        connect Junction1026 "Line 717.P2" as Connection7181
        connect 3ph_Meter717.C+ Junction1026 as Connection7182
        connect 3ph_Meter718.A- Pg718.A as Connection7186
        connect 3ph_Meter718.B- Pg718.B as Connection7187
        connect 3ph_Meter718.C- Pg718.C as Connection7188
        connect Pg718.N 3ph_Meter718.GND as Connection7189
        connect Goto750 3ph_Meter718.Out as Connection7190
        connect From767 Meter718.meter_data as Connection7191
        connect From768 Meter718.ref as Connection7192
        connect "Line 717.P5" Junction1027 as Connection7193
        connect Junction1027 Tie_sw_4.a_in as Connection7194
        connect 3ph_Meter718.A+ Junction1027 as Connection7195
        connect Tie_sw_4.b_in Junction1028 as Connection7196
        connect Junction1028 "Line 717.P3" as Connection7197
        connect 3ph_Meter718.B+ Junction1028 as Connection7198
        connect "Line 717.P1" Junction1029 as Connection7199
        connect Junction1029 Tie_sw_4.c_in as Connection7200
        connect 3ph_Meter718.C+ Junction1029 as Connection7201
        connect 3ph_Meter719.A- Pg719.A as Connection7205
        connect 3ph_Meter719.B- Pg719.B as Connection7206
        connect 3ph_Meter719.C- Pg719.C as Connection7207
        connect Pg719.N 3ph_Meter719.GND as Connection7208
        connect Goto751 3ph_Meter719.Out as Connection7209
        connect From769 Meter719.meter_data as Connection7210
        connect From770 Meter719.ref as Connection7211
        connect "Line 719.P5" Junction1030 as Connection7212
        connect Junction1030 "Line 718.P6" as Connection7213
        connect 3ph_Meter719.A+ Junction1030 as Connection7214
        connect "Line 719.P3" Junction1031 as Connection7215
        connect Junction1031 "Line 718.P4" as Connection7216
        connect 3ph_Meter719.B+ Junction1031 as Connection7217
        connect "Line 719.P1" Junction1032 as Connection7218
        connect Junction1032 "Line 718.P2" as Connection7219
        connect 3ph_Meter719.C+ Junction1032 as Connection7220
        connect 3ph_Meter720.A- Pg720.A as Connection7224
        connect 3ph_Meter720.B- Pg720.B as Connection7225
        connect 3ph_Meter720.C- Pg720.C as Connection7226
        connect Pg720.N 3ph_Meter720.GND as Connection7227
        connect Goto752 3ph_Meter720.Out as Connection7228
        connect From771 Meter720.meter_data as Connection7229
        connect From772 Meter720.ref as Connection7230
        connect "Line 719.P6" Junction1033 as Connection7231
        connect Junction1033 "Line 720.P5" as Connection7232
        connect 3ph_Meter720.A+ Junction1033 as Connection7233
        connect "Line 720.P3" Junction1034 as Connection7234
        connect Junction1034 "Line 719.P4" as Connection7235
        connect 3ph_Meter720.B+ Junction1034 as Connection7236
        connect "Line 719.P2" Junction1035 as Connection7237
        connect Junction1035 "Line 720.P1" as Connection7238
        connect 3ph_Meter720.C+ Junction1035 as Connection7239
        connect 3ph_Meter721.A- Pg721.A as Connection7243
        connect 3ph_Meter721.B- Pg721.B as Connection7244
        connect 3ph_Meter721.C- Pg721.C as Connection7245
        connect Pg721.N 3ph_Meter721.GND as Connection7246
        connect Goto753 3ph_Meter721.Out as Connection7247
        connect From773 Meter721.meter_data as Connection7248
        connect From774 Meter721.ref as Connection7249
        connect "Line 720.P6" Junction1036 as Connection7250
        connect Junction1036 Junction921 as Connection7251
        connect 3ph_Meter721.A+ Junction1036 as Connection7252
        connect Junction923 Junction1037 as Connection7253
        connect Junction1037 "Line 720.P4" as Connection7254
        connect 3ph_Meter721.B+ Junction1037 as Connection7255
        connect "Line 720.P2" Junction1038 as Connection7256
        connect Junction1038 Junction924 as Connection7257
        connect 3ph_Meter721.C+ Junction1038 as Connection7258
        connect 3ph_Meter722.A- Pg722.A as Connection7262
        connect 3ph_Meter722.B- Pg722.B as Connection7263
        connect 3ph_Meter722.C- Pg722.C as Connection7264
        connect Pg722.N 3ph_Meter722.GND as Connection7265
        connect Goto754 3ph_Meter722.Out as Connection7266
        connect From775 Meter722.meter_data as Connection7267
        connect From776 Meter722.ref as Connection7268
        connect "Line 721.P6" Junction1039 as Connection7269
        connect Junction1039 "Line 735.P5" as Connection7270
        connect 3ph_Meter722.A+ Junction1039 as Connection7271
        connect "Line 721.P4" Junction1040 as Connection7272
        connect Junction1040 "Line 735.P3" as Connection7273
        connect 3ph_Meter722.B+ Junction1040 as Connection7274
        connect "Line 735.P1" Junction1041 as Connection7275
        connect Junction1041 "Line 721.P2" as Connection7276
        connect 3ph_Meter722.C+ Junction1041 as Connection7277
        connect 3ph_Meter723.A- Pg723.A as Connection7281
        connect 3ph_Meter723.B- Pg723.B as Connection7282
        connect 3ph_Meter723.C- Pg723.C as Connection7283
        connect Pg723.N 3ph_Meter723.GND as Connection7284
        connect Goto755 3ph_Meter723.Out as Connection7285
        connect From777 Meter723.meter_data as Connection7286
        connect From778 Meter723.ref as Connection7287
        connect "Line 723.P5" Junction1042 as Connection7288
        connect Junction1042 "Line 722.P6" as Connection7289
        connect 3ph_Meter723.A+ Junction1042 as Connection7290
        connect "Line 722.P4" Junction1043 as Connection7291
        connect Junction1043 "Line 723.P3" as Connection7292
        connect 3ph_Meter723.B+ Junction1043 as Connection7293
        connect "Line 722.P2" Junction1044 as Connection7294
        connect Junction1044 "Line 723.P1" as Connection7295
        connect 3ph_Meter723.C+ Junction1044 as Connection7296
        connect 3ph_Meter724.A- Pg724.A as Connection7300
        connect 3ph_Meter724.B- Pg724.B as Connection7301
        connect 3ph_Meter724.C- Pg724.C as Connection7302
        connect Pg724.N 3ph_Meter724.GND as Connection7303
        connect Goto756 3ph_Meter724.Out as Connection7304
        connect From779 Meter724.meter_data as Connection7305
        connect From780 Meter724.ref as Connection7306
        connect "Line 724.P5" Junction1045 as Connection7307
        connect Junction1045 "Line 723.P6" as Connection7308
        connect 3ph_Meter724.A+ Junction1045 as Connection7309
        connect "Line 723.P4" Junction1046 as Connection7310
        connect Junction1046 "Line 724.P3" as Connection7311
        connect 3ph_Meter724.B+ Junction1046 as Connection7312
        connect "Line 724.P1" Junction1047 as Connection7313
        connect Junction1047 "Line 723.P2" as Connection7314
        connect 3ph_Meter724.C+ Junction1047 as Connection7315
        connect 3ph_Meter725.A- Pg725.A as Connection7319
        connect 3ph_Meter725.B- Pg725.B as Connection7320
        connect 3ph_Meter725.C- Pg725.C as Connection7321
        connect Pg725.N 3ph_Meter725.GND as Connection7322
        connect Goto757 3ph_Meter725.Out as Connection7323
        connect From781 Meter725.meter_data as Connection7324
        connect From782 Meter725.ref as Connection7325
        connect "Line 724.P6" Junction1048 as Connection7326
        connect Junction1048 "Line 737.P5" as Connection7327
        connect 3ph_Meter725.A+ Junction1048 as Connection7328
        connect "Line 724.P4" Junction1049 as Connection7329
        connect Junction1049 "Line 737.P3" as Connection7330
        connect 3ph_Meter725.B+ Junction1049 as Connection7331
        connect "Line 737.P1" Junction1050 as Connection7332
        connect Junction1050 "Line 724.P2" as Connection7333
        connect 3ph_Meter725.C+ Junction1050 as Connection7334
        connect 3ph_Meter726.A- Pg726.A as Connection7338
        connect 3ph_Meter726.B- Pg726.B as Connection7339
        connect 3ph_Meter726.C- Pg726.C as Connection7340
        connect Pg726.N 3ph_Meter726.GND as Connection7341
        connect Goto758 3ph_Meter726.Out as Connection7342
        connect From783 Meter726.meter_data as Connection7343
        connect From784 Meter726.ref as Connection7344
        connect "Line 725.P6" Junction1051 as Connection7345
        connect Junction1051 "Line 726.P5" as Connection7346
        connect 3ph_Meter726.A+ Junction1051 as Connection7347
        connect "Line 726.P3" Junction1052 as Connection7348
        connect Junction1052 "Line 725.P4" as Connection7349
        connect 3ph_Meter726.B+ Junction1052 as Connection7350
        connect "Line 725.P2" Junction1053 as Connection7351
        connect Junction1053 "Line 726.P1" as Connection7352
        connect 3ph_Meter726.C+ Junction1053 as Connection7353
        connect 3ph_Meter727.A- Pg727.A as Connection7357
        connect 3ph_Meter727.B- Pg727.B as Connection7358
        connect 3ph_Meter727.C- Pg727.C as Connection7359
        connect Pg727.N 3ph_Meter727.GND as Connection7360
        connect Goto759 3ph_Meter727.Out as Connection7361
        connect From785 Meter727.meter_data as Connection7362
        connect From786 Meter727.ref as Connection7363
        connect "Line 727.P5" Junction1054 as Connection7364
        connect Junction1054 "Line 726.P6" as Connection7365
        connect 3ph_Meter727.A+ Junction1054 as Connection7366
        connect "Line 727.P3" Junction1055 as Connection7367
        connect Junction1055 "Line 726.P4" as Connection7368
        connect 3ph_Meter727.B+ Junction1055 as Connection7369
        connect "Line 726.P2" Junction1056 as Connection7370
        connect Junction1056 "Line 727.P1" as Connection7371
        connect 3ph_Meter727.C+ Junction1056 as Connection7372
        connect 3ph_Meter728.A- Pg728.A as Connection7376
        connect 3ph_Meter728.B- Pg728.B as Connection7377
        connect 3ph_Meter728.C- Pg728.C as Connection7378
        connect Pg728.N 3ph_Meter728.GND as Connection7379
        connect Goto760 3ph_Meter728.Out as Connection7380
        connect From787 Meter728.meter_data as Connection7381
        connect From788 Meter728.ref as Connection7382
        connect "Line 727.P6" Junction1057 as Connection7383
        connect Junction1057 "Line 728.P5" as Connection7384
        connect 3ph_Meter728.A+ Junction1057 as Connection7385
        connect "Line 727.P4" Junction1058 as Connection7386
        connect Junction1058 "Line 728.P3" as Connection7387
        connect 3ph_Meter728.B+ Junction1058 as Connection7388
        connect "Line 727.P2" Junction1059 as Connection7389
        connect Junction1059 "Line 728.P1" as Connection7390
        connect 3ph_Meter728.C+ Junction1059 as Connection7391
        connect "Line 728.P6" "CC 6.a_in" as Connection7404
        connect "Line 728.P2" "CC 6.c_in" as Connection7405
        connect 3ph_Meter729.A- Pg729.A as Connection7413
        connect 3ph_Meter729.B- Pg729.B as Connection7414
        connect 3ph_Meter729.C- Pg729.C as Connection7415
        connect Pg729.N 3ph_Meter729.GND as Connection7416
        connect Goto761 3ph_Meter729.Out as Connection7417
        connect From789 Meter729.meter_data as Connection7418
        connect From790 Meter729.ref as Connection7419
        connect "CC 6.b_out" Junction1064 as Connection7423
        connect Junction1064 Junction895 as Connection7424
        connect 3ph_Meter729.B+ Junction1064 as Connection7425
        connect Junction1065 3ph_Meter729.C+ as Connection7431
        connect Junction1065 "CC 6.c_out" as Connection7432
        connect 3ph_Meter730.A- Pg730.A as Connection7440
        connect 3ph_Meter730.B- Pg730.B as Connection7441
        connect 3ph_Meter730.C- Pg730.C as Connection7442
        connect Pg730.N 3ph_Meter730.GND as Connection7443
        connect Goto762 3ph_Meter730.Out as Connection7444
        connect From791 Meter730.meter_data as Connection7445
        connect From792 Meter730.ref as Connection7446
        connect "Line 729.P6" Junction1067 as Connection7447
        connect Junction1067 "Line 730.P5" as Connection7448
        connect 3ph_Meter730.A+ Junction1067 as Connection7449
        connect "Line 730.P3" Junction1068 as Connection7450
        connect Junction1068 "Line 729.P4" as Connection7451
        connect 3ph_Meter730.B+ Junction1068 as Connection7452
        connect "Line 729.P2" Junction1069 as Connection7453
        connect Junction1069 "Line 730.P1" as Connection7454
        connect 3ph_Meter730.C+ Junction1069 as Connection7455
        connect 3ph_Meter731.A- Pg731.A as Connection7459
        connect 3ph_Meter731.B- Pg731.B as Connection7460
        connect 3ph_Meter731.C- Pg731.C as Connection7461
        connect Pg731.N 3ph_Meter731.GND as Connection7462
        connect Goto763 3ph_Meter731.Out as Connection7463
        connect From793 Meter731.meter_data as Connection7464
        connect From794 Meter731.ref as Connection7465
        connect "Line 730.P6" Junction1070 as Connection7466
        connect Junction1070 "Line 731.P5" as Connection7467
        connect 3ph_Meter731.A+ Junction1070 as Connection7468
        connect "Line 731.P3" Junction1071 as Connection7469
        connect Junction1071 "Line 730.P4" as Connection7470
        connect 3ph_Meter731.B+ Junction1071 as Connection7471
        connect "Line 730.P2" Junction1072 as Connection7472
        connect Junction1072 "Line 731.P1" as Connection7473
        connect 3ph_Meter731.C+ Junction1072 as Connection7474
        connect 3ph_Meter732.A- Pg732.A as Connection7478
        connect 3ph_Meter732.B- Pg732.B as Connection7479
        connect 3ph_Meter732.C- Pg732.C as Connection7480
        connect Pg732.N 3ph_Meter732.GND as Connection7481
        connect Goto764 3ph_Meter732.Out as Connection7482
        connect From795 Meter732.meter_data as Connection7483
        connect From796 Meter732.ref as Connection7484
        connect "Line 732.P1" Junction1073 as Connection7485
        connect Junction1073 "Line 731.P6" as Connection7486
        connect 3ph_Meter732.A+ Junction1073 as Connection7487
        connect "Line 732.P3" Junction1074 as Connection7488
        connect Junction1074 "Line 731.P4" as Connection7489
        connect 3ph_Meter732.B+ Junction1074 as Connection7490
        connect "Line 731.P2" Junction1075 as Connection7491
        connect Junction1075 "Line 732.P5" as Connection7492
        connect 3ph_Meter732.C+ Junction1075 as Connection7493
        connect 3ph_Meter733.A- Pg733.A as Connection7497
        connect 3ph_Meter733.B- Pg733.B as Connection7498
        connect 3ph_Meter733.C- Pg733.C as Connection7499
        connect Pg733.N 3ph_Meter733.GND as Connection7500
        connect Goto765 3ph_Meter733.Out as Connection7501
        connect From797 Meter733.meter_data as Connection7502
        connect From798 Meter733.ref as Connection7503
        connect "Line 732.P2" Junction1076 as Connection7504
        connect Junction1076 "Line 736.P1" as Connection7505
        connect 3ph_Meter733.A+ Junction1076 as Connection7506
        connect "Line 736.P3" Junction1077 as Connection7507
        connect Junction1077 "Line 732.P4" as Connection7508
        connect 3ph_Meter733.B+ Junction1077 as Connection7509
        connect "Line 736.P5" Junction1078 as Connection7510
        connect Junction1078 "Line 732.P6" as Connection7511
        connect 3ph_Meter733.C+ Junction1078 as Connection7512
        connect Junction1065 Junction1079 as Connection7514
        connect Junction1079 "Line 729.P1" as Connection7515
        connect Tie_sw_1.c_out Junction1079 as Connection7516
        connect Tie_sw_2.c_in Junction1080 as Connection7518
        connect Junction1080 Junction1018 as Connection7519
        connect Junction1080 "CC 4.c_in" as Connection7520
        connect "Line 734.P1" Tie_sw_2.a_out as Connection7521
        connect V_REF_goto Junction1081 as Connection7522
        connect Junction1081 Vref.out as Connection7523
        connect "RMS value1.in" Junction1081 as Connection7524
        connect Vref_rms.in "RMS value1.out" as Connection7525
        connect "Feeder sw.a_out" "Line 700.P5" as Connection7526
        connect Junction974 CC1.a_out as Connection7527
        connect Junction896 Junction1082 as Connection7530
        connect Junction1082 3ph_Meter729.A+ as Connection7531
        connect Junction1082 "CC 6.a_out" as Connection7532
        connect Junction995 "CC 3.a_out" as Connection7533
        connect Junction808 Junction1083 as Connection7536
        connect Junction1083 3ph_Meter706.A+ as Connection7537
        connect Junction1083 "CC 2.a_out" as Connection7538
    }

    default {
        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            input_terminals = "real in;"
            input_terminals_show_labels = "False;"
            input_terminals_feedthrough = "True;"
            input_terminals_dimensions = "inherit;"
            output_terminals = "real out;"
            output_terminals_show_labels = "False;"
            output_terminals_feedthrough = "True;"
            output_terminals_dimensions = "inherit;"
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_rms_value {
            op_mode = "PLL based"
            frequency = "50"
            period_timeout = "0.5"
            period_deadband = "0"
            filter_en = "False"
            lpf_cutoff = "500"
            frequency_src = "Internal"
            execution_rate = "inherit"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/Constant Impedance Load" {
            fn = "60"
            conn_type = "Y"
            enable_neutral = "False"
            set_balanced = "True"
            Vn_3ph = "480"
            Sn_3ph = "1.0e6"
            pf_mode_3ph = "Unit"
            pf_3ph = "0.9"
            VAn = "480/(3**0.5)"
            VAB = "480"
            SAn = "1.0e6/3"
            SAB = "1.0e6/3"
            pf_modeA = "Unit"
            pfA = "0.9"
            VBn = "480/(3**0.5)"
            VBC = "480"
            SBn = "1.0e6/3"
            SBC = "1.0e6/3"
            pf_modeB = "Unit"
            pfB = "0.9"
            VCn = "480/(3**0.5)"
            VCA = "480"
            SCn = "1.0e6/3"
            SCA = "1.0e6/3"
            pf_modeC = "Unit"
            pfC = "0.9"
        }

        "core/Meter Split" {
            van = "True"
            vbn = "True"
            vcn = "True"
            van_rms = "False"
            vbn_rms = "False"
            vcn_rms = "False"
            vln_rms = "False"
            vab = "False"
            vbc = "False"
            vca = "False"
            vab_rms = "False"
            vbc_rms = "False"
            vca_rms = "False"
            vll_rms = "False"
            ia = "False"
            ib = "False"
            ic = "False"
            ia_rms = "False"
            ib_rms = "False"
            ic_rms = "False"
            i_rms = "False"
            freq = "False"
            power_p = "False"
            power_q = "False"
            power_s = "False"
            power_pf = "False"
            enable_extra_in = "No"
            power_pa = "False"
            power_pb = "False"
            power_pc = "False"
            power_qa = "False"
            power_qb = "False"
            power_qc = "False"
            power_sa = "False"
            power_sb = "False"
            power_sc = "False"
            power_pfa = "False"
            power_pfb = "False"
            power_pfc = "False"
        }

        "core/RL Section" {
            model_def = "R-L"
            unit_sys = "imperial"
            num_of_phases = "3"
            resistance_per_l = "1"
            resistance_per_l_mile = "1"
            inductance_per_l = "1e-3"
            inductance_per_l_mile = "1e-3"
            length = "1.0"
            length_mile = "1.0"
            power = "500.0"
            voltage = "11.0"
            frequency = "50.0"
            R_value = "21.55"
            L_value = "0.00842"
            embedded_coupling = "False"
            ratio_type = "Automatic"
            ratio = "0.1"
        }

        "core/Three Phase TLM Core Coupling" {
            type = "Inductive"
            capacitance = "1e-3"
            inductance = "1e-3"
            embedded_components = "False"
            ratio_type = "Automatic"
            ratio = "0.1"
            cpl_connection = "3 CPLs, Star Connection"
        }

        "core/Three Phase Voltage Source" {
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Three-phase Meter" {
            R = "1e5"
            n_cycles = "1"
            Ts = "100e-6"
            enable_probes = "True"
            enable_out = "True"
            remove_snubber = "False"
            VAn = "True"
            VBn = "True"
            VCn = "True"
            VAB = "False"
            VBC = "False"
            VCA = "False"
            IA = "True"
            IB = "True"
            IC = "True"
            freq = "False"
            VLn_rms = "False"
            VLL_rms = "False"
            VLn_avg_rms = "False"
            VLL_avg_rms = "False"
            I_rms = "False"
            I_avg_rms = "False"
            P_method = "alpha-beta"
            enable_extra_out = "False"
            P_meas = "False"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        
        # General system parameters
        f=60
        w=2*np.pi*f
        
        V_ll=12.66e3
        Vln=V_ll/np.sqrt(3)
        
        if "t_exec" not in mdl.get_ns_vars():
            t_exec=400e-6
        
        load = {"701": {"P": 1,   "Q": 1},
                "702": {"P": 100e3, "Q": 60e3},
                "703": {"P": 90e3,  "Q": 40e3},
                "704": {"P": 120e3, "Q": 80e3},
                "705": {"P": 60e3,  "Q": 30e3},
                "706": {"P": 60e3,  "Q": 20e3},
                "707": {"P": 200e3, "Q": 100e3},
                "708": {"P": 200e3, "Q": 100e3},
                "709": {"P": 60e3,  "Q": 20e3},
                "710": {"P": 60e3,  "Q": 20e3},
                "711": {"P": 45e3,  "Q": 30e3},
                "712": {"P": 60e3,  "Q": 35e3},
                "713": {"P": 60e3,  "Q": 35e3},
                "714": {"P": 120e3, "Q": 80e3},
                "715": {"P": 60e3,  "Q": 10e3},
                "716": {"P": 60e3,  "Q": 20e3},
                "717": {"P": 60e3,  "Q": 20e3},
                "718": {"P": 90e3,  "Q": 40e3},
                "719": {"P": 90e3,  "Q": 40e3},
                "720": {"P": 90e3,  "Q": 40e3},
                "721": {"P": 90e3,  "Q": 40e3},
                "722": {"P": 90e3,  "Q": 40e3},
                "723": {"P": 90e3,  "Q": 50e3},
                "724": {"P": 420e3, "Q": 200e3},
                "725": {"P": 420e3, "Q": 200e3},
                "726": {"P": 60e3,  "Q": 25e3},
                "727": {"P": 60e3,  "Q": 25e3},
                "728": {"P": 60e3,  "Q": 20e3},
                "729": {"P": 120e3, "Q": 70e3},
                "730": {"P": 200e3, "Q": 600e3},
                "731": {"P": 150e3, "Q": 70e3},
                "732": {"P": 210e3, "Q": 100e3},
                "733": {"P": 60e3,  "Q": 40e3}}
        
        for bus in load:
            load[bus]["pf"] = np.cos(np.arctan2(load[bus]["Q"], load[bus]["P"]))
            load[bus]["S"] = load[bus]["P"]/load[bus]["pf"]
        
        branch ={"700": {"R": 1e-6,   "X": 1e-6},
                 "701": {"R": 0.0922, "X": 0.0470},
                 "702": {"R": 0.4930, "X": 0.2511},
                 "703": {"R": 0.3660, "X": 0.1864},
                 "704": {"R": 0.3811, "X": 0.1941},
                 "705": {"R": 0.8190, "X": 0.7070},
                 "706": {"R": 0.1872, "X": 0.6188},
                 "707": {"R": 0.7114, "X": 0.2351},
                 "708": {"R": 1.0300, "X": 0.7400},
                 "709": {"R": 1.0440, "X": 0.7400},
                 "710": {"R": 0.1966, "X": 0.0650},
                 "711": {"R": 0.3744, "X": 0.1238},
                 "712": {"R": 1.4680, "X": 1.1550},
                 "713": {"R": 0.5416, "X": 0.7129},
                 "714": {"R": 0.5910, "X": 0.5260},
                 "715": {"R": 0.7463, "X": 0.5450},
                 "716": {"R": 1.2890, "X": 1.7210},
                 "717": {"R": 0.7320, "X": 0.5740},
                 "718": {"R": 0.1640, "X": 0.1565},
                 "719": {"R": 1.5042, "X": 1.3554},
                 "720": {"R": 0.4095, "X": 0.4784},
                 "721": {"R": 0.7089, "X": 0.9373},
                 "722": {"R": 0.4512, "X": 0.3083},
                 "723": {"R": 0.8980, "X": 0.7091},
                 "724": {"R": 0.8960, "X": 0.7011},
                 "725": {"R": 0.2030, "X": 0.1034},
                 "726": {"R": 0.2842, "X": 0.1447},
                 "727": {"R": 1.0590, "X": 0.9337},
                 "728": {"R": 0.8042, "X": 0.7006},
                 "729": {"R": 0.5075, "X": 0.2585},
                 "730": {"R": 0.9744, "X": 0.9630},
                 "731": {"R": 0.3105, "X": 0.3619},
                 "732": {"R": 0.3410, "X": 0.5302},
                 "733": {"R": 2.0000, "X": 2.0000},
                 "734": {"R": 2.0000, "X": 2.0000},
                 "735": {"R": 2.0000, "X": 2.0000},
                 "736": {"R": 0.5000, "X": 0.5000},
                 "737": {"R": 0.5000, "X": 0.5000}}
        
        for branch_id in branch:
            branch[branch_id]["L"] = branch[branch_id]["X"]/w
        
        # Line element length values
        line_len = 1
        
        #Core coupling inductances
        L_cpl_1 = branch["703"]["L"]/100
        L_cpl_2 = branch["705"]["L"]/10
        L_cpl_3 = branch["708"]["L"]/10
        L_cpl_4 = branch["715"]["L"]/10
        L_cpl_5 = branch["737"]["L"]/10
        L_cpl_6 = branch["728"]["L"]/10
        L_cpl_7 = branch["733"]["L"]/10
        L_cpl_8 = branch["735"]["L"]/10
    ENDCODE
}
