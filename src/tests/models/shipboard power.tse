version = 4.2

//
// Saved by sw version: 2020.2 DEV
// Save timestamp: 10-Jul-2020 @ 04:49:25 PM
//

model "shipboard power" {
    configuration {
        hil_device = "HIL604"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = 4e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0002
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "medium"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
    }

    component Subsystem Root {
        component src_scada_input PWR_Fans_Pumps {
            def_value = "25"
            execution_rate = "Ts"
            max = "100"
            min = "0"
            unit = "%"
        }
        [
            position = 5296, 6968
        ]

        component Subsystem Fans_Pumps {
            layout = dynamic
            component gen_product Product2 {
            }
            [
                position = 7968, 8048
            ]

            component src_constant L {
                execution_rate = "inherit"
                value = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7768, 8040
            ]

            component gen_product Product3 {
                signs = "*/"
            }
            [
                position = 7872, 7824
            ]

            component gen_product Product1 {
            }
            [
                position = 7968, 7936
            ]

            component src_constant const {
                execution_rate = "inherit"
                value = "100.0"
            }
            [
                position = 7768, 7760
            ]

            component src_constant R {
                execution_rate = "inherit"
                value = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7768, 7928
            ]

            component "core/Variable Resistor" RL2 {
                inductance = "1e-6"
            }
            [
                position = 8168, 8240
                size = 64, 48
            ]

            component "core/Variable Inductor" L4 {
            }
            [
                position = 8296, 8344
                size = 64, 48
            ]

            component "core/Variable Inductor" L2 {
            }
            [
                position = 8296, 8136
                size = 64, 48
            ]

            component "core/Variable Resistor" RL3 {
                inductance = "1e-6"
            }
            [
                position = 8168, 8344
                size = 64, 48
            ]

            component "core/Variable Inductor" L3 {
            }
            [
                position = 8296, 8240
                size = 64, 48
            ]

            component "core/Variable Resistor" RL1 {
                inductance = "1e-6"
            }
            [
                position = 8168, 8136
                size = 64, 48
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7736, 8136
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7472, 8096
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7528, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7576, 8096
                rotation = right
            ]

            port ctrl {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7768, 7832
            ]

            junction Junction8 pe
            [
                position = 8344, 8240
            ]

            junction Junction9 sp
            [
                position = 8232, 8192
            ]

            junction Junction11 sp
            [
                position = 8112, 8184
            ]

            junction Junction13 sp
            [
                position = 8232, 8072
            ]

            junction Junction14 sp
            [
                position = 8112, 8080
            ]

            junction Junction15 sp
            [
                position = 7912, 7944
            ]

            connect Irms_a.p_node A as Connection83
            connect Junction11 Junction14 as Connection69
            connect Junction13 L2.In as Connection67
            connect Junction14 RL1.In as Connection70
            connect Junction15 Product2.in1 as Connection80
            connect Junction8 L4.n_node as Connection37
            connect Junction9 Junction13 as Connection66
            connect Junction9 L4.In as Connection45
            connect L2.n_node Junction8 as Connection36
            connect L3.n_node Junction8 as Connection38
            connect L3.In Junction9 as Connection46
            connect L3.p_node RL2.n_node as Connection33
            connect Product1.out Junction14 as Connection71
            connect Product1.in1 Junction15 as Connection79
            connect Product2.out Junction13 as Connection68
            connect Product2.in L.out as Connection65
            connect Product3.out Junction15 as Connection81
            connect Product3.in1 ctrl as Connection77
            connect R.out Product1.in as Connection64
            connect RL1.p_node Irms_a.n_node as Connection82
            connect RL1.n_node L2.p_node as Connection34
            connect RL2.p_node B as Connection40
            connect RL2.In Junction11 as Connection53
            connect RL3.p_node C as Connection39
            connect RL3.In Junction11 as Connection51
            connect RL3.n_node L4.p_node as Connection32
            connect const.out Product3.in as Connection78

            P = "200e3"
            Q = "10e3"
            U = "440"
            f = "50.0"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                U {
                    label = "Voltage (ph to gnd)"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "Hz"
                }

                P {
                    label = "Maximal Active Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "W"
                }

                Q {
                    label = "Maximal Reactive Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "VAr"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 5424, 6968
            size = 128, 136
        ]

        component Subsystem Lights1 {
            layout = dynamic
            component pas_inductor L2 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8240
            ]

            component pas_inductor L3 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8296
            ]

            component pas_resistor R2 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8240
            ]

            component pas_resistor R3 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8296
            ]

            component pas_inductor L1 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8184
            ]

            component pas_resistor R1 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8184
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7464, 8184
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7384, 8096
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7528, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7576, 8096
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 7872, 8240
            ]

            connect B R2.p_node as Connection9
            connect C R3.p_node as Connection10
            connect Irms_a.p_node A as Connection12
            connect Junction1 L3.n_node as Connection6
            connect L1.n_node Junction1 as Connection5
            connect L2.n_node Junction1 as Connection7
            connect L2.p_node R2.n_node as Connection2
            connect R1.p_node Irms_a.n_node as Connection11
            connect R1.n_node L1.p_node as Connection3
            connect R3.n_node L3.p_node as Connection1

            P = "50e3"
            Q = "1e3"
            U = "440.0"
            f = "50.0"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                U {
                    label = "Voltage (ph to gnd)"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "Hz"
                }

                P {
                    label = "Maximal Active Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "W"
                }

                Q {
                    label = "Maximal Reactive Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "VAr"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 8376, 6976
            size = 128, 136
        ]

        component Subsystem "AUX Load 1" {
            layout = dynamic
            component pas_inductor L2 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8240
            ]

            component pas_resistor R2 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8240
            ]

            component pas_resistor R3 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8296
            ]

            component pas_inductor L3 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8296
            ]

            component pas_resistor R1 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8184
            ]

            component pas_inductor L1 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8184
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7456, 8184
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7384, 8096
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7528, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7576, 8096
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 7872, 8240
            ]

            connect B R2.p_node as Connection9
            connect C R3.p_node as Connection10
            connect Irms_a.p_node A as Connection12
            connect Junction1 L3.n_node as Connection6
            connect L1.n_node Junction1 as Connection5
            connect L2.n_node Junction1 as Connection7
            connect L2.p_node R2.n_node as Connection2
            connect R1.p_node Irms_a.n_node as Connection11
            connect R1.n_node L1.p_node as Connection3
            connect R3.n_node L3.p_node as Connection1

            P = "20e3"
            Q = "0.2e3"
            U = "230.0"
            f = "50.0"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                U {
                    label = "Voltage (ph to gnd)"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "Hz"
                }

                P {
                    label = "Maximal Active Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "W"
                }

                Q {
                    label = "Maximal Reactive Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "VAr"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 9120, 7872
            size = 128, 136
        ]

        component Subsystem "AUX Load 2" {
            layout = dynamic
            component pas_inductor L3 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8296
            ]

            component pas_resistor R2 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8240
            ]

            component pas_resistor R3 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8296
            ]

            component pas_resistor R1 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8184
            ]

            component pas_inductor L1 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8184
            ]

            component pas_inductor L2 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8240
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7456, 8184
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7384, 8096
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7528, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7576, 8096
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 7872, 8240
            ]

            connect B R2.p_node as Connection9
            connect C R3.p_node as Connection10
            connect Irms_a.p_node A as Connection12
            connect Junction1 L3.n_node as Connection6
            connect L1.n_node Junction1 as Connection5
            connect L2.n_node Junction1 as Connection7
            connect L2.p_node R2.n_node as Connection2
            connect R1.p_node Irms_a.n_node as Connection11
            connect R1.n_node L1.p_node as Connection3
            connect R3.n_node L3.p_node as Connection1

            P = "20e3"
            Q = "0.2e3"
            U = "230.0"
            f = "50.0"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                U {
                    label = "Voltage (ph to gnd)"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "Hz"
                }

                P {
                    label = "Maximal Active Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "W"
                }

                Q {
                    label = "Maximal Reactive Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "VAr"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 9608, 7872
            size = 128, 136
        ]

        component "core/Three Phase Two Winding Transformer" Tr2 {
            Sn = "100000.0"
            V1 = "440"
            V2 = "230.0"
            input = "pu"
        }
        [
            position = 8720, 7432
            size = 126, 256
        ]

        component "core/Three Phase Two Winding Transformer" Tr1 {
            Sn = "100000.0"
            V1 = "440"
            V2 = "230"
            input = "pu"
        }
        [
            position = 9312, 7032
            size = 126, 256
        ]

        component "core/Three Phase Two Winding Transformer" Tr3 {
            Sn = "100000.0"
            V1 = "440"
            V2 = "230.0"
            input = "pu"
        }
        [
            position = 8600, 8680
            size = 126, 256
        ]

        component Subsystem Lights2 {
            layout = dynamic
            component pas_inductor L3 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8296
            ]

            component pas_resistor R1 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8184
            ]

            component pas_inductor L2 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8240
            ]

            component pas_resistor R3 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8296
            ]

            component pas_inductor L1 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8184
            ]

            component pas_resistor R2 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8240
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7464, 8184
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7368, 8096
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7528, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7576, 8096
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 7872, 8240
            ]

            connect B R2.p_node as Connection9
            connect C R3.p_node as Connection10
            connect Irms_a.p_node A as Connection12
            connect Junction1 L3.n_node as Connection6
            connect L1.n_node Junction1 as Connection5
            connect L2.n_node Junction1 as Connection7
            connect L2.p_node R2.n_node as Connection2
            connect R1.p_node Irms_a.n_node as Connection11
            connect R1.n_node L1.p_node as Connection3
            connect R3.n_node L3.p_node as Connection1

            P = "25e3"
            Q = "0.5e3"
            U = "440"
            f = "50.0"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                U {
                    label = "Voltage (ph to gnd)"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "Hz"
                }

                P {
                    label = "Maximal Active Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "W"
                }

                Q {
                    label = "Maximal Reactive Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "VAr"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 7288, 8320
            size = 128, 136
        ]

        component Subsystem Lights3 {
            layout = dynamic
            component pas_inductor L2 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8240
            ]

            component pas_resistor R1 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8184
            ]

            component pas_inductor L3 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8296
            ]

            component pas_resistor R2 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8240
            ]

            component pas_resistor R3 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8296
            ]

            component pas_inductor L1 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8184
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7448, 8184
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7336, 8104
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7528, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7576, 8096
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 7872, 8240
            ]

            connect B R2.p_node as Connection9
            connect C R3.p_node as Connection10
            connect Irms_a.p_node A as Connection12
            connect Junction1 L3.n_node as Connection6
            connect L1.n_node Junction1 as Connection5
            connect L2.n_node Junction1 as Connection7
            connect L2.p_node R2.n_node as Connection2
            connect R1.p_node Irms_a.n_node as Connection11
            connect R1.n_node L1.p_node as Connection3
            connect R3.n_node L3.p_node as Connection1

            P = "25e3"
            Q = "0.5e3"
            U = "440"
            f = "50.0"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                U {
                    label = "Voltage (ph to gnd)"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "Hz"
                }

                P {
                    label = "Maximal Active Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "W"
                }

                Q {
                    label = "Maximal Reactive Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "VAr"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 9368, 8424
            size = 128, 136
        ]

        component Subsystem "Bow Thruster 1" {
            layout = dynamic
            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 7856, 7936
                rotation = right
                hide_name = True
            ]

            component gen_gain Gain1 {
                gain = "2835.0/100.0"
            }
            [
                position = 8040, 8048
                hide_name = True
            ]

            component gen_probe speed {
            }
            [
                position = 8448, 8056
                rotation = left
            ]

            component gen_probe torque {
            }
            [
                position = 8344, 7984
                rotation = left
            ]

            component gen_limiter Limit1 {
                lower_limit = "0"
                upper_limit = "100"
            }
            [
                position = 7976, 8048
                hide_name = True
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8392, 8520
                rotation = right
                hide_name = True
            ]

            component gen_rate_limiter Ramp {
                falling_limit = "-1000"
                rising_limit = "1000"
            }
            [
                position = 8128, 8032
                hide_name = True
            ]

            component sys_signal_switch "Signal switch1" {
                threshold = "0.5"
            }
            [
                position = 8232, 8048
                hide_name = True
            ]

            component gen_sum Sum1 {
            }
            [
                position = 8288, 8192
                rotation = right
                hide_name = True
                scale = -1, 1
            ]

            component pas_resistor R1 {
                resistance = "0.3629"
            }
            [
                position = 7256, 8656
                rotation = right
            ]

            component Subsystem soft_starter {
                layout = dynamic
                component gen_terminator Termination1 {
                }
                [
                    position = 8152, 7824
                ]

                component pas_resistor R1 {
                    resistance = "10e3"
                }
                [
                    position = 8152, 8224
                    rotation = right
                ]

                component src_constant const_085 {
                    execution_rate = "inherit"
                    value = "0.85"
                }
                [
                    position = 7840, 8136
                ]

                component gen_c_function "C function1" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "False;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "False;"
                    output_fnc = "/*Begin code section*/
if (in < 160){
    out = 1;
}
else if ((in >= 160) & (in < 170)){
    out = 2;
}
else if ((in >= 170) & (in < 179)){
    out = 3;
}
/*End code section*/"
                }
                [
                    position = 7840, 7960
                    size = 48, 48
                ]

                component sys_signal_switch "Signal switch2" {
                    threshold = "0.5"
                }
                [
                    position = 8080, 7968
                ]

                component src_constant const_1 {
                    execution_rate = "inherit"
                    value = "1.0"
                }
                [
                    position = 8008, 7944
                ]

                component gen_sr_ff "SR Flip Flop1" {
                }
                [
                    position = 8016, 7808
                ]

                component gen_rel_op rel_op {
                    relational_op = "<"
                }
                [
                    position = 7864, 7792
                ]

                component gen_probe n_ratio {
                }
                [
                    position = 8304, 7968
                ]

                component src_constant const_075 {
                    execution_rate = "inherit"
                    value = "0.75"
                }
                [
                    position = 7840, 8080
                ]

                component pas_resistor R2 {
                    resistance = "10e3"
                }
                [
                    position = 8152, 8368
                    rotation = right
                ]

                component src_constant const_156 {
                    execution_rate = "inherit"
                    value = "156"
                }
                [
                    position = 7744, 7784
                ]

                component sys_mp_signal_switch sw {
                    number_of_input_terminals = "3"
                }
                [
                    position = 7936, 8032
                ]

                component src_constant const_05 {
                    execution_rate = "inherit"
                    value = "0.5"
                }
                [
                    position = 7840, 8024
                ]

                component "core/Ideal Transformer With Variable Transfer Ratio" Tr4 {
                }
                [
                    position = 8256, 8392
                    scale = 1, -1
                    size = 96, 128
                ]

                component "core/Ideal Transformer With Variable Transfer Ratio" Tr3 {
                }
                [
                    position = 8256, 8200
                    size = 96, 128
                ]

                port A1 {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8072, 8152
                ]

                port B1 {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8072, 8296
                ]

                port C1 {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8072, 8440
                ]

                port A2 {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8416, 8152
                    rotation = down
                ]

                port B2 {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8416, 8296
                    rotation = down
                ]

                port C2 {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8416, 8440
                    rotation = down
                ]

                port speed {
                    position = top:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7744, 7896
                ]

                port reset {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7744, 7832
                ]

                junction Junction2 pe
                [
                    position = 8192, 8296
                ]

                junction Junction3 pe
                [
                    position = 8320, 8296
                ]

                junction Junction5 pe
                [
                    position = 8152, 8152
                ]

                junction Junction6 pe
                [
                    position = 8152, 8296
                ]

                junction Junction7 pe
                [
                    position = 8152, 8296
                ]

                junction Junction8 pe
                [
                    position = 8152, 8440
                ]

                junction Junction9 sp
                [
                    position = 8112, 8048
                ]

                junction Junction10 sp
                [
                    position = 7800, 7896
                ]

                junction Junction11 sp
                [
                    position = 8256, 8056
                ]

                junction Junction12 sp
                [
                    position = 7776, 7832
                ]

                connect B1 Junction6 as Connection1763
                connect B2 Junction3 as Connection1755
                connect "C function1.in" Junction10 as Connection1808
                connect Junction10 speed as Connection1807
                connect Junction11 Tr3.ratio as Connection1816
                connect Junction12 "SR Flip Flop1.r_in" as Connection1819
                connect Junction2 Tr3.P2 as Connection1751
                connect Junction3 Tr3.S2 as Connection1754
                connect Junction5 A1 as Connection1761
                connect Junction6 Junction2 as Connection1764
                connect Junction7 Junction6 as Connection1767
                connect Junction8 C1 as Connection1770
                connect Junction9 Junction11 as Connection1815
                connect R1.p_node Junction5 as Connection1762
                connect R1.n_node Junction7 as Connection1766
                connect R2.p_node Junction7 as Connection1768
                connect R2.n_node Junction8 as Connection1771
                connect "SR Flip Flop1.out" "Signal switch2.in2" as Connection1799
                connect "SR Flip Flop1.out_n" Termination1.in as Connection1798
                connect "Signal switch2.out" Junction9 as Connection1796
                connect Tr3.S1 A2 as Connection1746
                connect Tr3.P1 Junction5 as Connection1760
                connect Tr4.S1 C2 as Connection1748
                connect Tr4.P2 Junction2 as Connection1750
                connect Tr4.S2 Junction3 as Connection1753
                connect Tr4.P1 Junction8 as Connection1769
                connect Tr4.ratio Junction9 as Connection1794
                connect const_05.out sw.in as Connection1811
                connect const_075.out sw.in1 as Connection1812
                connect const_085.out sw.in2 as Connection1813
                connect const_1.out "Signal switch2.in" as Connection1793
                connect const_156.out rel_op.in as Connection1804
                connect n_ratio.in Junction11 as Connection1817
                connect rel_op.in1 Junction10 as Connection1806
                connect rel_op.out "SR Flip Flop1.s_in" as Connection1820
                connect reset Junction12 as Connection1818
                connect sw.ctrl "C function1.out" as Connection1810
                connect sw.out "Signal switch2.in1" as Connection1809
            }
            [
                position = 7856, 8368
                size = 64, 232
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection9
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection11
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "1e-6"
                R = "10.0"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 7752, 8592
                size = 64, 48
            ]

            component Subsystem INDM {
                layout = dynamic
                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8464, 8272
                    hide_name = True
                ]

                component gen_alpha_beta2abc "alpha beta to abc1" {
                }
                [
                    position = 8544, 8248
                ]

                component pas_inductor Lc {
                    inductance = "Lls + 1.0/(1.0/Lm + 1.0/Llr)"
                }
                [
                    position = 7744, 8368
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8064, 8072
                    hide_name = True
                ]

                component pas_inductor La {
                    inductance = "Lls + 1.0/(1.0/Lm + 1.0/Llr)"
                }
                [
                    position = 7744, 8176
                ]

                component pas_resistor Rb {
                    resistance = "Rs + Rr*(1.0/(1.0/Lm + 1.0/Llr)/Llr)**2"
                }
                [
                    position = 7872, 8272
                ]

                component pas_resistor Ra {
                    resistance = "Rs + Rr*(1.0/(1.0/Lm + 1.0/Llr)/Llr)**2"
                }
                [
                    position = 7872, 8176
                ]

                component pas_resistor Rc {
                    resistance = "Rs + Rr*(1.0/(1.0/Lm + 1.0/Llr)/Llr)**2"
                }
                [
                    position = 7872, 8368
                ]

                component pas_inductor Lb {
                    inductance = "Lls + 1.0/(1.0/Lm + 1.0/Llr)"
                }
                [
                    position = 7744, 8272
                ]

                component gen_c_function "C function1" {
                    global_variables = "real Lmdp;real a1;real b1;real c1;real Ts;real Lmdp_div_Llr;real det_part;real ad1_part;real bd1;real psi_alr;real psi_ber;real ad1;real det;real rec_det;real w_el;real ad2;real psi_alr_mem;real psi_ber_mem;real w_el_mem;real bd2;real cd1;real cd2;real psi_als;real psi_bes;real T_el;real theta_el;"
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "i_als inherit;i_bes inherit;T_load inherit"
                    in_terminal_labels = "True;True;True;"
                    in_terminal_properties = "real i_als;inherit i_bes;inherit T_load;"
                    init_fnc = "/*Begin code section*/
// initialize states
psi_alr_mem = 0.0;
psi_ber_mem = 0.0;
w_el_mem = 0.0;
theta_el = 0.0;

// state space matrices definition
Ts = execution_rate;
Lmdp = 1.0/(1.0/Lm + 1.0/Llr);

Lmdp_div_Llr = Lmdp/Llr;
a1 = Rr*(Lmdp_div_Llr - 1.0)/Llr;
b1 = Rr*Lmdp_div_Llr;
c1 = Rr*Lmdp_div_Llr*(Lmdp_div_Llr - 1.0)/Llr;

det_part = (1.0 - Ts*a1/2.0)*(1.0 - Ts*a1/2.0);
ad1_part = 1.0 - (Ts*a1/2.0)*(Ts*a1/2.0);
bd1        = (1.0 - Ts*a1/2.0)*b1*Ts;

cd1 = c1;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit;inherit;inherit;inherit"
                    out_terminal_dimensions_str = "e_als inherit;e_bes inherit;w_m inherit;Tel inherit"
                    out_terminal_labels = "True;True;True;True;"
                    out_terminal_properties = "real e_als;inherit e_bes;inherit w_m;inherit Tel;"
                    output_fnc = "/*Begin code section*/
cd2 = -w_el_mem*Lmdp_div_Llr;

e_als = cd1*psi_alr_mem + cd2*psi_ber_mem;
e_bes = cd1*psi_ber_mem - cd2*psi_alr_mem;
w_m = w_el_mem/p;

// needed for torque
psi_als = Lmdp_div_Llr*psi_alr_mem + (Lmdp+Lls)*i_als;
psi_bes = Lmdp_div_Llr*psi_ber_mem + (Lmdp+Lls)*i_bes;

T_el = 1.5*p*(psi_als*i_bes - psi_bes*i_als);

Tel = T_el;
/*End code section*/"
                    parameters = "real Rs;real Rr;real Lls;real Llr;real Lm;real J;real p;"
                    update_fnc = "/*Begin code section*/
det = det_part + w_el_mem*w_el_mem*Ts*Ts*.25;
rec_det = 1.0/det;

ad1 = ad1_part - w_el_mem*w_el_mem*Ts*Ts*.25;
ad2 = -w_el_mem*Ts;

bd2 = -w_el_mem*b1*Ts*Ts*.5;

psi_alr = rec_det*(ad1*psi_alr_mem + ad2*psi_ber_mem + bd1*i_als + bd2*i_bes);
psi_ber = rec_det*(ad1*psi_ber_mem - ad2*psi_alr_mem + bd1*i_bes - bd2*i_als);

w_el = w_el_mem + Ts*p*(T_el - T_load)/J;

psi_alr_mem = psi_alr;
psi_ber_mem = psi_ber;
w_el_mem = w_el;
/*End code section*/"
                }
                [
                    position = 8208, 8040
                    size = 48, 80
                ]

                component gen_abc2alpha_beta "abc to alpha beta1" {
                }
                [
                    position = 7968, 8040
                ]

                component "core/Current Measurement" Ia {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7968, 8176
                    size = 64, 32
                ]

                component "core/Current Measurement" Ib {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7968, 8272
                    size = 64, 32
                ]

                component "core/Signal Controlled Voltage Source" e_b {
                }
                [
                    position = 8128, 8272
                    size = 64, 32
                ]

                component "core/Signal Controlled Voltage Source" e_a {
                }
                [
                    position = 8128, 8176
                    size = 64, 32
                ]

                component "core/Current Measurement" Ic {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7968, 8368
                    size = 64, 32
                ]

                component "core/Signal Controlled Voltage Source" e_c {
                }
                [
                    position = 8128, 8368
                    size = 64, 32
                ]

                port w_m {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8384, 8080
                ]

                port T_el {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8360, 8144
                ]

                port T_load {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8136, 8056
                ]

                port A {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7664, 8176
                ]

                port B {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7664, 8272
                ]

                port C {
                    position = left:4
                    kind = pe
                }
                [
                    position = 7664, 8368
                ]

                tag From7 {
                    value = "e_c"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8336
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto7 {
                    value = "e_b"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8640, 8248
                    hide_name = True
                ]

                tag From6 {
                    value = "e_a"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8144
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "Ib"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8032, 8248
                    hide_name = True
                ]

                tag Goto5 {
                    value = "e_bes"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8504, 8032
                    hide_name = True
                ]

                tag From5 {
                    value = "e_als"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8464, 8224
                    hide_name = True
                ]

                tag Goto8 {
                    value = "e_c"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8640, 8272
                    hide_name = True
                ]

                tag From1 {
                    value = "Ia"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7856, 8016
                    hide_name = True
                ]

                tag Goto4 {
                    value = "e_als"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8416, 8016
                    hide_name = True
                ]

                tag Goto1 {
                    value = "Ia"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8032, 8152
                    hide_name = True
                ]

                tag From2 {
                    value = "Ib"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7856, 8040
                    hide_name = True
                ]

                tag From8 {
                    value = "e_b"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8240
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto6 {
                    value = "e_a"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8640, 8224
                    hide_name = True
                ]

                tag From3 {
                    value = "Ic"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7856, 8064
                    hide_name = True
                ]

                tag Goto3 {
                    value = "Ic"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8032, 8344
                    hide_name = True
                ]

                tag From4 {
                    value = "e_bes"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8400, 8248
                    hide_name = True
                ]

                junction Junction1 pe
                [
                    position = 8176, 8272
                ]

                connect "C function1.e_als" Goto4 as Connection20
                connect "C function1.Tel" T_el as Connection46
                connect "C function1.T_load" T_load as Connection47
                connect "C function1.i_als" "abc to alpha beta1.alpha" as Connection14
                connect "C function1.w_m" w_m as Connection51
                connect Constant1.out "alpha beta to abc1.gamma" as Connection27
                connect From1 "abc to alpha beta1.A" as Connection16
                connect From2 "abc to alpha beta1.B" as Connection17
                connect From3 "abc to alpha beta1.C" as Connection18
                connect From4 "alpha beta to abc1.beta" as Connection28
                connect From5 "alpha beta to abc1.alpha" as Connection29
                connect From6 e_a.in as Connection33
                connect From7 e_c.in as Connection35
                connect From8 e_b.in as Connection34
                connect Goto1 Ia.out as Connection10
                connect Goto2 Ib.out as Connection11
                connect Goto3 Ic.out as Connection12
                connect Goto5 "C function1.e_bes" as Connection19
                connect Goto6 "alpha beta to abc1.A" as Connection30
                connect Goto7 "alpha beta to abc1.B" as Connection31
                connect Goto8 "alpha beta to abc1.C" as Connection32
                connect Ia.n_node e_a.p_node as Connection45
                connect Ic.n_node e_c.p_node as Connection43
                connect Junction1 e_c.n_node as Connection25
                connect La.p_node A as Connection48
                connect Lb.p_node B as Connection49
                connect Lc.p_node C as Connection50
                connect Ra.n_node Ia.p_node as Connection40
                connect Ra.p_node La.n_node as Connection1
                connect Rb.n_node Ib.p_node as Connection41
                connect Rb.p_node Lb.n_node as Connection2
                connect Rc.n_node Ic.p_node as Connection42
                connect Rc.p_node Lc.n_node as Connection3
                connect Termination1.in "abc to alpha beta1.gamma" as Connection13
                connect "abc to alpha beta1.beta" "C function1.i_bes" as Connection15
                connect e_a.n_node Junction1 as Connection24
                connect e_b.p_node Ib.n_node as Connection44
                connect e_b.n_node Junction1 as Connection26

                J = "10"
                Llr = "0.0000566"
                Lls = "0.0000566"
                Lm = "0.00219"
                Rr = "0.003442"
                Rs = "0.00604"
                Ts = "100e-6"
                p = "2"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Signal Processing Induction Machine - Voltage Behind Reactance</p></body></html>"

                    Rs {
                        label = "Rs"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "Electrical"
                    }

                    Rr {
                        label = "Rr"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "Electrical"
                    }

                    Lls {
                        label = "Lls"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "H"
                        group = "Electrical"
                    }

                    Llr {
                        label = "Llr"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "H"
                        group = "Electrical"
                    }

                    Lm {
                        label = "Lm"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "H"
                        group = "Electrical"
                    }

                    p {
                        label = "pole pairs"
                        widget = edit
                        type = generic
                        default_value = "0"
                        group = "Mechanical"
                    }

                    J {
                        label = "inertia"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "kg.m^2"
                        group = "Mechanical"
                    }

                    Ts {
                        label = "execution rate"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "s"
                        group = "Signal Processing"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8288, 8368
                size = 120, 240
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7488, 8272
                size = 64, 32
            ]

            component "core/Current Measurement" Ia1 {
            }
            [
                position = 7656, 8272
                size = 64, 32
            ]

            component "core/Current Measurement" Ia {
            }
            [
                position = 8160, 8272
                size = 64, 32
            ]

            component Subsystem friction {
                layout = dynamic
                component gen_gain Gain2 {
                    gain = "0.1"
                }
                [
                    position = 8160, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                component tm_delay "Unit Delay1" {
                }
                [
                    position = 8320, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_abs Abs1 {
                }
                [
                    position = 8240, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                port Tf {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8096, 8192
                    rotation = down
                ]

                port w {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8392, 8192
                    rotation = down
                ]

                connect Abs1.in "Unit Delay1.out" as Connection2013
                connect Gain2.in Abs1.out as Connection2012
                connect Gain2.out Tf as Connection2011
                connect "Unit Delay1.in" w as Connection2010
            }
            [
                position = 8376, 8136
                size = 48, 48
            ]

            component "core/Single Pole Single Throw Contactor" S1 {
            }
            [
                position = 7256, 8536
                rotation = right
                size = 64, 32
            ]

            component "core/Rate Transition" "Rate Transition1" {
            }
            [
                position = 7720, 7888
                hide_name = True
                size = 32, 32
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7024, 8368
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7024, 8464
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7024, 8272
            ]

            port Inputs {
                position = auto:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7640, 7888
            ]

            junction Junction4 sp
            [
                position = 8080, 8048
            ]

            junction Junction10 pe
            [
                position = 7768, 8464
            ]

            junction Junction11 pe
            [
                position = 7752, 8368
            ]

            junction Junction12 pe
            [
                position = 7736, 8272
            ]

            junction Junction19 sp
            [
                position = 8448, 8104
            ]

            junction Junction28 sp
            [
                position = 8280, 8048
            ]

            junction Junction29 sp
            [
                position = 8448, 8136
            ]

            junction Junction30 pe
            [
                position = 7136, 8368
            ]

            junction Junction31 pe
            [
                position = 7256, 8272
            ]

            connect A Junction31 as Connection2015
            connect B Junction30 as Connection2011
            connect "Bus Split1.out1" Limit1.in as Connection1776
            connect "Bus Split1.out" "Signal switch1.in2" as Connection1775
            connect "Bus Split1.out2" soft_starter.reset as Connection1777
            connect Gain1.in Limit1.out as Connection1774
            connect INDM.A Ia.n_node as Connection1937
            connect INDM.w_m Junction29 as Connection2007
            connect INDM.B soft_starter.B2 as Connection2021
            [
                breakpoints = 8088, 8368; 8024, 8368
            ]
            connect Ia1.p_node Irms_a.n_node as Connection2018
            [
                breakpoints = 7584, 8272
            ]
            connect Ia1.n_node Junction12 as Connection1962
            connect Inputs "Rate Transition1.in" as Connection2022
            connect Junction10 C as Connection1998
            [
                breakpoints = 7768, 8464; 7768, 8464; 7584, 8464
            ]
            connect Junction10 "RC Snubber.C" as Connection1896
            connect Junction11 soft_starter.B1 as Connection1899
            connect Junction12 "RC Snubber.A" as Connection1902
            connect Junction19 speed.in as Connection1946
            connect Junction28 torque.in as Connection2004
            [
                breakpoints = 8288, 8048
            ]
            connect Junction29 Junction19 as Connection2008
            connect Junction29 friction.w as Connection2009
            connect Junction30 Junction11 as Connection2019
            [
                breakpoints = 7136, 8368; 7584, 8368; 7752, 8368
            ]
            connect Junction31 Irms_a.p_node as Connection2016
            connect Junction4 Gain1.out as Connection1768
            connect R1.n_node Junction30 as Connection2013
            connect "RC Snubber.B" Junction11 as Connection1898
            connect Ramp.in Junction4 as Connection1767
            connect "Rate Transition1.out" "Bus Split1.in" as Connection2023
            connect S1.a_in Junction31 as Connection2017
            connect S1.a_out R1.p_node as Connection2014
            connect "Signal switch1.out" Junction28 as Connection2003
            connect "Signal switch1.in1" Junction4 as Connection1769
            connect "Signal switch1.in" Ramp.out as Connection1762
            connect Sum1.out INDM.T_load as Connection2002
            connect Sum1.in Junction28 as Connection2005
            connect Sum1.in1 friction.Tf as Connection2010
            connect Termination1.in INDM.T_el as Connection1948
            connect soft_starter.C2 INDM.C as Connection1999
            [
                breakpoints = 8088, 8464
            ]
            connect soft_starter.A2 Ia.p_node as Connection2020
            [
                breakpoints = 8024, 8272; 8088, 8272
            ]
            connect soft_starter.C1 Junction10 as Connection1895
            connect soft_starter.A1 Junction12 as Connection1901
            connect soft_starter.speed Junction19 as Connection1945

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE define_icon
                    image('images/thruster.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6448, 7008
            size = 136, 152
        ]

        component "core/RL Section" "RL Section1" {
            L_value = "6.339999379133876e-07"
            R_value = "0.019120987654320996"
            frequency = "60.0"
            model_def = "S-U"
            power = "1000.0"
            voltage = "0.44"
        }
        [
            position = 6112, 7736
            size = 256, 56
        ]

        component "core/RL Section" "RL Section2" {
            L_value = "6.339999379133876e-07"
            R_value = "0.019120987654320996"
            frequency = "60.0"
            model_def = "S-U"
            power = "1000.0"
            voltage = "0.44"
        }
        [
            position = 7480, 7432
            size = 256, 56
        ]

        component "core/RL Section" "RL Section3" {
            L_value = "6.339999379133876e-07"
            R_value = "0.019120987654320996"
            frequency = "60.0"
            model_def = "S-U"
            power = "1000.0"
            voltage = "0.44"
        }
        [
            position = 8744, 6768
            rotation = right
            size = 256, 56
        ]

        component "core/RL Section" "RL Section4" {
            L_value = "6.339999379133876e-07"
            R_value = "0.019120987654320996"
            frequency = "60.0"
            model_def = "S-U"
            power = "1000.0"
            voltage = "0.44"
        }
        [
            position = 7384, 8680
            size = 256, 56
        ]

        component Subsystem cpl1 {
            layout = dynamic
            component "core/Three Phase Core Coupling" "Core Coupling2" {
                R1 = "10.0"
                fixed_snb_i = "true"
            }
            [
                position = 8192, 8192
                size = 12, 256
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "10e-6"
                R = "10"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8064, 8376
                size = 64, 48
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7936, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7936, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7936, 8288
            ]

            port A2 {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8096
                rotation = down
            ]

            port B2 {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8192
                rotation = down
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8288
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8048, 8096
            ]

            junction Junction2 pe
            [
                position = 8064, 8192
            ]

            junction Junction3 pe
            [
                position = 8080, 8288
            ]

            connect "Core Coupling2.a_out" A2 as Connection3
            connect "Core Coupling2.b_out" B2 as Connection2
            connect "Core Coupling2.c_out" C2 as Connection4
            connect "Core Coupling2.a_in" Junction1 as Connection7
            connect "Core Coupling2.b_in" Junction2 as Connection10
            connect "Core Coupling2.c_in" Junction3 as Connection13
            connect Junction1 A1 as Connection8
            connect Junction2 B1 as Connection11
            connect Junction3 C1 as Connection14
            connect "RC Snubber.A" Junction1 as Connection9
            connect "RC Snubber.B" Junction2 as Connection12
            connect "RC Snubber.C" Junction3 as Connection15
        }
        [
            position = 8760, 8680
            scale = -1, 1
            size = 48, 64
        ]

        component Subsystem cpl3 {
            layout = dynamic
            component "core/Three Phase Core Coupling" "Core Coupling2" {
                R1 = "10.0"
                fixed_snb_i = "true"
                snb_type_i = "R1-C1"
            }
            [
                position = 8192, 8192
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 8136, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 8136, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 8136, 8288
            ]

            port A2 {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8096
                rotation = down
            ]

            port B2 {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8192
                rotation = down
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8288
                rotation = down
            ]

            connect "Core Coupling2.a_in" A1 as Connection6
            connect "Core Coupling2.a_out" A2 as Connection3
            connect "Core Coupling2.b_in" B1 as Connection1
            connect "Core Coupling2.b_out" B2 as Connection2
            connect "Core Coupling2.c_in" C1 as Connection5
            connect "Core Coupling2.c_out" C2 as Connection4
        }
        [
            position = 9152, 7032
            size = 48, 64
        ]

        component Subsystem "Measurement Cubicle EMS 440V" {
            layout = dynamic
            component "core/Voltage RMS" Vbc {
            }
            [
                position = 8304, 8200
                size = 64, 32
            ]

            component "core/Voltage RMS" Vab {
            }
            [
                position = 8200, 8200
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 8152, 8096
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 8256, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 8352, 8096
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 8256, 8200
            ]

            junction Junction2 pe
            [
                position = 8256, 8200
            ]

            connect B Junction2 as Connection8
            connect C Vbc.n_node as Connection10
            connect Junction2 Junction1 as Connection7
            connect Vab.p_node A as Connection9
            connect Vab.n_node Junction2 as Connection6
            connect Vbc.p_node Junction1 as Connection5

            mask {
                icon = "image(\'Figures\Measurement_Cubicle.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                Ts {
                    label = "Excecution Time"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Measurement_Cubicle.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6432, 8304
            size = 135, 126
        ]

        component Subsystem "Measurement Cubicle EMS 230V" {
            layout = dynamic
            component "core/Voltage RMS" Vbc {
            }
            [
                position = 8304, 8192
                size = 64, 32
            ]

            component "core/Voltage RMS" Vab {
            }
            [
                position = 8200, 8192
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 8152, 8096
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 8256, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 8352, 8096
                rotation = right
            ]

            junction Junction2 pe
            [
                position = 8256, 8192
            ]

            connect A Vab.p_node as Connection11
            connect B Junction2 as Connection8
            connect C Vbc.n_node as Connection12
            connect Junction2 Vbc.p_node as Connection10
            [
                breakpoints = 8256, 8192; 8256, 8192
            ]
            connect Vab.n_node Junction2 as Connection6

            mask {
                icon = "image(\'Figures/Measurement_Cubicle.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                Ts {
                    label = "Excecution Time"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Measurement_Cubicle.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 9952, 8424
            size = 135, 126
        ]

        component Subsystem "Measurement Cubicle MS 230V B" {
            layout = dynamic
            component "core/Voltage RMS" Vab {
            }
            [
                position = 8048, 8096
                size = 64, 32
            ]

            component "core/Voltage RMS" Vbc {
            }
            [
                position = 8152, 8096
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 8000, 8000
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 8104, 8000
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 8200, 8000
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 8104, 8096
            ]

            connect Junction1 B as Connection4
            connect Vab.p_node A as Connection1
            connect Vab.n_node Junction1 as Connection3
            connect Vbc.n_node C as Connection6
            connect Vbc.p_node Junction1 as Connection5

            mask {
                icon = "image(\'Figures/Measurement_Cubicle.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                Ts {
                    label = "Excecution Time"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Measurement_Cubicle.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 10008, 7888
            size = 135, 126
        ]

        component Subsystem "Measurement Cubicle MS 230V A" {
            layout = dynamic
            component "core/Voltage RMS" Vbc {
            }
            [
                position = 8304, 8176
                size = 64, 32
            ]

            component "core/Voltage RMS" Vab {
            }
            [
                position = 8200, 8176
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 8152, 8096
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 8256, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 8352, 8096
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 8256, 8176
            ]

            junction Junction2 pe
            [
                position = 8256, 8176
            ]

            connect B Junction2 as Connection8
            connect Junction2 Junction1 as Connection7
            connect Vab.p_node A as Connection9
            connect Vab.n_node Junction2 as Connection6
            connect Vbc.n_node C as Connection10
            connect Vbc.p_node Junction1 as Connection5

            mask {
                icon = "image(\'Figures/Measurement_Cubicle.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                Ts {
                    label = "Excecution Time"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Measurement_Cubicle.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 8744, 7840
            size = 135, 126
        ]

        component Subsystem "Measurement Cubicle MS 440V B" {
            layout = dynamic
            component "core/Voltage RMS" Vbc {
            }
            [
                position = 8304, 8184
                size = 64, 32
            ]

            component "core/Voltage RMS" Vab {
            }
            [
                position = 8200, 8184
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 8152, 8096
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 8256, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 8352, 8096
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 8256, 8184
            ]

            junction Junction2 pe
            [
                position = 8256, 8184
            ]

            connect B Junction2 as Connection8
            connect Junction2 Junction1 as Connection7
            connect Vab.p_node A as Connection9
            connect Vab.n_node Junction2 as Connection6
            connect Vbc.n_node C as Connection10
            connect Vbc.p_node Junction1 as Connection5

            mask {
                icon = "image(\'Figures/Measurement_Cubicle.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                Ts {
                    label = "Excecution Time"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Measurement_Cubicle.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 8976, 6656
            size = 135, 126
        ]

        component Subsystem "Measurement Cubicle MS 440V A" {
            layout = dynamic
            component "core/Voltage RMS" Vbc {
            }
            [
                position = 8304, 8192
                size = 64, 32
            ]

            component "core/Voltage RMS" Vab {
            }
            [
                position = 8200, 8192
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 8152, 8096
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 8256, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 8352, 8096
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 8256, 8192
            ]

            junction Junction2 pe
            [
                position = 8256, 8192
            ]

            connect A Vab.p_node as Connection9
            connect B Junction2 as Connection8
            connect C Vbc.n_node as Connection10
            connect Junction2 Junction1 as Connection7
            connect Vab.n_node Junction2 as Connection6
            connect Vbc.p_node Junction1 as Connection5

            mask {
                icon = "image(\'Figures/Measurement_Cubicle.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                Ts {
                    label = "Excecution Time"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Measurement_Cubicle.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 5168, 6656
            size = 135, 126
        ]

        component "core/Current RMS" Irms_GEN1 {
        }
        [
            position = 5984, 6304
            rotation = right
            size = 64, 32
        ]

        component "core/Current RMS" Irms_GEN2 {
        }
        [
            position = 8280, 6312
            rotation = right
            size = 64, 32
        ]

        component Subsystem "AFT Thruster" {
            layout = dynamic
            component gen_sum Sum1 {
            }
            [
                position = 8288, 8192
                rotation = right
                hide_name = True
                scale = -1, 1
            ]

            component gen_rate_limiter Ramp {
                falling_limit = "-1000"
                rising_limit = "1000"
            }
            [
                position = 8128, 8032
                hide_name = True
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 7856, 7936
                rotation = right
                hide_name = True
            ]

            component gen_gain Gain1 {
                gain = "2835.0/100.0"
            }
            [
                position = 8040, 8048
                hide_name = True
            ]

            component sys_signal_switch "Signal switch1" {
                threshold = "0.5"
            }
            [
                position = 8232, 8048
                hide_name = True
            ]

            component gen_probe speed {
            }
            [
                position = 8464, 8056
                rotation = left
            ]

            component gen_probe torque {
            }
            [
                position = 8344, 7984
                rotation = left
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8392, 8520
                rotation = right
                hide_name = True
            ]

            component gen_limiter Limit1 {
                lower_limit = "0"
                upper_limit = "100"
            }
            [
                position = 7976, 8048
                hide_name = True
            ]

            component Subsystem INDM {
                layout = dynamic
                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8464, 8272
                    hide_name = True
                ]

                component pas_resistor Rb {
                    resistance = "Rs + Rr*(1.0/(1.0/Lm + 1.0/Llr)/Llr)**2"
                }
                [
                    position = 7872, 8272
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8064, 8072
                    hide_name = True
                ]

                component pas_resistor Ra {
                    resistance = "Rs + Rr*(1.0/(1.0/Lm + 1.0/Llr)/Llr)**2"
                }
                [
                    position = 7872, 8176
                ]

                component pas_resistor Rc {
                    resistance = "Rs + Rr*(1.0/(1.0/Lm + 1.0/Llr)/Llr)**2"
                }
                [
                    position = 7872, 8368
                ]

                component pas_inductor Lb {
                    inductance = "Lls + 1.0/(1.0/Lm + 1.0/Llr)"
                }
                [
                    position = 7744, 8272
                ]

                component gen_alpha_beta2abc "alpha beta to abc1" {
                }
                [
                    position = 8544, 8248
                ]

                component pas_inductor Lc {
                    inductance = "Lls + 1.0/(1.0/Lm + 1.0/Llr)"
                }
                [
                    position = 7744, 8368
                ]

                component pas_inductor La {
                    inductance = "Lls + 1.0/(1.0/Lm + 1.0/Llr)"
                }
                [
                    position = 7744, 8176
                ]

                component gen_abc2alpha_beta "abc to alpha beta1" {
                }
                [
                    position = 7968, 8040
                ]

                component gen_c_function "C function1" {
                    global_variables = "real Lmdp;real a1;real b1;real c1;real Ts;real Lmdp_div_Llr;real det_part;real ad1_part;real bd1;real psi_alr;real psi_ber;real ad1;real det;real rec_det;real w_el;real ad2;real psi_alr_mem;real psi_ber_mem;real w_el_mem;real bd2;real cd1;real cd2;real psi_als;real psi_bes;real T_el;real theta_el;"
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "i_als inherit;i_bes inherit;T_load inherit"
                    in_terminal_labels = "True;True;True;"
                    in_terminal_properties = "real i_als;inherit i_bes;inherit T_load;"
                    init_fnc = "/*Begin code section*/
// initialize states
psi_alr_mem = 0.0;
psi_ber_mem = 0.0;
w_el_mem = 0.0;
theta_el = 0.0;

// state space matrices definition
Ts = execution_rate;
Lmdp = 1.0/(1.0/Lm + 1.0/Llr);

Lmdp_div_Llr = Lmdp/Llr;
a1 = Rr*(Lmdp_div_Llr - 1.0)/Llr;
b1 = Rr*Lmdp_div_Llr;
c1 = Rr*Lmdp_div_Llr*(Lmdp_div_Llr - 1.0)/Llr;

det_part = (1.0 - Ts*a1/2.0)*(1.0 - Ts*a1/2.0);
ad1_part = 1.0 - (Ts*a1/2.0)*(Ts*a1/2.0);
bd1        = (1.0 - Ts*a1/2.0)*b1*Ts;

cd1 = c1;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit;inherit;inherit;inherit"
                    out_terminal_dimensions_str = "e_als inherit;e_bes inherit;w_m inherit;Tel inherit"
                    out_terminal_labels = "True;True;True;True;"
                    out_terminal_properties = "real e_als;inherit e_bes;inherit w_m;inherit Tel;"
                    output_fnc = "/*Begin code section*/
cd2 = -w_el_mem*Lmdp_div_Llr;

e_als = cd1*psi_alr_mem + cd2*psi_ber_mem;
e_bes = cd1*psi_ber_mem - cd2*psi_alr_mem;
w_m = w_el_mem/p;

// needed for torque
psi_als = Lmdp_div_Llr*psi_alr_mem + (Lmdp+Lls)*i_als;
psi_bes = Lmdp_div_Llr*psi_ber_mem + (Lmdp+Lls)*i_bes;

T_el = 1.5*p*(psi_als*i_bes - psi_bes*i_als);

Tel = T_el;
/*End code section*/"
                    parameters = "real Rs;real Rr;real Lls;real Llr;real Lm;real J;real p;"
                    update_fnc = "/*Begin code section*/
det = det_part + w_el_mem*w_el_mem*Ts*Ts*.25;
rec_det = 1.0/det;

ad1 = ad1_part - w_el_mem*w_el_mem*Ts*Ts*.25;
ad2 = -w_el_mem*Ts;

bd2 = -w_el_mem*b1*Ts*Ts*.5;

psi_alr = rec_det*(ad1*psi_alr_mem + ad2*psi_ber_mem + bd1*i_als + bd2*i_bes);
psi_ber = rec_det*(ad1*psi_ber_mem - ad2*psi_alr_mem + bd1*i_bes - bd2*i_als);

w_el = w_el_mem + Ts*p*(T_el - T_load)/J;

psi_alr_mem = psi_alr;
psi_ber_mem = psi_ber;
w_el_mem = w_el;
/*End code section*/"
                }
                [
                    position = 8208, 8040
                ]

                component "core/Signal Controlled Voltage Source" e_b {
                }
                [
                    position = 8128, 8272
                    size = 64, 32
                ]

                component "core/Current Measurement" Ic {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7968, 8368
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7968, 8176
                    size = 64, 32
                ]

                component "core/Signal Controlled Voltage Source" e_a {
                }
                [
                    position = 8128, 8176
                    size = 64, 32
                ]

                component "core/Current Measurement" Ib {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7968, 8272
                    size = 64, 32
                ]

                component "core/Signal Controlled Voltage Source" e_c {
                }
                [
                    position = 8128, 8368
                    size = 64, 32
                ]

                port w_m {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8384, 8080
                ]

                port T_el {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8360, 8144
                ]

                port T_load {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8136, 8056
                ]

                port A {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7664, 8176
                ]

                port B {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7664, 8272
                ]

                port C {
                    position = left:4
                    kind = pe
                }
                [
                    position = 7664, 8368
                ]

                tag From6 {
                    value = "e_a"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8144
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Ic"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8032, 8344
                    hide_name = True
                ]

                tag Goto8 {
                    value = "e_c"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8640, 8272
                    hide_name = True
                ]

                tag From1 {
                    value = "Ia"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7856, 8016
                    hide_name = True
                ]

                tag Goto2 {
                    value = "Ib"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8032, 8248
                    hide_name = True
                ]

                tag Goto4 {
                    value = "e_als"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8416, 8016
                    hide_name = True
                ]

                tag From4 {
                    value = "e_bes"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8400, 8248
                    hide_name = True
                ]

                tag Goto5 {
                    value = "e_bes"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8504, 8032
                    hide_name = True
                ]

                tag Goto1 {
                    value = "Ia"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8032, 8152
                    hide_name = True
                ]

                tag From5 {
                    value = "e_als"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8464, 8224
                    hide_name = True
                ]

                tag From2 {
                    value = "Ib"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7856, 8040
                    hide_name = True
                ]

                tag From8 {
                    value = "e_b"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8240
                    hide_name = True
                    scale = -1, 1
                ]

                tag From7 {
                    value = "e_c"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8336
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto6 {
                    value = "e_a"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8640, 8224
                    hide_name = True
                ]

                tag Goto7 {
                    value = "e_b"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8640, 8248
                    hide_name = True
                ]

                tag From3 {
                    value = "Ic"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7856, 8064
                    hide_name = True
                ]

                junction Junction1 pe
                [
                    position = 8176, 8272
                ]

                connect "C function1.e_als" Goto4 as Connection20
                connect "C function1.Tel" T_el as Connection46
                connect "C function1.T_load" T_load as Connection47
                connect "C function1.i_als" "abc to alpha beta1.alpha" as Connection14
                connect "C function1.w_m" w_m as Connection51
                connect Constant1.out "alpha beta to abc1.gamma" as Connection27
                connect From1 "abc to alpha beta1.A" as Connection16
                connect From2 "abc to alpha beta1.B" as Connection17
                connect From3 "abc to alpha beta1.C" as Connection18
                connect From4 "alpha beta to abc1.beta" as Connection28
                connect From5 "alpha beta to abc1.alpha" as Connection29
                connect From6 e_a.in as Connection33
                connect From7 e_c.in as Connection35
                connect From8 e_b.in as Connection34
                connect Goto1 Ia.out as Connection10
                connect Goto2 Ib.out as Connection11
                connect Goto3 Ic.out as Connection12
                connect Goto5 "C function1.e_bes" as Connection19
                connect Goto6 "alpha beta to abc1.A" as Connection30
                connect Goto7 "alpha beta to abc1.B" as Connection31
                connect Goto8 "alpha beta to abc1.C" as Connection32
                connect Ia.n_node e_a.p_node as Connection45
                connect Ic.n_node e_c.p_node as Connection43
                connect Junction1 e_c.n_node as Connection25
                connect La.p_node A as Connection48
                connect Lb.p_node B as Connection49
                connect Lc.p_node C as Connection50
                connect Ra.n_node Ia.p_node as Connection40
                connect Ra.p_node La.n_node as Connection1
                connect Rb.n_node Ib.p_node as Connection41
                connect Rb.p_node Lb.n_node as Connection2
                connect Rc.n_node Ic.p_node as Connection42
                connect Rc.p_node Lc.n_node as Connection3
                connect Termination1.in "abc to alpha beta1.gamma" as Connection13
                connect "abc to alpha beta1.beta" "C function1.i_bes" as Connection15
                connect e_a.n_node Junction1 as Connection24
                connect e_b.p_node Ib.n_node as Connection44
                connect e_b.n_node Junction1 as Connection26

                J = "10"
                Llr = "0.0000566"
                Lls = "0.0000566"
                Lm = "0.00219"
                Rr = "0.003442"
                Rs = "0.00604"
                Ts = "100e-6"
                p = "2"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Signal Processing Induction Machine - Voltage Behind Reactance</p></body></html>"

                    Rs {
                        label = "Rs"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "Electrical"
                    }

                    Rr {
                        label = "Rr"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "Electrical"
                    }

                    Lls {
                        label = "Lls"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "H"
                        group = "Electrical"
                    }

                    Llr {
                        label = "Llr"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "H"
                        group = "Electrical"
                    }

                    Lm {
                        label = "Lm"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "H"
                        group = "Electrical"
                    }

                    p {
                        label = "pole pairs"
                        widget = edit
                        type = generic
                        default_value = "0"
                        group = "Mechanical"
                    }

                    J {
                        label = "inertia"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "kg.m^2"
                        group = "Mechanical"
                    }

                    Ts {
                        label = "execution rate"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "s"
                        group = "Signal Processing"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8288, 8368
                size = 120, 240
            ]

            component "core/Current Measurement" Ia {
            }
            [
                position = 8160, 8272
                size = 64, 32
            ]

            component "core/Current Measurement" Ia1 {
            }
            [
                position = 7656, 8272
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vab1 {
            }
            [
                position = 7584, 8320
                rotation = right
                size = 64, 32
            ]

            component Subsystem soft_starter {
                layout = dynamic
                component pas_resistor R2 {
                    resistance = "10e3"
                }
                [
                    position = 8152, 8368
                    rotation = right
                ]

                component gen_c_function "C function1" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "False;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "False;"
                    output_fnc = "/*Begin code section*/
if (in < 160){
    out = 1;
}
else if ((in >= 160) & (in < 170)){
    out = 2;
}
else if ((in >= 170) & (in < 179)){
    out = 3;
}
/*End code section*/"
                }
                [
                    position = 7840, 7960
                ]

                component gen_probe n_ratio {
                }
                [
                    position = 8304, 7968
                ]

                component pas_resistor R1 {
                    resistance = "10e3"
                }
                [
                    position = 8152, 8224
                    rotation = right
                ]

                component sys_signal_switch "Signal switch2" {
                    threshold = "0.5"
                }
                [
                    position = 8080, 7968
                ]

                component src_constant const_1 {
                    execution_rate = "inherit"
                    value = "1.0"
                }
                [
                    position = 8008, 7944
                ]

                component gen_rel_op rel_op {
                    relational_op = "<"
                }
                [
                    position = 7864, 7792
                ]

                component src_constant const_156 {
                    execution_rate = "inherit"
                    value = "156"
                }
                [
                    position = 7744, 7784
                ]

                component src_constant const_075 {
                    execution_rate = "inherit"
                    value = "0.75"
                }
                [
                    position = 7840, 8080
                ]

                component src_constant const_085 {
                    execution_rate = "inherit"
                    value = "0.85"
                }
                [
                    position = 7840, 8136
                ]

                component gen_sr_ff "SR Flip Flop1" {
                }
                [
                    position = 8016, 7808
                ]

                component src_constant const_05 {
                    execution_rate = "inherit"
                    value = "0.5"
                }
                [
                    position = 7840, 8024
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8152, 7824
                ]

                component sys_mp_signal_switch sw {
                    number_of_input_terminals = "3"
                }
                [
                    position = 7936, 8032
                ]

                component "core/Ideal Transformer With Variable Transfer Ratio" Tr4 {
                }
                [
                    position = 8256, 8392
                    scale = 1, -1
                    size = 96, 128
                ]

                component "core/Ideal Transformer With Variable Transfer Ratio" Tr3 {
                }
                [
                    position = 8256, 8200
                    size = 96, 128
                ]

                port A1 {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8072, 8152
                ]

                port B1 {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8072, 8296
                ]

                port C1 {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8072, 8440
                ]

                port A2 {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8416, 8152
                    rotation = down
                ]

                port B2 {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8416, 8296
                    rotation = down
                ]

                port C2 {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8416, 8440
                    rotation = down
                ]

                port speed {
                    position = top:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7744, 7896
                ]

                port reset {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7744, 7832
                ]

                junction Junction2 pe
                [
                    position = 8192, 8296
                ]

                junction Junction3 pe
                [
                    position = 8320, 8296
                ]

                junction Junction5 pe
                [
                    position = 8152, 8152
                ]

                junction Junction6 pe
                [
                    position = 8152, 8296
                ]

                junction Junction7 pe
                [
                    position = 8152, 8296
                ]

                junction Junction8 pe
                [
                    position = 8152, 8440
                ]

                junction Junction9 sp
                [
                    position = 8112, 8048
                ]

                junction Junction10 sp
                [
                    position = 7800, 7896
                ]

                junction Junction11 sp
                [
                    position = 8256, 8056
                ]

                junction Junction12 sp
                [
                    position = 7776, 7832
                ]

                connect B1 Junction6 as Connection1763
                connect B2 Junction3 as Connection1755
                connect "C function1.in" Junction10 as Connection1808
                connect Junction10 speed as Connection1807
                connect Junction11 Tr3.ratio as Connection1816
                connect Junction12 "SR Flip Flop1.r_in" as Connection1819
                connect Junction2 Tr3.P2 as Connection1751
                connect Junction3 Tr3.S2 as Connection1754
                connect Junction5 A1 as Connection1761
                connect Junction6 Junction2 as Connection1764
                connect Junction7 Junction6 as Connection1767
                connect Junction8 C1 as Connection1770
                connect Junction9 Junction11 as Connection1815
                connect R1.p_node Junction5 as Connection1762
                connect R1.n_node Junction7 as Connection1766
                connect R2.p_node Junction7 as Connection1768
                connect R2.n_node Junction8 as Connection1771
                connect "SR Flip Flop1.out" "Signal switch2.in2" as Connection1799
                connect "SR Flip Flop1.out_n" Termination1.in as Connection1798
                connect "Signal switch2.out" Junction9 as Connection1796
                connect Tr3.S1 A2 as Connection1746
                connect Tr3.P1 Junction5 as Connection1760
                connect Tr4.S1 C2 as Connection1748
                connect Tr4.P2 Junction2 as Connection1750
                connect Tr4.S2 Junction3 as Connection1753
                connect Tr4.P1 Junction8 as Connection1769
                connect Tr4.ratio Junction9 as Connection1794
                connect const_05.out sw.in as Connection1811
                connect const_075.out sw.in1 as Connection1812
                connect const_085.out sw.in2 as Connection1813
                connect const_1.out "Signal switch2.in" as Connection1793
                connect const_156.out rel_op.in as Connection1804
                connect n_ratio.in Junction11 as Connection1817
                connect rel_op.in1 Junction10 as Connection1806
                connect rel_op.out "SR Flip Flop1.s_in" as Connection1820
                connect reset Junction12 as Connection1818
                connect sw.ctrl "C function1.out" as Connection1810
                connect sw.out "Signal switch2.in1" as Connection1809
            }
            [
                position = 7856, 8368
                size = 64, 232
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7488, 8272
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vab {
            }
            [
                position = 8088, 8320
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage RMS" Vrms1 {
            }
            [
                position = 8024, 8320
                rotation = right
                size = 64, 32
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection9
                connect C1.p_node R1.n_node as Connection10
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "1e-6"
                R = "10.0"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 7752, 8592
                size = 64, 48
            ]

            component Subsystem friction {
                layout = dynamic
                component gen_abs Abs1 {
                }
                [
                    position = 8240, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                component tm_delay "Unit Delay1" {
                }
                [
                    position = 8320, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain2 {
                    gain = "0.1"
                }
                [
                    position = 8160, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                port Tf {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8096, 8192
                    rotation = down
                ]

                port w {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8392, 8192
                    rotation = down
                ]

                connect Abs1.in "Unit Delay1.out" as Connection2013
                connect Gain2.in Abs1.out as Connection2012
                connect Gain2.out Tf as Connection2011
                connect "Unit Delay1.in" w as Connection2010
            }
            [
                position = 8400, 8136
                size = 48, 48
            ]

            component "core/Rate Transition" "Rate Transition1" {
            }
            [
                position = 7760, 7888
                hide_name = True
                size = 32, 32
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7368, 8368
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7368, 8464
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7368, 8272
            ]

            port Inputs {
                position = auto:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7680, 7888
            ]

            junction Junction4 sp
            [
                position = 8080, 8048
            ]

            junction Junction10 pe
            [
                position = 7768, 8464
            ]

            junction Junction11 pe
            [
                position = 7752, 8368
            ]

            junction Junction12 pe
            [
                position = 7736, 8272
            ]

            junction Junction16 pe
            [
                position = 8024, 8272
            ]

            junction Junction17 pe
            [
                position = 8024, 8368
            ]

            junction Junction19 sp
            [
                position = 8464, 8104
            ]

            junction Junction20 pe
            [
                position = 8088, 8272
            ]

            junction Junction21 pe
            [
                position = 8088, 8368
            ]

            junction Junction22 pe
            [
                position = 7584, 8272
            ]

            junction Junction27 pe
            [
                position = 7584, 8368
            ]

            junction Junction28 sp
            [
                position = 8280, 8048
            ]

            junction Junction29 sp
            [
                position = 8464, 8136
            ]

            connect A Irms_a.p_node as Connection1990
            connect B Junction27 as Connection1993
            connect "Bus Split1.out1" Limit1.in as Connection1776
            connect "Bus Split1.out" "Signal switch1.in2" as Connection1775
            connect "Bus Split1.out2" soft_starter.reset as Connection1777
            connect Gain1.in Limit1.out as Connection1774
            connect INDM.A Ia.n_node as Connection1937
            connect INDM.B Junction21 as Connection1952
            connect INDM.w_m Junction29 as Connection2012
            connect Ia.p_node Junction20 as Connection1949
            connect Ia1.n_node Junction12 as Connection1962
            connect Inputs "Rate Transition1.in" as Connection2016
            connect Irms_a.n_node Junction22 as Connection1955
            connect Junction10 C as Connection1998
            connect Junction10 "RC Snubber.C" as Connection1896
            connect Junction11 Junction27 as Connection1991
            connect Junction11 soft_starter.B1 as Connection1899
            connect Junction12 "RC Snubber.A" as Connection1902
            connect Junction17 soft_starter.B2 as Connection1985
            connect Junction19 speed.in as Connection1946
            connect Junction20 Junction16 as Connection1950
            connect Junction21 Junction17 as Connection1953
            connect Junction22 Ia1.p_node as Connection1961
            connect Junction27 Vab1.n_node as Connection1997
            connect Junction28 torque.in as Connection2004
            connect Junction29 Junction19 as Connection2013
            [
                breakpoints = 8464, 8136
            ]
            connect Junction4 Gain1.out as Connection1768
            connect "RC Snubber.B" Junction11 as Connection1898
            connect Ramp.in Junction4 as Connection1767
            connect "Rate Transition1.out" "Bus Split1.in" as Connection2017
            connect "Signal switch1.out" Junction28 as Connection2003
            connect "Signal switch1.in1" Junction4 as Connection1769
            connect "Signal switch1.in" Ramp.out as Connection1762
            connect Sum1.out INDM.T_load as Connection2002
            connect Sum1.in Junction28 as Connection2005
            connect Termination1.in INDM.T_el as Connection1948
            connect Vab.p_node Junction20 as Connection1951
            connect Vab.n_node Junction21 as Connection2000
            connect Vab1.p_node Junction22 as Connection1957
            connect Vrms1.p_node Junction16 as Connection1927
            connect Vrms1.n_node Junction17 as Connection1938
            connect friction.w Junction29 as Connection2014
            connect friction.Tf Sum1.in1 as Connection2015
            connect soft_starter.C2 INDM.C as Connection1999
            connect soft_starter.C1 Junction10 as Connection1895
            connect soft_starter.A1 Junction12 as Connection1901
            connect soft_starter.A2 Junction16 as Connection1984
            connect soft_starter.speed Junction19 as Connection1945

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE define_icon
                    image('images/thruster.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6768, 7008
            size = 136, 152
        ]

        component Subsystem "Bow Thruster 2" {
            layout = dynamic
            component gen_sum Sum1 {
            }
            [
                position = 8288, 8192
                rotation = right
                hide_name = True
                scale = -1, 1
            ]

            component gen_rate_limiter Ramp {
                falling_limit = "-1000"
                rising_limit = "1000"
            }
            [
                position = 8128, 8032
                hide_name = True
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 7856, 7936
                rotation = right
                hide_name = True
            ]

            component gen_gain Gain1 {
                gain = "2835.0/100.0"
            }
            [
                position = 8040, 8048
                hide_name = True
            ]

            component sys_signal_switch "Signal switch1" {
                threshold = "0.5"
            }
            [
                position = 8232, 8048
                hide_name = True
            ]

            component gen_probe speed {
            }
            [
                position = 8448, 8056
                rotation = left
            ]

            component gen_probe torque {
            }
            [
                position = 8344, 7984
                rotation = left
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8392, 8520
                rotation = right
                hide_name = True
            ]

            component gen_limiter Limit1 {
                lower_limit = "0"
                upper_limit = "100"
            }
            [
                position = 7976, 8048
                hide_name = True
            ]

            component Subsystem INDM {
                layout = dynamic
                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8464, 8272
                    hide_name = True
                ]

                component pas_resistor Rb {
                    resistance = "Rs + Rr*(1.0/(1.0/Lm + 1.0/Llr)/Llr)**2"
                }
                [
                    position = 7872, 8272
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8064, 8072
                    hide_name = True
                ]

                component pas_resistor Ra {
                    resistance = "Rs + Rr*(1.0/(1.0/Lm + 1.0/Llr)/Llr)**2"
                }
                [
                    position = 7872, 8176
                ]

                component pas_resistor Rc {
                    resistance = "Rs + Rr*(1.0/(1.0/Lm + 1.0/Llr)/Llr)**2"
                }
                [
                    position = 7872, 8368
                ]

                component pas_inductor Lb {
                    inductance = "Lls + 1.0/(1.0/Lm + 1.0/Llr)"
                }
                [
                    position = 7744, 8272
                ]

                component gen_alpha_beta2abc "alpha beta to abc1" {
                }
                [
                    position = 8544, 8248
                ]

                component pas_inductor Lc {
                    inductance = "Lls + 1.0/(1.0/Lm + 1.0/Llr)"
                }
                [
                    position = 7744, 8368
                ]

                component pas_inductor La {
                    inductance = "Lls + 1.0/(1.0/Lm + 1.0/Llr)"
                }
                [
                    position = 7744, 8176
                ]

                component gen_abc2alpha_beta "abc to alpha beta1" {
                }
                [
                    position = 7968, 8040
                ]

                component gen_c_function "C function1" {
                    global_variables = "real Lmdp;real a1;real b1;real c1;real Ts;real Lmdp_div_Llr;real det_part;real ad1_part;real bd1;real psi_alr;real psi_ber;real ad1;real det;real rec_det;real w_el;real ad2;real psi_alr_mem;real psi_ber_mem;real w_el_mem;real bd2;real cd1;real cd2;real psi_als;real psi_bes;real T_el;real theta_el;"
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "i_als inherit;i_bes inherit;T_load inherit"
                    in_terminal_labels = "True;True;True;"
                    in_terminal_properties = "real i_als;inherit i_bes;inherit T_load;"
                    init_fnc = "/*Begin code section*/
// initialize states
psi_alr_mem = 0.0;
psi_ber_mem = 0.0;
w_el_mem = 0.0;
theta_el = 0.0;

// state space matrices definition
Ts = execution_rate;
Lmdp = 1.0/(1.0/Lm + 1.0/Llr);

Lmdp_div_Llr = Lmdp/Llr;
a1 = Rr*(Lmdp_div_Llr - 1.0)/Llr;
b1 = Rr*Lmdp_div_Llr;
c1 = Rr*Lmdp_div_Llr*(Lmdp_div_Llr - 1.0)/Llr;

det_part = (1.0 - Ts*a1/2.0)*(1.0 - Ts*a1/2.0);
ad1_part = 1.0 - (Ts*a1/2.0)*(Ts*a1/2.0);
bd1        = (1.0 - Ts*a1/2.0)*b1*Ts;

cd1 = c1;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit;inherit;inherit;inherit"
                    out_terminal_dimensions_str = "e_als inherit;e_bes inherit;w_m inherit;Tel inherit"
                    out_terminal_labels = "True;True;True;True;"
                    out_terminal_properties = "real e_als;inherit e_bes;inherit w_m;inherit Tel;"
                    output_fnc = "/*Begin code section*/
cd2 = -w_el_mem*Lmdp_div_Llr;

e_als = cd1*psi_alr_mem + cd2*psi_ber_mem;
e_bes = cd1*psi_ber_mem - cd2*psi_alr_mem;
w_m = w_el_mem/p;

// needed for torque
psi_als = Lmdp_div_Llr*psi_alr_mem + (Lmdp+Lls)*i_als;
psi_bes = Lmdp_div_Llr*psi_ber_mem + (Lmdp+Lls)*i_bes;

T_el = 1.5*p*(psi_als*i_bes - psi_bes*i_als);

Tel = T_el;
/*End code section*/"
                    parameters = "real Rs;real Rr;real Lls;real Llr;real Lm;real J;real p;"
                    update_fnc = "/*Begin code section*/
det = det_part + w_el_mem*w_el_mem*Ts*Ts*.25;
rec_det = 1.0/det;

ad1 = ad1_part - w_el_mem*w_el_mem*Ts*Ts*.25;
ad2 = -w_el_mem*Ts;

bd2 = -w_el_mem*b1*Ts*Ts*.5;

psi_alr = rec_det*(ad1*psi_alr_mem + ad2*psi_ber_mem + bd1*i_als + bd2*i_bes);
psi_ber = rec_det*(ad1*psi_ber_mem - ad2*psi_alr_mem + bd1*i_bes - bd2*i_als);

w_el = w_el_mem + Ts*p*(T_el - T_load)/J;

psi_alr_mem = psi_alr;
psi_ber_mem = psi_ber;
w_el_mem = w_el;
/*End code section*/"
                }
                [
                    position = 8208, 8040
                    size = 48, 80
                ]

                component "core/Signal Controlled Voltage Source" e_b {
                }
                [
                    position = 8128, 8272
                    size = 64, 32
                ]

                component "core/Current Measurement" Ic {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7968, 8368
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7968, 8176
                    size = 64, 32
                ]

                component "core/Signal Controlled Voltage Source" e_a {
                }
                [
                    position = 8128, 8176
                    size = 64, 32
                ]

                component "core/Current Measurement" Ib {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7968, 8272
                    size = 64, 32
                ]

                component "core/Signal Controlled Voltage Source" e_c {
                }
                [
                    position = 8128, 8368
                    size = 64, 32
                ]

                port w_m {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8384, 8080
                ]

                port T_el {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8360, 8144
                ]

                port T_load {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8136, 8056
                ]

                port A {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7664, 8176
                ]

                port B {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7664, 8272
                ]

                port C {
                    position = left:4
                    kind = pe
                }
                [
                    position = 7664, 8368
                ]

                tag From6 {
                    value = "e_a"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8144
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Ic"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8032, 8344
                    hide_name = True
                ]

                tag Goto8 {
                    value = "e_c"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8640, 8272
                    hide_name = True
                ]

                tag From1 {
                    value = "Ia"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7856, 8016
                    hide_name = True
                ]

                tag Goto2 {
                    value = "Ib"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8032, 8248
                    hide_name = True
                ]

                tag Goto4 {
                    value = "e_als"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8416, 8016
                    hide_name = True
                ]

                tag From4 {
                    value = "e_bes"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8400, 8248
                    hide_name = True
                ]

                tag Goto5 {
                    value = "e_bes"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8504, 8032
                    hide_name = True
                ]

                tag Goto1 {
                    value = "Ia"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8032, 8152
                    hide_name = True
                ]

                tag From5 {
                    value = "e_als"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8464, 8224
                    hide_name = True
                ]

                tag From2 {
                    value = "Ib"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7856, 8040
                    hide_name = True
                ]

                tag From8 {
                    value = "e_b"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8240
                    hide_name = True
                    scale = -1, 1
                ]

                tag From7 {
                    value = "e_c"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8336
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto6 {
                    value = "e_a"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8640, 8224
                    hide_name = True
                ]

                tag Goto7 {
                    value = "e_b"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8640, 8248
                    hide_name = True
                ]

                tag From3 {
                    value = "Ic"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7856, 8064
                    hide_name = True
                ]

                junction Junction1 pe
                [
                    position = 8176, 8272
                ]

                connect "C function1.e_als" Goto4 as Connection20
                connect "C function1.Tel" T_el as Connection46
                connect "C function1.T_load" T_load as Connection47
                connect "C function1.i_als" "abc to alpha beta1.alpha" as Connection14
                connect "C function1.w_m" w_m as Connection51
                connect Constant1.out "alpha beta to abc1.gamma" as Connection27
                connect From1 "abc to alpha beta1.A" as Connection16
                connect From2 "abc to alpha beta1.B" as Connection17
                connect From3 "abc to alpha beta1.C" as Connection18
                connect From4 "alpha beta to abc1.beta" as Connection28
                connect From5 "alpha beta to abc1.alpha" as Connection29
                connect From6 e_a.in as Connection33
                connect From7 e_c.in as Connection35
                connect From8 e_b.in as Connection34
                connect Goto1 Ia.out as Connection10
                connect Goto2 Ib.out as Connection11
                connect Goto3 Ic.out as Connection12
                connect Goto5 "C function1.e_bes" as Connection19
                connect Goto6 "alpha beta to abc1.A" as Connection30
                connect Goto7 "alpha beta to abc1.B" as Connection31
                connect Goto8 "alpha beta to abc1.C" as Connection32
                connect Ia.n_node e_a.p_node as Connection45
                connect Ic.n_node e_c.p_node as Connection43
                connect Junction1 e_c.n_node as Connection25
                connect La.p_node A as Connection48
                connect Lb.p_node B as Connection49
                connect Lc.p_node C as Connection50
                connect Ra.n_node Ia.p_node as Connection40
                connect Ra.p_node La.n_node as Connection1
                connect Rb.n_node Ib.p_node as Connection41
                connect Rb.p_node Lb.n_node as Connection2
                connect Rc.n_node Ic.p_node as Connection42
                connect Rc.p_node Lc.n_node as Connection3
                connect Termination1.in "abc to alpha beta1.gamma" as Connection13
                connect "abc to alpha beta1.beta" "C function1.i_bes" as Connection15
                connect e_a.n_node Junction1 as Connection24
                connect e_b.p_node Ib.n_node as Connection44
                connect e_b.n_node Junction1 as Connection26

                J = "10"
                Llr = "0.0000566"
                Lls = "0.0000566"
                Lm = "0.00219"
                Rr = "0.003442"
                Rs = "0.00604"
                Ts = "100e-6"
                p = "2"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Signal Processing Induction Machine - Voltage Behind Reactance</p></body></html>"

                    Rs {
                        label = "Rs"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "Electrical"
                    }

                    Rr {
                        label = "Rr"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "Electrical"
                    }

                    Lls {
                        label = "Lls"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "H"
                        group = "Electrical"
                    }

                    Llr {
                        label = "Llr"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "H"
                        group = "Electrical"
                    }

                    Lm {
                        label = "Lm"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "H"
                        group = "Electrical"
                    }

                    p {
                        label = "pole pairs"
                        widget = edit
                        type = generic
                        default_value = "0"
                        group = "Mechanical"
                    }

                    J {
                        label = "inertia"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "kg.m^2"
                        group = "Mechanical"
                    }

                    Ts {
                        label = "execution rate"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "s"
                        group = "Signal Processing"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8288, 8368
                size = 120, 240
            ]

            component "core/Current Measurement" Ia {
            }
            [
                position = 8160, 8272
                size = 64, 32
            ]

            component "core/Current Measurement" Ia1 {
            }
            [
                position = 7656, 8272
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vab1 {
            }
            [
                position = 7584, 8320
                rotation = right
                size = 64, 32
            ]

            component Subsystem soft_starter {
                layout = dynamic
                component pas_resistor R2 {
                    resistance = "10e3"
                }
                [
                    position = 8152, 8368
                    rotation = right
                ]

                component gen_c_function "C function1" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "False;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "False;"
                    output_fnc = "/*Begin code section*/
if (in < 160){
    out = 1;
}
else if ((in >= 160) & (in < 170)){
    out = 2;
}
else if ((in >= 170) & (in < 179)){
    out = 3;
}
/*End code section*/"
                }
                [
                    position = 7840, 7960
                ]

                component gen_probe n_ratio {
                }
                [
                    position = 8304, 7968
                ]

                component pas_resistor R1 {
                    resistance = "10e3"
                }
                [
                    position = 8152, 8224
                    rotation = right
                ]

                component sys_signal_switch "Signal switch2" {
                    threshold = "0.5"
                }
                [
                    position = 8080, 7968
                ]

                component src_constant const_1 {
                    execution_rate = "inherit"
                    value = "1.0"
                }
                [
                    position = 8008, 7944
                ]

                component gen_rel_op rel_op {
                    relational_op = "<"
                }
                [
                    position = 7864, 7792
                ]

                component src_constant const_156 {
                    execution_rate = "inherit"
                    value = "156"
                }
                [
                    position = 7744, 7784
                ]

                component src_constant const_075 {
                    execution_rate = "inherit"
                    value = "0.75"
                }
                [
                    position = 7840, 8080
                ]

                component src_constant const_085 {
                    execution_rate = "inherit"
                    value = "0.85"
                }
                [
                    position = 7840, 8136
                ]

                component gen_sr_ff "SR Flip Flop1" {
                }
                [
                    position = 8016, 7808
                ]

                component src_constant const_05 {
                    execution_rate = "inherit"
                    value = "0.5"
                }
                [
                    position = 7840, 8024
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8152, 7824
                ]

                component sys_mp_signal_switch sw {
                    number_of_input_terminals = "3"
                }
                [
                    position = 7936, 8032
                ]

                component "core/Ideal Transformer With Variable Transfer Ratio" Tr4 {
                }
                [
                    position = 8256, 8392
                    scale = 1, -1
                    size = 96, 128
                ]

                component "core/Ideal Transformer With Variable Transfer Ratio" Tr3 {
                }
                [
                    position = 8256, 8200
                    size = 96, 128
                ]

                port A1 {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8072, 8152
                ]

                port B1 {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8072, 8296
                ]

                port C1 {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8072, 8440
                ]

                port A2 {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8416, 8152
                    rotation = down
                ]

                port B2 {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8416, 8296
                    rotation = down
                ]

                port C2 {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8416, 8440
                    rotation = down
                ]

                port speed {
                    position = top:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7744, 7896
                ]

                port reset {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7744, 7832
                ]

                junction Junction2 pe
                [
                    position = 8192, 8296
                ]

                junction Junction3 pe
                [
                    position = 8320, 8296
                ]

                junction Junction5 pe
                [
                    position = 8152, 8152
                ]

                junction Junction6 pe
                [
                    position = 8152, 8296
                ]

                junction Junction7 pe
                [
                    position = 8152, 8296
                ]

                junction Junction8 pe
                [
                    position = 8152, 8440
                ]

                junction Junction9 sp
                [
                    position = 8112, 8048
                ]

                junction Junction10 sp
                [
                    position = 7800, 7896
                ]

                junction Junction11 sp
                [
                    position = 8256, 8056
                ]

                junction Junction12 sp
                [
                    position = 7776, 7832
                ]

                connect B1 Junction6 as Connection1763
                connect B2 Junction3 as Connection1755
                connect "C function1.in" Junction10 as Connection1808
                connect Junction10 speed as Connection1807
                connect Junction11 Tr3.ratio as Connection1816
                connect Junction12 "SR Flip Flop1.r_in" as Connection1819
                connect Junction2 Tr3.P2 as Connection1751
                connect Junction3 Tr3.S2 as Connection1754
                connect Junction5 A1 as Connection1761
                connect Junction6 Junction2 as Connection1764
                connect Junction7 Junction6 as Connection1767
                connect Junction8 C1 as Connection1770
                connect Junction9 Junction11 as Connection1815
                connect R1.p_node Junction5 as Connection1762
                connect R1.n_node Junction7 as Connection1766
                connect R2.p_node Junction7 as Connection1768
                connect R2.n_node Junction8 as Connection1771
                connect "SR Flip Flop1.out" "Signal switch2.in2" as Connection1799
                connect "SR Flip Flop1.out_n" Termination1.in as Connection1798
                connect "Signal switch2.out" Junction9 as Connection1796
                connect Tr3.S1 A2 as Connection1746
                connect Tr3.P1 Junction5 as Connection1760
                connect Tr4.S1 C2 as Connection1748
                connect Tr4.P2 Junction2 as Connection1750
                connect Tr4.S2 Junction3 as Connection1753
                connect Tr4.P1 Junction8 as Connection1769
                connect Tr4.ratio Junction9 as Connection1794
                connect const_05.out sw.in as Connection1811
                connect const_075.out sw.in1 as Connection1812
                connect const_085.out sw.in2 as Connection1813
                connect const_1.out "Signal switch2.in" as Connection1793
                connect const_156.out rel_op.in as Connection1804
                connect n_ratio.in Junction11 as Connection1817
                connect rel_op.in1 Junction10 as Connection1806
                connect rel_op.out "SR Flip Flop1.s_in" as Connection1820
                connect reset Junction12 as Connection1818
                connect sw.ctrl "C function1.out" as Connection1810
                connect sw.out "Signal switch2.in1" as Connection1809
            }
            [
                position = 7856, 8368
                size = 64, 232
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7488, 8272
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vab {
            }
            [
                position = 8088, 8320
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage RMS" Vrms1 {
            }
            [
                position = 8024, 8320
                rotation = right
                size = 64, 32
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection9
                connect C1.p_node R1.n_node as Connection10
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "1e-6"
                R = "10.0"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 7752, 8592
                size = 64, 48
            ]

            component Subsystem friction {
                layout = dynamic
                component gen_abs Abs1 {
                }
                [
                    position = 8240, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                component tm_delay "Unit Delay1" {
                }
                [
                    position = 8320, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain2 {
                    gain = "0.1"
                }
                [
                    position = 8160, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                port Tf {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8096, 8192
                    rotation = down
                ]

                port w {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8392, 8192
                    rotation = down
                ]

                connect Abs1.in "Unit Delay1.out" as Connection2013
                connect Gain2.in Abs1.out as Connection2012
                connect Gain2.out Tf as Connection2011
                connect "Unit Delay1.in" w as Connection2010
            }
            [
                position = 8384, 8144
                size = 48, 48
            ]

            component "core/Rate Transition" "Rate Transition1" {
            }
            [
                position = 7768, 7888
                hide_name = True
                size = 32, 32
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7368, 8368
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7368, 8464
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7368, 8272
            ]

            port Inputs {
                position = auto:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7704, 7888
            ]

            junction Junction4 sp
            [
                position = 8080, 8048
            ]

            junction Junction10 pe
            [
                position = 7768, 8464
            ]

            junction Junction11 pe
            [
                position = 7752, 8368
            ]

            junction Junction12 pe
            [
                position = 7736, 8272
            ]

            junction Junction16 pe
            [
                position = 8024, 8272
            ]

            junction Junction17 pe
            [
                position = 8024, 8368
            ]

            junction Junction19 sp
            [
                position = 8448, 8104
            ]

            junction Junction20 pe
            [
                position = 8088, 8272
            ]

            junction Junction21 pe
            [
                position = 8088, 8368
            ]

            junction Junction22 pe
            [
                position = 7584, 8272
            ]

            junction Junction27 pe
            [
                position = 7584, 8368
            ]

            junction Junction28 sp
            [
                position = 8280, 8048
            ]

            junction Junction29 sp
            [
                position = 8448, 8144
            ]

            connect A Irms_a.p_node as Connection1990
            connect B Junction27 as Connection1993
            connect "Bus Split1.out1" Limit1.in as Connection1776
            connect "Bus Split1.out" "Signal switch1.in2" as Connection1775
            connect "Bus Split1.out2" soft_starter.reset as Connection1777
            connect Gain1.in Limit1.out as Connection1774
            connect INDM.A Ia.n_node as Connection1937
            connect INDM.B Junction21 as Connection1952
            connect Ia.p_node Junction20 as Connection1949
            connect Ia1.n_node Junction12 as Connection1962
            connect Inputs "Rate Transition1.in" as Connection2016
            connect Irms_a.n_node Junction22 as Connection1955
            connect Junction10 C as Connection1998
            connect Junction10 "RC Snubber.C" as Connection1896
            connect Junction11 Junction27 as Connection1991
            connect Junction11 soft_starter.B1 as Connection1899
            connect Junction12 "RC Snubber.A" as Connection1902
            connect Junction17 soft_starter.B2 as Connection1985
            connect Junction19 Junction29 as Connection2012
            [
                breakpoints = 8448, 8104; 8448, 8136
            ]
            connect Junction19 speed.in as Connection1946
            connect Junction20 Junction16 as Connection1950
            connect Junction21 Junction17 as Connection1953
            connect Junction22 Ia1.p_node as Connection1961
            connect Junction27 Vab1.n_node as Connection1997
            connect Junction28 torque.in as Connection2004
            connect Junction29 INDM.w_m as Connection2013
            connect Junction4 Gain1.out as Connection1768
            connect "RC Snubber.B" Junction11 as Connection1898
            connect Ramp.in Junction4 as Connection1767
            connect "Rate Transition1.out" "Bus Split1.in" as Connection2017
            connect "Signal switch1.out" Junction28 as Connection2003
            connect "Signal switch1.in1" Junction4 as Connection1769
            connect "Signal switch1.in" Ramp.out as Connection1762
            connect Sum1.out INDM.T_load as Connection2002
            connect Sum1.in Junction28 as Connection2005
            connect Termination1.in INDM.T_el as Connection1948
            connect Vab.p_node Junction20 as Connection1951
            connect Vab.n_node Junction21 as Connection2000
            connect Vab1.p_node Junction22 as Connection1957
            connect Vrms1.p_node Junction16 as Connection1927
            connect Vrms1.n_node Junction17 as Connection1938
            connect friction.w Junction29 as Connection2014
            connect friction.Tf Sum1.in1 as Connection2015
            connect soft_starter.C2 INDM.C as Connection1999
            connect soft_starter.C1 Junction10 as Connection1895
            connect soft_starter.A1 Junction12 as Connection1901
            connect soft_starter.A2 Junction16 as Connection1984
            connect soft_starter.speed Junction19 as Connection1945

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE define_icon
                    image('images/thruster.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 8040, 7016
            size = 136, 152
        ]

        component Subsystem cpl5 {
            layout = dynamic
            component "core/Three Phase Core Coupling" "Core Coupling2" {
                R1 = "10.0"
                fixed_snb_i = "true"
            }
            [
                position = 8192, 8192
                size = 12, 256
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "1e-6"
                R = "10"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8072, 8376
                size = 64, 48
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7992, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7992, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7992, 8288
            ]

            port A2 {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8096
                rotation = down
            ]

            port B2 {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8192
                rotation = down
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8288
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8056, 8096
            ]

            junction Junction2 pe
            [
                position = 8072, 8192
            ]

            junction Junction3 pe
            [
                position = 8088, 8288
            ]

            connect "Core Coupling2.a_out" A2 as Connection3
            connect "Core Coupling2.b_out" B2 as Connection2
            connect "Core Coupling2.c_out" C2 as Connection4
            connect "Core Coupling2.a_in" Junction1 as Connection7
            connect "Core Coupling2.b_in" Junction2 as Connection10
            connect "Core Coupling2.c_in" Junction3 as Connection13
            connect Junction1 A1 as Connection8
            connect Junction2 B1 as Connection11
            connect Junction3 C1 as Connection14
            connect "RC Snubber.A" Junction1 as Connection9
            connect "RC Snubber.B" Junction2 as Connection12
            connect "RC Snubber.C" Junction3 as Connection15
        }
        [
            position = 7688, 6616
            rotation = right
            scale = -1, 1
            size = 48, 64
        ]

        component Subsystem "Bus Breaker" {
            layout = dynamic
            component gen_probe "dw_sync Probe" {
            }
            [
                position = 7776, 8088
            ]

            component gen_bus_split "Bus Split1" {
            }
            [
                position = 7360, 8216
                hide_name = True
            ]

            component "core/Voltage Measurement" VBC {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7304, 8688
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" Ib {
                execution_rate = "Ts"
            }
            [
                position = 7648, 8640
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Current Measurement" Ia {
                execution_rate = "Ts"
            }
            [
                position = 7648, 8544
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Voltage Measurement" VAB {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7304, 8592
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vca {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8168, 8696
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vbc {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7984, 8696
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vab {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7984, 8592
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" Ic {
                execution_rate = "Ts"
            }
            [
                position = 7648, 8736
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Voltage Measurement" VCA {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7480, 8688
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Triple Pole Single Throw Contactor" "Main CB" {
                ctrl_src = "Model"
            }
            [
                position = 7760, 8640
                size = 64, 256
            ]

            component "core/Voltage RMS" Vrms2 {
            }
            [
                position = 7912, 8592
                rotation = right
                size = 64, 32
            ]

            component "core/Current RMS" Irms1 {
            }
            [
                position = 7544, 8544
                size = 64, 32
            ]

            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_terminator Termination4 {
                }
                [
                    position = 7904, 8544
                    hide_name = True
                ]

                component gen_sr_ff "SR Flip Flop4" {
                }
                [
                    position = 7824, 8528
                    hide_name = True
                ]

                component Subsystem Sync_Check {
                    layout = dynamic
                    component gen_probe dV {
                    }
                    [
                        position = 8664, 7912
                    ]

                    component gen_digital_probe Phase_match {
                    }
                    [
                        position = 8760, 8360
                    ]

                    component gen_logic_op and1 {
                    }
                    [
                        position = 8464, 8440
                    ]

                    component gen_probe dw_f {
                    }
                    [
                        position = 8792, 8080
                    ]

                    component gen_digital_probe f_match {
                    }
                    [
                        position = 8688, 8144
                    ]

                    component gen_probe dw_phase {
                    }
                    [
                        position = 8784, 8288
                    ]

                    component gen_digital_probe Check_phase_ON {
                    }
                    [
                        position = 8592, 8440
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 8808, 8656
                    ]

                    component gen_bus_join "Bus Join" {
                        inputs = "3"
                    }
                    [
                        position = 9424, 8048
                        rotation = right
                    ]

                    component gen_logic_op and2 {
                        inputs = "4"
                    }
                    [
                        position = 8896, 8600
                        rotation = left
                    ]

                    component gen_probe dw_synch {
                    }
                    [
                        position = 9080, 8136
                    ]

                    component gen_digital_probe V_match {
                    }
                    [
                        position = 8848, 7976
                    ]

                    component gen_logic_op not1 {
                        operator = "NOT"
                    }
                    [
                        position = 8808, 8776
                    ]

                    component gen_digital_probe synch_check_ON {
                    }
                    [
                        position = 8976, 8472
                    ]

                    component Subsystem check_f_diff {
                        layout = dynamic
                        component gen_gain Freq_diff {
                            gain = "delta_f/100.0"
                        }
                        [
                            position = 8208, 8304
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8280, 8256
                            scale = 1, -1
                        ]

                        component gen_gain toPU {
                            gain = "[1.0/(2.0*f)]"
                        }
                        [
                            position = 8216, 8152
                        ]

                        component gen_abs Abs3 {
                        }
                        [
                            position = 8208, 8248
                        ]

                        component gen_z_domain_transfer LPF_dwf {
                            a_coeff = "[1.0/(2*np.pi*1),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8128, 8152
                        ]

                        component gen_sum Sum1 {
                            signs = "+-"
                        }
                        [
                            position = 8056, 8152
                        ]

                        component src_constant Constant1 {
                            execution_rate = "Ts"
                            value = "f"
                        }
                        [
                            position = 8120, 8304
                        ]

                        component gen_probe f_diff {
                        }
                        [
                            position = 8248, 8088
                        ]

                        component Subsystem PI {
                            layout = dynamic
                            component gen_product Product2 {
                            }
                            [
                                position = 7968, 8216
                            ]

                            component gen_sum Sum6 {
                                signs = "-+"
                            }
                            [
                                position = 8320, 8312
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "f_lowLim"
                                upper_limit = "f_upLim"
                            }
                            [
                                position = 8408, 8216
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7968, 8136
                            ]

                            component src_scada_input Kp {
                                def_value = "f_Kp"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 7864, 8128
                            ]

                            component gen_integrator Integrator1 {
                                limit_lower = "[\'-inf\']"
                                limit_upper = "[\'inf\']"
                            }
                            [
                                position = 8216, 8224
                            ]

                            component src_scada_input Ki {
                                def_value = "f_Ki"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 7864, 8224
                            ]

                            component gen_gain Kb {
                            }
                            [
                                position = 8216, 8312
                                scale = -1, 1
                            ]

                            component gen_sum Sum7 {
                            }
                            [
                                position = 8088, 8224
                            ]

                            component gen_sum Sum5 {
                            }
                            [
                                position = 8320, 8216
                            ]

                            port In {
                                label = "In"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7824, 8184
                            ]

                            port Out {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8472, 8216
                            ]

                            junction Junction1 sp
                            [
                                position = 7904, 8184
                            ]

                            junction Junction2 sp
                            [
                                position = 8368, 8216
                            ]

                            junction Junction3 sp
                            [
                                position = 8440, 8216
                            ]

                            connect In Junction1 as Connection41
                            connect Junction1 Product2.in as Connection40
                            connect Junction2 Limit1.in as Connection45
                            connect Junction3 Out as Connection48
                            connect Kb.in Sum6.out as Connection50
                            connect Ki.out Product2.in1 as Connection34
                            connect Kp.out Product1.in as Connection29
                            connect Limit1.out Junction3 as Connection47
                            connect Product1.in1 Junction1 as Connection39
                            connect Product1.out Sum5.in as Connection38
                            connect Sum5.in1 Integrator1.out as Connection5
                            connect Sum5.out Junction2 as Connection44
                            connect Sum6.in Junction2 as Connection46
                            connect Sum6.in1 Junction3 as Connection49
                            connect Sum7.out Integrator1.in as Connection52
                            connect Sum7.in1 Kb.out as Connection53
                            connect Sum7.in Product2.out as Connection51
                        }
                        [
                            position = 8304, 8152
                            size = 64, 48
                        ]

                        port dw_f {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8152
                        ]

                        port f_Grid {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7880, 8144
                        ]

                        port f_Gen {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7968, 8160
                        ]

                        port f_match {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8256
                        ]

                        junction Junction1 sp
                        [
                            position = 8168, 8152
                        ]

                        connect Abs3.in Junction1 as Connection7
                        connect Comparator1.in2 Abs3.out as Connection10
                        connect Comparator1.out f_match as Connection59
                        connect Constant1.out Freq_diff.in as Connection14
                        connect Freq_diff.out Comparator1.in1 as Connection17
                        connect Junction1 LPF_dwf.out as Connection61
                        connect LPF_dwf.in Sum1.out as Connection62
                        connect PI.Out dw_f as Connection64
                        connect Sum1.in1 f_Gen as Connection60
                        connect Sum1.in f_Grid as Connection57
                        connect f_diff.in Junction1 as Connection56
                        connect toPU.in Junction1 as Connection40
                        connect toPU.out PI.In as Connection63
                    }
                    [
                        position = 8520, 8160
                        size = 144, 112
                    ]

                    component Subsystem check_V_diff {
                        layout = dynamic
                        component gen_abs Abs3 {
                        }
                        [
                            position = 8232, 8248
                        ]

                        component gen_logic_op and {
                        }
                        [
                            position = 8032, 8368
                        ]

                        component gen_sum Sum1 {
                            signs = "+-"
                        }
                        [
                            position = 8056, 8144
                        ]

                        component gen_gain pu {
                            gain = "1.0/(Vn/((3.0/2.0)**0.5))"
                        }
                        [
                            position = 8128, 8144
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8432, 8160
                            hide_name = True
                        ]

                        component tm_delay "Unit Delay1" {
                        }
                        [
                            position = 8144, 8040
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                        }
                        [
                            position = 8144, 8304
                        ]

                        component src_constant zero {
                            execution_rate = "Ts"
                            value = "0"
                        }
                        [
                            position = 8360, 8176
                        ]

                        component gen_gain Volt_diff {
                            gain = "delta_V/100.0"
                        }
                        [
                            position = 8232, 8304
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8304, 8256
                            hide_name = True
                            scale = 1, -1
                        ]

                        component gen_gain pu1 {
                            gain = "1.0/(Vn/((3.0/2.0)**0.5))"
                        }
                        [
                            position = 7744, 8320
                        ]

                        component gen_probe V_diff {
                        }
                        [
                            position = 8200, 8096
                        ]

                        component src_constant V_lim {
                            execution_rate = "Ts"
                            value = "0.01"
                        }
                        [
                            position = 7656, 8384
                        ]

                        component gen_rel_op great_equal {
                            relational_op = ">="
                        }
                        [
                            position = 7832, 8376
                        ]

                        component gen_gain pu2 {
                            gain = "1.0/(Vn/((3.0/2.0)**0.5))"
                        }
                        [
                            position = 7840, 8184
                        ]

                        component gen_rel_op great_equal1 {
                            relational_op = ">="
                        }
                        [
                            position = 7928, 8240
                        ]

                        component Subsystem PI {
                            layout = dynamic
                            component gen_sum Sum7 {
                            }
                            [
                                position = 8088, 8224
                            ]

                            component src_scada_input Ki {
                                def_value = "V_Ki"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 7864, 8224
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 7968, 8216
                            ]

                            component gen_sum Sum5 {
                            }
                            [
                                position = 8320, 8224
                            ]

                            component gen_gain Kb {
                            }
                            [
                                position = 8216, 8312
                                scale = -1, 1
                            ]

                            component gen_sum Sum6 {
                                signs = "-+"
                            }
                            [
                                position = 8320, 8312
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "-1"
                                upper_limit = "1"
                            }
                            [
                                position = 8408, 8224
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7968, 8136
                            ]

                            component src_scada_input Kp {
                                def_value = "V_Kp"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 7864, 8128
                            ]

                            component gen_integrator Integrator1 {
                                limit_lower = "-1"
                                limit_upper = "1"
                                show_reset = "either"
                            }
                            [
                                position = 8216, 8232
                            ]

                            port Reset {
                                label = "Reset"
                                position = top:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8144, 8264
                            ]

                            port In {
                                label = "In"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7824, 8184
                            ]

                            port Out {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8472, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 7904, 8184
                            ]

                            junction Junction2 sp
                            [
                                position = 8368, 8224
                            ]

                            junction Junction3 sp
                            [
                                position = 8440, 8224
                            ]

                            connect In Junction1 as Connection41
                            connect Integrator1.reset Reset as Connection2
                            connect Junction1 Product2.in as Connection40
                            connect Junction2 Limit1.in as Connection45
                            connect Junction3 Out as Connection48
                            connect Kb.in Sum6.out as Connection50
                            connect Ki.out Product2.in1 as Connection34
                            connect Kp.out Product1.in as Connection29
                            connect Limit1.out Junction3 as Connection47
                            connect Product1.in1 Junction1 as Connection39
                            connect Product1.out Sum5.in as Connection38
                            connect Sum5.in1 Integrator1.out as Connection5
                            connect Sum5.out Junction2 as Connection44
                            connect Sum6.in Junction2 as Connection46
                            connect Sum6.in1 Junction3 as Connection49
                            connect Sum7.out Integrator1.in as Connection52
                            connect Sum7.in1 Kb.out as Connection53
                            connect Sum7.in Product2.out as Connection51
                        }
                        [
                            position = 8272, 8144
                            size = 64, 48
                        ]

                        port dV {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8520, 8160
                        ]

                        port Activate {
                            position = top:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8064, 8040
                        ]

                        port V_match {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8432, 8256
                        ]

                        port V_ABC {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7584, 8136
                        ]

                        port V_abc {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7752, 8152
                        ]

                        port Energized {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8112, 8368
                        ]

                        tag Goto1 {
                            value = "V_lim"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7744, 8408
                            hide_name = True
                        ]

                        tag From1 {
                            value = "V_lim"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7832, 8248
                        ]

                        junction Junction2 sp
                        [
                            position = 8168, 8144
                        ]

                        junction Junction3 sp
                        [
                            position = 8168, 8144
                        ]

                        junction Junction4 sp
                        [
                            position = 8272, 8040
                        ]

                        junction Junction5 sp
                        [
                            position = 7800, 8152
                        ]

                        junction Junction6 sp
                        [
                            position = 7632, 8136
                        ]

                        junction Junction7 sp
                        [
                            position = 7688, 8384
                        ]

                        connect Abs3.in Junction2 as Connection202
                        connect Activate "Unit Delay1.in" as Connection208
                        connect Comparator1.in2 Abs3.out as Connection10
                        connect Energized and.out as Connection241
                        connect From1 great_equal1.in1 as Connection263
                        connect Goto1 Junction7 as Connection260
                        connect Junction2 pu.out as Connection201
                        connect Junction3 Junction2 as Connection216
                        connect Junction4 "Unit Delay1.out" as Connection219
                        connect Junction5 V_abc as Connection253
                        [
                            breakpoints = 7784, 8152
                        ]
                        connect Junction6 V_ABC as Connection256
                        connect Junction7 great_equal.in1 as Connection259
                        connect PI.In Junction3 as Connection217
                        connect PI.Reset Junction4 as Connection220
                        connect PI.Out "Signal switch1.in" as Connection214
                        connect "Signal switch1.in2" Junction4 as Connection218
                        connect Sum1.in1 Junction5 as Connection252
                        connect Sum1.in Junction6 as Connection255
                        [
                            breakpoints = 7704, 8136
                        ]
                        connect V_diff.in Junction3 as Connection215
                        connect V_lim.out Junction7 as Connection258
                        connect V_match Comparator1.out as Connection187
                        connect Volt_diff.out Comparator1.in1 as Connection17
                        connect and.in1 great_equal.out as Connection262
                        connect dV "Signal switch1.out" as Connection181
                        connect great_equal.in pu1.out as Connection242
                        [
                            breakpoints = 7784, 8368
                        ]
                        connect great_equal1.out and.in as Connection261
                        connect great_equal1.in pu2.out as Connection245
                        [
                            breakpoints = 7880, 8232
                        ]
                        connect one.out Volt_diff.in as Connection14
                        connect pu.in Sum1.out as Connection198
                        connect pu1.in Junction6 as Connection257
                        connect pu2.in Junction5 as Connection254
                        connect zero.out "Signal switch1.in1" as Connection179
                    }
                    [
                        position = 8520, 8016
                        size = 144, 112
                    ]

                    component Subsystem check_phase_diff {
                        layout = dynamic
                        component gen_abs Abs2 {
                        }
                        [
                            position = 8064, 8112
                            rotation = right
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8384, 7968
                        ]

                        component src_constant One {
                            execution_rate = "Ts"
                        }
                        [
                            position = 8000, 8216
                        ]

                        component gen_probe phase_filter {
                        }
                        [
                            position = 8112, 8040
                        ]

                        component gen_comparator Comparator2 {
                        }
                        [
                            position = 8160, 8168
                            scale = 1, -1
                        ]

                        component gen_probe phase_diff {
                        }
                        [
                            position = 8040, 7904
                        ]

                        component gen_gain to_pu {
                            gain = "1.0/(2*np.pi)"
                        }
                        [
                            position = 8128, 7976
                        ]

                        component gen_gain Phase_diff {
                            gain = "delta_phi*np.pi/180.0"
                        }
                        [
                            position = 8088, 8216
                        ]

                        component gen_z_domain_transfer LPF {
                            a_coeff = "[1.0/(2*np.pi*0.5),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8032, 7976
                        ]

                        component gen_c_function confine_phase {
                            in_terminal_dimensions_str = "dtheta inherit;"
                            in_terminal_labels = "False;"
                            in_terminal_properties = "real dtheta;"
                            init_fnc = "/*Begin code section*/
dtheta = 0;
dtheta_confined = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "dtheta_confined inherit;"
                            out_terminal_labels = "False;"
                            out_terminal_properties = "real dtheta_confined;"
                            output_fnc = "/*Begin code section*/
if (dtheta > 3.14159265359) {//confine theta to +/- 2*pi;
    dtheta_confined = dtheta - 6.28318530718;
}
else{
    if (dtheta < -3.14159265359){
        dtheta_confined = dtheta + 6.28318530718;
    }
}
/*End code section*/"
                        }
                        [
                            position = 7920, 7976
                        ]

                        component Subsystem PI {
                            layout = dynamic
                            component gen_limiter Limit1 {
                                lower_limit = "phase_lowLim"
                                upper_limit = "phase_upLim"
                            }
                            [
                                position = 8408, 8224
                            ]

                            component gen_sum Sum6 {
                                signs = "-+"
                            }
                            [
                                position = 8320, 8312
                                scale = -1, 1
                            ]

                            component gen_gain Kb {
                            }
                            [
                                position = 8216, 8312
                                scale = -1, 1
                            ]

                            component gen_sum Sum5 {
                            }
                            [
                                position = 8320, 8224
                            ]

                            component gen_integrator Integrator1 {
                                limit_lower = "phase_lowLim"
                                limit_upper = "phase_upLim"
                                show_reset = "either"
                            }
                            [
                                position = 8216, 8232
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7968, 8136
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 7968, 8216
                            ]

                            component gen_sum Sum7 {
                            }
                            [
                                position = 8088, 8224
                            ]

                            component src_scada_input Ki {
                                def_value = "phase_Ki"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 7864, 8224
                            ]

                            component src_scada_input Kp {
                                def_value = "phase_Kp"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 7864, 8128
                            ]

                            port Reset {
                                label = "Reset"
                                position = top:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8144, 8264
                            ]

                            port In {
                                label = "In"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7824, 8184
                            ]

                            port Out {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8472, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 7904, 8184
                            ]

                            junction Junction2 sp
                            [
                                position = 8368, 8224
                            ]

                            junction Junction3 sp
                            [
                                position = 8440, 8224
                            ]

                            connect In Junction1 as Connection41
                            connect Integrator1.reset Reset as Connection2
                            connect Junction1 Product2.in as Connection40
                            connect Junction2 Limit1.in as Connection45
                            connect Junction3 Out as Connection48
                            connect Kb.in Sum6.out as Connection50
                            connect Ki.out Product2.in1 as Connection34
                            connect Kp.out Product1.in as Connection29
                            connect Limit1.out Junction3 as Connection47
                            connect Product1.in1 Junction1 as Connection39
                            connect Product1.out Sum5.in as Connection38
                            connect Sum5.in1 Integrator1.out as Connection5
                            connect Sum5.out Junction2 as Connection44
                            connect Sum6.in Junction2 as Connection46
                            connect Sum6.in1 Junction3 as Connection49
                            connect Sum7.out Integrator1.in as Connection52
                            connect Sum7.in1 Kb.out as Connection53
                            connect Sum7.in Product2.out as Connection51
                        }
                        [
                            position = 8240, 7976
                            size = 64, 48
                        ]

                        component Subsystem Counter {
                            layout = dynamic
                            component src_constant Constant3 {
                                execution_rate = "Ts"
                                value = ".1/Ts"
                            }
                            [
                                position = 8256, 8144
                            ]

                            component gen_logic_op not {
                                operator = "NOT"
                            }
                            [
                                position = 8104, 8248
                            ]

                            component gen_rel_op less_than {
                                relational_op = "<"
                            }
                            [
                                position = 8336, 8192
                            ]

                            component "core/Counter" Counter1 {
                            }
                            [
                                position = 8192, 8200
                                size = 48, 48
                            ]

                            port In {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8192
                            ]

                            port Out {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8400, 8192
                            ]

                            junction Junction14 sp
                            [
                                position = 8056, 8192
                            ]

                            connect Constant3.out less_than.in as Connection66
                            connect Counter1.en Junction14 as Connection559
                            connect Junction14 In as Connection562
                            connect Junction14 not.in as Connection560
                            connect less_than.in1 Counter1.out as Connection450
                            connect less_than.out Out as Connection561
                            connect not.out Counter1.reset as Connection88
                        }
                        [
                            position = 8256, 8168
                            size = 48, 48
                        ]

                        port phase_Grid {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 7976
                        ]

                        port phase_match {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 8168
                        ]

                        port Activate {
                            position = bottom:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8240, 7864
                            rotation = left
                            scale = 1, -1
                        ]

                        port dw_phase {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8504, 7968
                        ]

                        junction Junction15 sp
                        [
                            position = 8064, 7976
                        ]

                        junction Junction17 sp
                        [
                            position = 8064, 8040
                        ]

                        junction Junction21 sp
                        [
                            position = 8240, 7912
                        ]

                        junction Junction22 sp
                        [
                            position = 7992, 7976
                        ]

                        connect Abs2.in Junction17 as Connection590
                        connect Activate Junction21 as Connection622
                        connect Comparator2.in2 Abs2.out as Connection712
                        connect Comparator2.out Counter.In as Connection674
                        connect Junction15 LPF.out as Connection582
                        connect Junction17 Junction15 as Connection591
                        connect Junction21 PI.Reset as Connection693
                        connect Junction21 Product1.in as Connection623
                        connect Junction22 phase_diff.in as Connection719
                        connect LPF.in Junction22 as Connection718
                        connect One.out Phase_diff.in as Connection15
                        connect Phase_diff.out Comparator2.in1 as Connection49
                        connect Product1.in1 PI.Out as Connection692
                        connect confine_phase.dtheta_confined Junction22 as Connection720
                        connect confine_phase.dtheta phase_Grid as Connection721
                        connect dw_phase Product1.out as Connection714
                        connect phase_filter.in Junction17 as Connection592
                        connect phase_match Counter.Out as Connection673
                        connect to_pu.in Junction15 as Connection581
                        connect to_pu.out PI.In as Connection713
                    }
                    [
                        position = 8528, 8304
                        size = 168, 112
                    ]

                    component Subsystem Contactor_Control {
                        layout = dynamic
                        component gen_digital_probe GCB_cmd {
                        }
                        [
                            position = 7856, 8632
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 7672, 8592
                            hide_name = True
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 7752, 8608
                            hide_name = True
                        ]

                        component gen_c_function Breaker_State_machine {
                            in_terminal_dimensions_str = "Close_CB inherit;Open_CB inherit;Energized inherit;f_match inherit;phase_match inherit;V_match inherit;"
                            in_terminal_labels = "False;False;False;False;False;False;"
                            in_terminal_properties = "inherit Close_CB;inherit Open_CB;inherit Energized;inherit f_match;inherit phase_match;inherit V_match;"
                            init_fnc = "/*Begin code section*/
GCB = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "GCB inherit;"
                            out_terminal_labels = "False;"
                            out_terminal_properties = "real GCB;"
                            output_fnc = "/*Begin code section*/
if(Open_CB>0.0){
    GCB = 0;
}
else{
    if((Close_CB>0.0) && Energized){
        if(f_match && phase_match && V_match){
            GCB = 1;
        }
        else{
            GCB = 0;
        }
    }
    else{
        if((Close_CB>0.0) && (!Energized)){
            GCB = 1;
        }
        else{
            GCB = 0;
        }
    }
}
/*End code section*/"
                        }
                        [
                            position = 7576, 8504
                            rotation = right
                        ]

                        port phase_match {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7400, 8376
                        ]

                        port f_match {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7464, 8336
                        ]

                        port GCB {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7856, 8576
                        ]

                        port V_match {
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7464, 8400
                        ]

                        port "Close Breaker" {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7400, 8232
                        ]

                        port "Open Breaker" {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7272, 8272
                        ]

                        port Energized {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7400, 8312
                        ]

                        junction Junction32 sp
                        [
                            position = 7808, 8576
                        ]

                        junction Junction33 sp
                        [
                            position = 7320, 8272
                        ]

                        connect Breaker_State_machine.Close_CB "Close Breaker" as Connection558
                        connect Energized Breaker_State_machine.Energized as Connection560
                        connect GCB_cmd.in Junction32 as Connection528
                        connect Junction32 GCB as Connection529
                        connect Junction33 Breaker_State_machine.Open_CB as Connection566
                        connect "Open Breaker" Junction33 as Connection565
                        connect "SR Flip Flop1.s_in" Breaker_State_machine.GCB as Connection564
                        connect "SR Flip Flop1.out" Junction32 as Connection530
                        connect "SR Flip Flop1.r_in" Junction33 as Connection567
                        connect Termination12.in "SR Flip Flop1.out_n" as Connection55
                        connect V_match Breaker_State_machine.V_match as Connection563
                        connect f_match Breaker_State_machine.f_match as Connection561
                        connect phase_match Breaker_State_machine.phase_match as Connection562
                    }
                    [
                        position = 9440, 8360
                        size = 176, 272
                    ]

                    component Subsystem PLLs {
                        layout = dynamic
                        component gen_sum Sum1 {
                            signs = "+-"
                        }
                        [
                            position = 8720, 8136
                        ]

                        component gen_probe VABC {
                        }
                        [
                            position = 8304, 8096
                        ]

                        component gen_probe Vabc {
                        }
                        [
                            position = 8312, 8328
                        ]

                        component gen_probe wt_ABC {
                        }
                        [
                            position = 8720, 8064
                        ]

                        component gen_probe wt_abc {
                        }
                        [
                            position = 8720, 8200
                        ]

                        component Subsystem PLL_Grid {
                            layout = dynamic
                            component gen_z_domain_transfer LPF_Vt {
                                a_coeff = "[1.0/(2*np.pi*fc_vt),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8328, 8224
                            ]

                            component gen_terminator Term {
                            }
                            [
                                position = 8104, 8112
                                rotation = left
                            ]

                            component gen_z_domain_transfer LPF_f {
                                a_coeff = "[1.0/(2*np.pi*fc_f),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8216, 8248
                            ]

                            component gen_terminator Term1 {
                            }
                            [
                                position = 8128, 8152
                                rotation = left
                            ]

                            component Subsystem PLL {
                                layout = dynamic
                                component gen_terminator Term {
                                }
                                [
                                    position = 8008, 8200
                                    rotation = right
                                ]

                                component gen_c_function integrator {
                                    global_variables = "real out;"
                                    in_terminal_dimensions_str = "in inherit;Ts inherit;"
                                    in_terminal_labels = "False;False;"
                                    in_terminal_properties = "real in;inherit Ts;"
                                    init_fnc = "/*Begin code section*/
out = 0;
in = 0;
/*End code section*/"
                                    no_feed_inputs = "[u\'\']"
                                    no_feed_outputs = "[u\'\']"
                                    out_terminal_dimensions_str = "output inherit;"
                                    out_terminal_labels = "False;"
                                    out_terminal_properties = "inherit output;"
                                    output_fnc = "/*Begin code section*/
output = out+0.0;
/*End code section*/"
                                    update_fnc = "/*Begin code section*/
out += Ts*in;

if(in>=0.0){
    if(out >= 6.283185307179586)
    {
        out -= 6.283185307179586;
    }
}
else{
        if(out <= -6.283185307179586)
    {
        out += 6.283185307179586;
    }
}
/*End code section*/"
                                }
                                [
                                    position = 8424, 8144
                                ]

                                component gen_gain rads_to_Hz {
                                    gain = "1/(2*np.pi)"
                                }
                                [
                                    position = 8360, 8056
                                ]

                                component "core/abc to dq" ABC-dq {
                                }
                                [
                                    position = 7912, 8144
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8528, 8272
                                    rotation = right
                                ]

                                component src_constant Ts {
                                    execution_rate = "Ts"
                                    value = "Ts"
                                }
                                [
                                    position = 8336, 8200
                                ]

                                component Subsystem Normalize {
                                    layout = dynamic
                                    component gen_c_function V_terminal {
                                        in_terminal_dimensions_str = "d inherit;q inherit;"
                                        in_terminal_labels = "False;False;"
                                        in_terminal_properties = "real d;inherit q;"
                                        init_fnc = "/*Begin code section*/
d = 0;
q = 0;
t = 0;
/*End code section*/"
                                        no_feed_inputs = "[u\'\']"
                                        no_feed_outputs = "[u\'\']"
                                        out_terminal_dimensions_str = "t inherit;q_pu inherit;"
                                        out_terminal_labels = "False;False;"
                                        out_terminal_properties = "real t;inherit q_pu;"
                                        output_fnc = "/*Begin code section*/
t = (powf(d,2.0)+powf(q,2.0));
t = sqrt(t);
if(t<0.1){
    q_pu = q/0.1;
}
else{
    q_pu = q/t;
}
/*End code section*/"
                                    }
                                    [
                                        position = 8192, 8192
                                    ]

                                    port d {
                                        position = left:1
                                        kind = sp
                                        direction =  out
                                        sp_type {
                                            default = auto
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 8048, 8152
                                    ]

                                    port q {
                                        position = left:2
                                        kind = sp
                                        direction =  out
                                        sp_type {
                                            default = auto
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 8048, 8216
                                    ]

                                    port q_pu {
                                        position = right:1
                                        kind = sp
                                        direction =  in
                                        sp_type {
                                            default = inherit
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 8352, 8200
                                    ]

                                    port Vt {
                                        position = top:1
                                        kind = sp
                                        direction =  in
                                        sp_type {
                                            default = inherit
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 8280, 8104
                                        rotation = left
                                    ]

                                    connect V_terminal.t Vt as Connection8
                                    connect V_terminal.d d as Connection1
                                    connect V_terminal.q q as Connection3
                                    connect q_pu V_terminal.q_pu as Connection9
                                }
                                [
                                    position = 8128, 8136
                                    size = 64, 64
                                ]

                                component Subsystem PI {
                                    layout = dynamic
                                    component gen_integrator Integrator1 {
                                        init_value = "[2*np.pi*f]"
                                        limit_output = "True"
                                    }
                                    [
                                        position = 8176, 8208
                                    ]

                                    component gen_gain Ki {
                                        gain = "Ki"
                                    }
                                    [
                                        position = 8088, 8208
                                    ]

                                    component gen_gain Kp {
                                        gain = "Kp"
                                    }
                                    [
                                        position = 8088, 8144
                                    ]

                                    component gen_sum Sum8 {
                                    }
                                    [
                                        position = 8272, 8176
                                    ]

                                    port In {
                                        position = right:auto
                                        kind = sp
                                        direction =  out
                                        sp_type {
                                            default = auto
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 7976, 8176
                                        rotation = down
                                        scale = -1, 1
                                    ]

                                    port Out {
                                        position = left:auto
                                        kind = sp
                                        direction =  in
                                        sp_type {
                                            default = inherit
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 8360, 8176
                                        rotation = down
                                        scale = -1, 1
                                    ]

                                    junction Junction161 sp
                                    [
                                        position = 8040, 8176
                                    ]

                                    connect Integrator1.out Sum8.in1 as Connection352
                                    connect Junction161 In as Connection360
                                    connect Junction161 Ki.in as Connection359
                                    connect Junction161 Kp.in as Connection358
                                    connect Ki.out Integrator1.in as Connection351
                                    connect Kp.out Sum8.in as Connection350
                                    connect Sum8.out Out as Connection361
                                }
                                [
                                    position = 8256, 8136
                                    scale = -1, -1
                                    size = 48, 48
                                ]

                                port A {
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7736, 8152
                                    rotation = left
                                ]

                                port B {
                                    label = "B"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7776, 8176
                                    rotation = left
                                ]

                                port C {
                                    label = "C"
                                    position = left:3
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7816, 8200
                                    rotation = left
                                ]

                                port d {
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8056, 7944
                                ]

                                port q {
                                    label = "q"
                                    position = right:2
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8000
                                ]

                                port Vt {
                                    position = right:3
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8192, 8064
                                ]

                                port wt {
                                    position = right:5
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8528, 8096
                                ]

                                port f {
                                    position = right:4
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8424, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8024, 8144
                                ]

                                junction Junction2 sp
                                [
                                    position = 7960, 8120
                                ]

                                junction Junction3 sp
                                [
                                    position = 8320, 8136
                                ]

                                junction Junction4 sp
                                [
                                    position = 8480, 8144
                                ]

                                connect A ABC-dq.va as Connection32
                                connect ABC-dq.d_axis Junction2 as Connection181
                                connect B ABC-dq.vb as Connection31
                                connect C ABC-dq.vc as Connection29
                                connect Junction1 ABC-dq.q_axis as Connection179
                                connect Junction1 q as Connection192
                                connect Junction2 d as Connection191
                                connect Junction3 PI.Out as Connection210
                                connect Junction4 "Unit Delay1.in" as Connection213
                                connect Normalize.q Junction1 as Connection180
                                connect Normalize.d Junction2 as Connection183
                                connect Normalize.q_pu PI.In as Connection177
                                connect Term.in ABC-dq.zero_axis as Connection19
                                connect Ts.out integrator.Ts as Connection215
                                connect "Unit Delay1.out" ABC-dq.wt as Connection112
                                connect Vt Normalize.Vt as Connection184
                                connect f rads_to_Hz.out as Connection199
                                connect integrator.in Junction3 as Connection211
                                connect integrator.output Junction4 as Connection214
                                connect rads_to_Hz.in Junction3 as Connection209
                                connect wt Junction4 as Connection212

                                mask {
                                    description = "Simple PLL with wrapped wt"

                                    Kp {
                                        label = "Proportional gain"
                                        widget = edit
                                        type = generic
                                        default_value = "100"
                                    }

                                    Ki {
                                        label = "Integral gain"
                                        widget = edit
                                        type = generic
                                        default_value = "3200"
                                    }

                                    f {
                                        label = "Target frequency"
                                        widget = edit
                                        type = generic
                                        default_value = "60"
                                        unit = "Hz"
                                    }

                                    Ts {
                                        label = "Execution rate"
                                        widget = edit
                                        type = generic
                                        default_value = "Ts"
                                    }

                                    CODE open
                                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                    
                                        dialog = RegularComponentPropertiesDialog(
                                            component=component,
                                            property_container=component.masks[-1],
                                            current_diagram=current_diagram
                                        )
                                        dialog.exec_()
                                        
                                    ENDCODE
                                }
                            }
                            [
                                position = 8048, 8224
                                rotation = down
                                scale = -1, -1
                                size = 64, 136
                            ]

                            port f {
                                label = "f"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8280, 8248
                            ]

                            port wt {
                                label = "wt"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8152, 8272
                            ]

                            port Va {
                                label = "Va"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8176
                            ]

                            port Vb {
                                label = "Vb"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8224
                            ]

                            port Vc {
                                label = "Vc"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8272
                            ]

                            port Vt {
                                position = right:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8392, 8224
                            ]

                            connect LPF_Vt.in PLL.Vt as Connection12
                            connect LPF_f.in PLL.f as Connection10
                            connect PLL.A Va as Connection1
                            connect PLL.C Vc as Connection3
                            connect Term.in PLL.d as Connection7
                            connect Term1.in PLL.q as Connection8
                            connect Vb PLL.B as Connection2
                            connect Vt LPF_Vt.out as Connection11
                            connect f LPF_f.out as Connection9
                            connect wt PLL.wt as Connection6

                            fc_f = "10.0"
                            fc_vt = "10.0"

                            mask {
                                fc_vt {
                                    label = "Vt channel LPF cut-off freq."
                                    widget = edit
                                    type = generic
                                    default_value = "0"
                                }

                                fc_f {
                                    label = "f channel LPF cut-off freq."
                                    widget = edit
                                    type = generic
                                    default_value = "0"
                                }

                                CODE open
                                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                
                                    dialog = RegularComponentPropertiesDialog(
                                        component=component,
                                        property_container=component.masks[-1],
                                        current_diagram=current_diagram
                                    )
                                    dialog.exec_()
                                    
                                ENDCODE
                            }
                        }
                        [
                            position = 8184, 8024
                            size = 72, 120
                        ]

                        component Subsystem PLL_Gen {
                            layout = dynamic
                            component gen_terminator Term {
                            }
                            [
                                position = 8104, 8112
                                rotation = left
                            ]

                            component gen_z_domain_transfer LPF_f {
                                a_coeff = "[1.0/(2*np.pi*fc_f),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8216, 8248
                            ]

                            component gen_terminator Term1 {
                            }
                            [
                                position = 8128, 8152
                                rotation = left
                            ]

                            component gen_z_domain_transfer LPF_Vt {
                                a_coeff = "[1.0/(2*np.pi*fc_vt),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8328, 8224
                            ]

                            component Subsystem PLL {
                                layout = dynamic
                                component gen_terminator Term {
                                }
                                [
                                    position = 8008, 8200
                                    rotation = right
                                ]

                                component gen_c_function integrator {
                                    global_variables = "real out;"
                                    in_terminal_dimensions_str = "in inherit;Ts inherit;"
                                    in_terminal_labels = "False;False;"
                                    in_terminal_properties = "real in;inherit Ts;"
                                    init_fnc = "/*Begin code section*/
out = 0;
in = 0;
/*End code section*/"
                                    no_feed_inputs = "[u\'\']"
                                    no_feed_outputs = "[u\'\']"
                                    out_terminal_dimensions_str = "output inherit;"
                                    out_terminal_labels = "False;"
                                    out_terminal_properties = "inherit output;"
                                    output_fnc = "/*Begin code section*/
output = out+0.0;
/*End code section*/"
                                    update_fnc = "/*Begin code section*/
out += Ts*in;

if(in>=0.0){
    if(out >= 6.283185307179586)
    {
        out -= 6.283185307179586;
    }
}
else{
        if(out <= -6.283185307179586)
    {
        out += 6.283185307179586;
    }
}
/*End code section*/"
                                }
                                [
                                    position = 8424, 8144
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8528, 8272
                                    rotation = right
                                ]

                                component "core/abc to dq" ABC-dq {
                                }
                                [
                                    position = 7912, 8144
                                ]

                                component gen_gain rads_to_Hz {
                                    gain = "1/(2*np.pi)"
                                }
                                [
                                    position = 8360, 8056
                                ]

                                component src_constant Ts {
                                    execution_rate = "Ts"
                                    value = "Ts"
                                }
                                [
                                    position = 8336, 8200
                                ]

                                component Subsystem Normalize {
                                    layout = dynamic
                                    component gen_c_function V_terminal {
                                        in_terminal_dimensions_str = "d inherit;q inherit;"
                                        in_terminal_labels = "False;False;"
                                        in_terminal_properties = "real d;inherit q;"
                                        init_fnc = "/*Begin code section*/
d = 0;
q = 0;
t = 0;
/*End code section*/"
                                        no_feed_inputs = "[u\'\']"
                                        no_feed_outputs = "[u\'\']"
                                        out_terminal_dimensions_str = "t inherit;q_pu inherit;"
                                        out_terminal_labels = "False;False;"
                                        out_terminal_properties = "real t;inherit q_pu;"
                                        output_fnc = "/*Begin code section*/
t = (powf(d,2.0)+powf(q,2.0));
t = sqrt(t);
if(t<0.1){
    q_pu = q/0.1;
}
else{
    q_pu = q/t;
}
/*End code section*/"
                                    }
                                    [
                                        position = 8192, 8192
                                    ]

                                    port d {
                                        position = left:1
                                        kind = sp
                                        direction =  out
                                        sp_type {
                                            default = auto
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 8048, 8152
                                    ]

                                    port q {
                                        position = left:2
                                        kind = sp
                                        direction =  out
                                        sp_type {
                                            default = auto
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 8048, 8216
                                    ]

                                    port q_pu {
                                        position = right:1
                                        kind = sp
                                        direction =  in
                                        sp_type {
                                            default = inherit
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 8352, 8200
                                    ]

                                    port Vt {
                                        position = top:1
                                        kind = sp
                                        direction =  in
                                        sp_type {
                                            default = inherit
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 8280, 8104
                                        rotation = left
                                    ]

                                    connect V_terminal.t Vt as Connection8
                                    connect V_terminal.d d as Connection1
                                    connect V_terminal.q q as Connection3
                                    connect q_pu V_terminal.q_pu as Connection9
                                }
                                [
                                    position = 8128, 8136
                                    size = 64, 64
                                ]

                                component Subsystem PI {
                                    layout = dynamic
                                    component gen_sum Sum8 {
                                    }
                                    [
                                        position = 8272, 8176
                                    ]

                                    component gen_integrator Integrator1 {
                                        init_value = "[2*np.pi*f]"
                                        limit_output = "True"
                                    }
                                    [
                                        position = 8176, 8208
                                    ]

                                    component gen_gain Ki {
                                        gain = "Ki"
                                    }
                                    [
                                        position = 8088, 8208
                                    ]

                                    component gen_gain Kp {
                                        gain = "Kp"
                                    }
                                    [
                                        position = 8088, 8144
                                    ]

                                    port In {
                                        position = right:auto
                                        kind = sp
                                        direction =  out
                                        sp_type {
                                            default = auto
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 7976, 8176
                                        rotation = down
                                        scale = -1, 1
                                    ]

                                    port Out {
                                        position = left:auto
                                        kind = sp
                                        direction =  in
                                        sp_type {
                                            default = inherit
                                            readonly = True
                                        }
                                    }
                                    [
                                        position = 8360, 8176
                                        rotation = down
                                        scale = -1, 1
                                    ]

                                    junction Junction161 sp
                                    [
                                        position = 8040, 8176
                                    ]

                                    connect Integrator1.out Sum8.in1 as Connection352
                                    connect Junction161 In as Connection360
                                    connect Junction161 Ki.in as Connection359
                                    connect Junction161 Kp.in as Connection358
                                    connect Ki.out Integrator1.in as Connection351
                                    connect Kp.out Sum8.in as Connection350
                                    connect Sum8.out Out as Connection361
                                }
                                [
                                    position = 8256, 8136
                                    scale = -1, -1
                                    size = 48, 48
                                ]

                                port A {
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7736, 8152
                                    rotation = left
                                ]

                                port B {
                                    label = "B"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7776, 8176
                                    rotation = left
                                ]

                                port C {
                                    label = "C"
                                    position = left:3
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7816, 8200
                                    rotation = left
                                ]

                                port d {
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8056, 7944
                                ]

                                port q {
                                    label = "q"
                                    position = right:2
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8000
                                ]

                                port Vt {
                                    position = right:3
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8192, 8064
                                ]

                                port wt {
                                    position = right:5
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8528, 8096
                                ]

                                port f {
                                    position = right:4
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8424, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8024, 8144
                                ]

                                junction Junction2 sp
                                [
                                    position = 7960, 8120
                                ]

                                junction Junction3 sp
                                [
                                    position = 8480, 8144
                                ]

                                junction Junction4 sp
                                [
                                    position = 8320, 8136
                                ]

                                connect A ABC-dq.va as Connection32
                                connect ABC-dq.d_axis Junction2 as Connection181
                                connect B ABC-dq.vb as Connection31
                                connect C ABC-dq.vc as Connection29
                                connect Junction1 ABC-dq.q_axis as Connection179
                                connect Junction1 q as Connection192
                                connect Junction2 d as Connection191
                                connect Junction3 wt as Connection228
                                connect Junction4 PI.Out as Connection231
                                connect Normalize.q Junction1 as Connection180
                                connect Normalize.d Junction2 as Connection183
                                connect Normalize.q_pu PI.In as Connection177
                                connect Term.in ABC-dq.zero_axis as Connection19
                                connect Ts.out integrator.Ts as Connection215
                                connect "Unit Delay1.out" ABC-dq.wt as Connection112
                                connect "Unit Delay1.in" Junction3 as Connection227
                                connect Vt Normalize.Vt as Connection184
                                connect f rads_to_Hz.out as Connection199
                                connect integrator.output Junction3 as Connection229
                                connect integrator.in Junction4 as Connection232
                                connect rads_to_Hz.in Junction4 as Connection230

                                mask {
                                    description = "Simple PLL with wrapped wt"

                                    Kp {
                                        label = "Proportional gain"
                                        widget = edit
                                        type = generic
                                        default_value = "100"
                                    }

                                    Ki {
                                        label = "Integral gain"
                                        widget = edit
                                        type = generic
                                        default_value = "3200"
                                    }

                                    f {
                                        label = "Target frequency"
                                        widget = edit
                                        type = generic
                                        default_value = "60"
                                        unit = "Hz"
                                    }

                                    Ts {
                                        label = "Execution rate"
                                        widget = edit
                                        type = generic
                                        default_value = "Ts"
                                    }

                                    CODE open
                                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                    
                                        dialog = RegularComponentPropertiesDialog(
                                            component=component,
                                            property_container=component.masks[-1],
                                            current_diagram=current_diagram
                                        )
                                        dialog.exec_()
                                        
                                    ENDCODE
                                }
                            }
                            [
                                position = 8032, 8224
                                rotation = down
                                scale = -1, -1
                                size = 64, 136
                            ]

                            port f {
                                label = "f"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8280, 8248
                            ]

                            port wt {
                                label = "wt"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8152, 8272
                            ]

                            port Va {
                                label = "Va"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8176
                            ]

                            port Vb {
                                label = "Vb"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8224
                            ]

                            port Vc {
                                label = "Vc"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8272
                            ]

                            port Vt {
                                position = right:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8392, 8224
                            ]

                            connect PLL.Vt LPF_Vt.in as Connection19
                            connect PLL.f LPF_f.in as Connection18
                            connect PLL.q Term1.in as Connection20
                            connect PLL.wt wt as Connection17
                            connect Term.in PLL.d as Connection21
                            connect Va PLL.A as Connection14
                            connect Vb PLL.B as Connection15
                            connect Vc PLL.C as Connection16
                            connect Vt LPF_Vt.out as Connection11
                            connect f LPF_f.out as Connection9

                            fc_f = "10.0"
                            fc_vt = "10.0"

                            mask {
                                fc_vt {
                                    label = "Vt channel LPF cut-off freq."
                                    widget = edit
                                    type = generic
                                    default_value = "0"
                                }

                                fc_f {
                                    label = "f channel LPF cut-off freq."
                                    widget = edit
                                    type = generic
                                    default_value = "0"
                                }

                                CODE open
                                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                
                                    dialog = RegularComponentPropertiesDialog(
                                        component=component,
                                        property_container=component.masks[-1],
                                        current_diagram=current_diagram
                                    )
                                    dialog.exec_()
                                    
                                ENDCODE
                            }
                        }
                        [
                            position = 8184, 8248
                            size = 72, 120
                        ]

                        port "Phase diff" {
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8872, 8136
                        ]

                        port VBC {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8072, 8024
                        ]

                        port Vca {
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8064, 8288
                        ]

                        port Vab {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8064, 8208
                        ]

                        port VCA {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8032, 8064
                        ]

                        port VAB {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8032, 7984
                        ]

                        port Vbc {
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8032, 8248
                        ]

                        port f_ABC {
                            label = "f_Grid"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8424, 7984
                        ]

                        port V_ABC {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8424, 8064
                        ]

                        port f_abc {
                            label = "f_Gen"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8416, 8208
                        ]

                        port V_abc {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8416, 8288
                        ]

                        tag From2 {
                            value = "wt_ABC"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 8128
                            size = 0, 0
                        ]

                        tag Goto3 {
                            value = "wt_abc"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8328, 8248
                            size = 0, 0
                        ]

                        tag From3 {
                            value = "wt_abc"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8600, 8144
                            size = 0, 0
                        ]

                        tag Goto2 {
                            value = "wt_ABC"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8296, 8024
                            size = 0, 0
                        ]

                        junction Junction14 sp
                        [
                            position = 8656, 8144
                        ]

                        junction Junction15 sp
                        [
                            position = 8656, 8128
                        ]

                        junction Junction23 sp
                        [
                            position = 8264, 8064
                        ]

                        junction Junction24 sp
                        [
                            position = 8256, 8288
                        ]

                        connect From2 Junction15 as Connection270
                        connect From3 Junction14 as Connection267
                        connect Junction14 Sum1.in1 as Connection268
                        connect Junction15 Sum1.in as Connection271
                        connect Junction23 VABC.in as Connection329
                        connect Junction24 Vabc.in as Connection334
                        connect PLL_Gen.wt Goto3 as Connection323
                        connect PLL_Gen.Vt Junction24 as Connection333
                        connect PLL_Grid.wt Goto2 as Connection294
                        connect PLL_Grid.Vt Junction23 as Connection328
                        connect "Phase diff" Sum1.out as Connection336
                        connect VAB PLL_Grid.Va as Connection340
                        connect VBC PLL_Grid.Vb as Connection341
                        connect VCA PLL_Grid.Vc as Connection342
                        connect V_ABC Junction23 as Connection330
                        connect V_abc Junction24 as Connection335
                        connect Vab PLL_Gen.Va as Connection337
                        connect Vbc PLL_Gen.Vb as Connection338
                        connect Vca PLL_Gen.Vc as Connection339
                        connect f_ABC PLL_Grid.f as Connection327
                        connect f_abc PLL_Gen.f as Connection331
                        connect wt_ABC.in Junction15 as Connection272
                        connect wt_abc.in Junction14 as Connection269
                    }
                    [
                        position = 8304, 8120
                        size = 104, 352
                    ]

                    component Subsystem Calculate_dw_synch {
                        layout = dynamic
                        component src_constant zero {
                            execution_rate = "Ts"
                            value = "0"
                        }
                        [
                            position = 8256, 8128
                        ]

                        component gen_sum Sum4 {
                        }
                        [
                            position = 8096, 8096
                        ]

                        component gen_z_domain_transfer LPF_dw {
                            a_coeff = "[1.0/(2*np.pi*1),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8184, 8096
                        ]

                        component tm_delay "Unit Delay1" {
                        }
                        [
                            position = 8272, 8008
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8328, 8112
                            hide_name = True
                        ]

                        port dw_f {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7960, 8040
                        ]

                        port dw_phase {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7960, 8104
                        ]

                        port dw_synch {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8400, 8112
                        ]

                        port Activate {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8200, 8008
                        ]

                        connect LPF_dw.out "Signal switch1.in" as Connection241
                        connect Sum4.out LPF_dw.in as Connection240
                        connect Sum4.in1 dw_phase as Connection231
                        connect "Unit Delay1.in" Activate as Connection180
                        connect "Unit Delay1.out" "Signal switch1.in2" as Connection181
                        connect dw_f Sum4.in as Connection239
                        connect dw_synch "Signal switch1.out" as Connection177
                        connect zero.out "Signal switch1.in1" as Connection179
                    }
                    [
                        position = 8952, 8192
                        size = 128, 192
                    ]

                    port GCB {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9624, 8360
                    ]

                    port VAB {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8176, 7976
                    ]

                    port VBC {
                        position = top:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8176, 8032
                    ]

                    port VCA {
                        position = top:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8176, 8088
                    ]

                    port Vab {
                        position = top:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8176, 8144
                    ]

                    port Vbc {
                        position = top:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8176, 8200
                    ]

                    port Vca {
                        position = top:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8176, 8256
                    ]

                    port "Close Breaker" {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8184, 8552
                    ]

                    port "Open Breaker" {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8184, 8608
                    ]

                    port Outputs {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9464, 8112
                    ]

                    tag From39 {
                        value = "Energized"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9272, 8416
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto22 {
                        value = "f_match"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8680, 8192
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From48 {
                        value = "Activate"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8456, 7912
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From55 {
                        value = "Energized"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8696, 8840
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From47 {
                        value = "Activate"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8824, 8192
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto20 {
                        value = "GCB_status"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9624, 8304
                        size = 0, 0
                    ]

                    tag Goto32 {
                        value = "dV"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8664, 7984
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto33 {
                        value = "V_match"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8760, 8016
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From37 {
                        value = "f_match"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9272, 8376
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From41 {
                        value = "GCB_status"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9320, 7968
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From42 {
                        value = "dw_synch"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9320, 7888
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From33 {
                        value = "GCB_status"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8696, 8656
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From49 {
                        value = "dV"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9320, 7928
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From50 {
                        value = "V_match"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9272, 8456
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto36 {
                        value = "Energized"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8664, 8048
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto28 {
                        value = "dw_synch"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9120, 8192
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto31 {
                        value = "Activate"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8960, 8536
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From53 {
                        value = "Activate"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8368, 8472
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From30 {
                        value = "f_match"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8368, 8432
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto37 {
                        value = "Close_CB"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8280, 8552
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto38 {
                        value = "Open_CB"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8280, 8608
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From56 {
                        value = "Close_CB"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8696, 8728
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From57 {
                        value = "Open_CB"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8696, 8776
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From58 {
                        value = "Close_CB"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9272, 8256
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From59 {
                        value = "Open_CB"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9272, 8296
                        hide_name = True
                        size = 0, 0
                    ]

                    junction Junction26 sp
                    [
                        position = 9552, 8360
                    ]

                    junction Junction32 sp
                    [
                        position = 9048, 8192
                    ]

                    junction Junction34 sp
                    [
                        position = 8752, 8120
                    ]

                    junction Junction35 sp
                    [
                        position = 8616, 8192
                    ]

                    junction Junction39 sp
                    [
                        position = 8896, 8536
                    ]

                    junction Junction40 sp
                    [
                        position = 8704, 8016
                    ]

                    junction Junction41 sp
                    [
                        position = 8608, 7984
                    ]

                    junction Junction44 sp
                    [
                        position = 8744, 8264
                    ]

                    junction Junction45 sp
                    [
                        position = 8720, 8336
                    ]

                    junction Junction46 sp
                    [
                        position = 8528, 8440
                    ]

                    connect Check_phase_ON.in Junction46 as Connection622
                    connect Contactor_Control.phase_match Junction45 as Connection618
                    connect From37 Contactor_Control.f_match as Connection270
                    connect From39 Contactor_Control.Energized as Connection271
                    connect From41 "Bus Join.in2" as Connection644
                    connect From42 "Bus Join.in" as Connection527
                    connect From47 Calculate_dw_synch.Activate as Connection556
                    connect From48 check_V_diff.Activate as Connection586
                    connect From49 "Bus Join.in1" as Connection643
                    connect From50 Contactor_Control.V_match as Connection574
                    connect From53 and1.in1 as Connection585
                    connect From56 and2.in1 as Connection639
                    connect From57 not1.in as Connection640
                    connect From58 "Contactor_Control.Close Breaker" as Connection641
                    connect From59 "Contactor_Control.Open Breaker" as Connection642
                    connect GCB Junction26 as Connection141
                    connect Goto20 Junction26 as Connection143
                    connect Goto28 Junction32 as Connection250
                    connect Goto31 Junction39 as Connection561
                    connect Goto32 Junction41 as Connection575
                    connect Goto33 Junction40 as Connection571
                    connect Goto36 check_V_diff.Energized as Connection608
                    connect Goto37 "Close Breaker" as Connection637
                    connect Goto38 "Open Breaker" as Connection638
                    connect Junction26 Contactor_Control.GCB as Connection204
                    connect Junction32 Calculate_dw_synch.dw_synch as Connection249
                    connect Junction34 Calculate_dw_synch.dw_f as Connection280
                    connect Junction35 Goto22 as Connection283
                    connect Junction39 and2.out as Connection562
                    connect Junction40 check_V_diff.V_match as Connection572
                    connect Junction41 check_V_diff.dV as Connection576
                    connect Junction44 Calculate_dw_synch.dw_phase as Connection616
                    connect Junction45 Phase_match.in as Connection619
                    connect Junction46 and1.out as Connection623
                    connect Outputs "Bus Join.out" as Connection259
                    connect VAB PLLs.VAB as Connection625
                    connect VBC PLLs.VBC as Connection626
                    connect VCA PLLs.VCA as Connection627
                    connect V_match.in Junction40 as Connection573
                    connect Vab PLLs.Vab as Connection630
                    connect Vbc PLLs.Vbc as Connection628
                    connect Vca PLLs.Vca as Connection629
                    connect and1.in From30 as Connection273
                    connect and2.in3 From55 as Connection632
                    connect and2.in not.out as Connection552
                    connect check_V_diff.V_ABC PLLs.V_ABC as Connection566
                    connect check_V_diff.V_abc PLLs.V_abc as Connection565
                    connect check_f_diff.dw_f Junction34 as Connection281
                    connect check_f_diff.f_match Junction35 as Connection284
                    connect check_f_diff.f_Grid PLLs.f_ABC as Connection278
                    connect check_f_diff.f_Gen PLLs.f_abc as Connection277
                    connect check_phase_diff.dw_phase Junction44 as Connection617
                    connect check_phase_diff.phase_match Junction45 as Connection620
                    connect check_phase_diff.Activate Junction46 as Connection624
                    connect check_phase_diff.phase_Grid "PLLs.Phase diff" as Connection621
                    connect dV.in Junction41 as Connection577
                    connect dw_f.in Junction34 as Connection279
                    connect dw_phase.in Junction44 as Connection615
                    connect dw_synch.in Junction32 as Connection248
                    connect f_match.in Junction35 as Connection282
                    connect not.in From33 as Connection551
                    connect not1.out and2.in2 as Connection634
                    connect synch_check_ON.in Junction39 as Connection563
                }
                [
                    position = 8128, 8568
                    rotation = down
                    scale = -1, 1
                    size = 328, 152
                ]

                port Vab {
                    position = bottom:4
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8152, 8720
                    rotation = left
                ]

                port Vbc {
                    position = bottom:5
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8208, 8720
                    rotation = left
                ]

                port Vca {
                    position = bottom:6
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8264, 8720
                    rotation = left
                ]

                port VAB {
                    position = bottom:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7984, 8720
                    rotation = left
                ]

                port VBC {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8040, 8720
                    rotation = left
                ]

                port VCA {
                    position = bottom:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8096, 8720
                    rotation = left
                ]

                port "Close Breaker" {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7720, 8512
                ]

                port "Open Breaker" {
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7720, 8624
                ]

                port "Breaker Closed" {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8368, 8624
                ]

                port Outputs {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8368, 8512
                ]

                junction Junction1 sp
                [
                    position = 7784, 8624
                ]

                connect Junction1 "SR Flip Flop4.r_in" as Connection1043
                [
                    breakpoints = 7784, 8624
                ]
                connect "Open Breaker" Junction1 as Connection1042
                connect Outputs Sync_Check.Outputs as Connection1048
                connect "SR Flip Flop4.s_in" "Close Breaker" as Connection1011
                connect "SR Flip Flop4.out" "Sync_Check.Close Breaker" as Connection1041
                connect Sync_Check.GCB "Breaker Closed" as Connection1049
                connect "Sync_Check.Open Breaker" Junction1 as Connection1044
                connect Sync_Check.VAB VAB as Connection1035
                connect Sync_Check.VBC VBC as Connection1036
                connect Sync_Check.VCA VCA as Connection1037
                connect Sync_Check.Vab Vab as Connection1038
                connect Sync_Check.Vbc Vbc as Connection1039
                connect Sync_Check.Vca Vca as Connection1040
                connect Termination4.in "SR Flip Flop4.out_n" as Connection1010
            }
            [
                position = 7552, 8224
                size = 184, 176
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8336, 8544
                rotation = down
            ]

            port A {
                position = left:3
                kind = pe
            }
            [
                position = 7184, 8544
            ]

            port B {
                position = left:5
                kind = pe
            }
            [
                position = 7184, 8640
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8336, 8640
                rotation = down
            ]

            port C {
                position = left:6
                kind = pe
            }
            [
                position = 7184, 8736
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8336, 8736
                rotation = down
            ]

            port Inputs {
                position = top:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7280, 8216
            ]

            port Outputs {
                position = top:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 7728, 8152
            ]

            tag Goto9 {
                value = "VAB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7384, 8592
                hide_name = True
            ]

            tag Goto10 {
                value = "VBC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7384, 8688
                hide_name = True
            ]

            tag Goto11 {
                value = "VCA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7560, 8688
                hide_name = True
            ]

            tag Goto12 {
                value = "Vab"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8064, 8592
                hide_name = True
            ]

            tag Goto13 {
                value = "Vbc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8064, 8696
                hide_name = True
            ]

            tag Goto14 {
                value = "Vca"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8256, 8696
                hide_name = True
            ]

            tag From4 {
                value = "VAB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7488, 8384
                rotation = left
                hide_name = True
            ]

            tag From5 {
                value = "VBC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7512, 8448
                rotation = left
                hide_name = True
            ]

            tag From6 {
                value = "VCA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7536, 8384
                rotation = left
                hide_name = True
            ]

            tag From7 {
                value = "Vab"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7560, 8448
                rotation = left
                hide_name = True
            ]

            tag From8 {
                value = "Vbc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7584, 8384
                rotation = left
                hide_name = True
            ]

            tag From9 {
                value = "Vca"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7608, 8448
                rotation = left
                hide_name = True
            ]

            junction Junction30 sp
            [
                position = 7672, 8152
            ]

            junction Junction38 pe
            [
                position = 7304, 8640
            ]

            junction Junction39 pe
            [
                position = 7480, 8736
            ]

            junction Junction41 pe
            [
                position = 7984, 8544
            ]

            junction Junction43 pe
            [
                position = 7984, 8640
            ]

            junction Junction44 pe
            [
                position = 7984, 8736
            ]

            junction Junction45 pe
            [
                position = 7480, 8544
            ]

            junction Junction50 pe
            [
                position = 7912, 8544
            ]

            junction Junction51 pe
            [
                position = 7912, 8640
            ]

            junction Junction52 pe
            [
                position = 8168, 8544
            ]

            junction Junction53 pe
            [
                position = 7984, 8640
            ]

            junction Junction54 pe
            [
                position = 8168, 8736
            ]

            junction Junction55 pe
            [
                position = 7304, 8544
            ]

            junction Junction56 pe
            [
                position = 7304, 8640
            ]

            junction Junction57 pe
            [
                position = 7304, 8736
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Inputs: <br />1 - Close Breaker command</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">2 - Open Breaker command</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Outputs:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">1 - speed bias - sync check</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">2 - voltage bias - sync check</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">3 - Breaker status</p></body></html> ENDCOMMENT 
            [
                position = 7160, 8296
            ]

            connect A Junction55 as Connection905
            connect B Junction56 as Connection908
            connect "Breaker Interface.Breaker Closed" "Main CB.ctrl_in" as Connection827
            connect "Bus Split1.out" "Breaker Interface.Close Breaker" as Connection825
            connect "Bus Split1.out1" "Breaker Interface.Open Breaker" as Connection826
            connect C Junction57 as Connection911
            connect From4 "Breaker Interface.VAB" as Connection818
            connect From5 "Breaker Interface.VBC" as Connection819
            connect From6 "Breaker Interface.VCA" as Connection820
            connect From7 "Breaker Interface.Vab" as Connection821
            connect From8 "Breaker Interface.Vbc" as Connection822
            connect From9 "Breaker Interface.Vca" as Connection823
            connect Goto10 VBC.out as Connection813
            connect Goto11 VCA.out as Connection814
            connect Goto12 Vab.out as Connection815
            connect Goto13 Vbc.out as Connection816
            connect Goto14 Vca.out as Connection817
            connect Goto9 VAB.out as Connection812
            connect Ia.n_node "Main CB.a_in" as Connection807
            connect Ib.n_node "Main CB.b_in" as Connection809
            connect Ic.n_node "Main CB.c_in" as Connection811
            connect Inputs "Bus Split1.in" as Connection824
            connect Irms1.n_node Ia.p_node as Connection806
            connect Junction30 "Breaker Interface.Outputs" as Connection722
            connect Junction38 Ib.p_node as Connection808
            connect Junction39 Ic.p_node as Connection810
            connect Junction41 Junction52 as Connection849
            [
                breakpoints = 7984, 8544
            ]
            connect Junction45 Irms1.p_node as Connection805
            connect Junction45 Junction55 as Connection903
            [
                breakpoints = 7480, 8544
            ]
            connect Junction50 Junction41 as Connection800
            connect Junction51 Junction53 as Connection852
            [
                breakpoints = 7912, 8640
            ]
            connect Junction52 Vca.n_node as Connection850
            [
                breakpoints = 8168, 8544
            ]
            connect Junction53 Junction43 as Connection853
            [
                breakpoints = 7984, 8640
            ]
            connect Junction54 Junction44 as Connection856
            [
                breakpoints = 8168, 8736
            ]
            connect Junction55 VAB.p_node as Connection904
            [
                breakpoints = 7304, 8544
            ]
            connect Junction56 Junction38 as Connection907
            [
                breakpoints = 7304, 8640
            ]
            connect Junction57 Junction39 as Connection910
            [
                breakpoints = 7304, 8736; 7304, 8736; 7480, 8736
            ]
            connect "Main CB.c_out" Junction44 as Connection778
            connect "Main CB.a_out" Junction50 as Connection799
            connect "Main CB.b_out" Junction51 as Connection802
            connect Outputs Junction30 as Connection723
            connect VAB.n_node Junction56 as Connection906
            connect VBC.p_node Junction38 as Connection759
            connect VBC.n_node Junction57 as Connection909
            connect VCA.p_node Junction39 as Connection762
            connect VCA.n_node Junction45 as Connection784
            connect Vab.p_node Junction41 as Connection769
            connect Vab.n_node Junction43 as Connection775
            connect Vbc.p_node Junction43 as Connection777
            connect Vbc.n_node Junction44 as Connection780
            connect Vca.p_node Junction54 as Connection855
            connect Vrms2.p_node Junction50 as Connection801
            connect Vrms2.n_node Junction51 as Connection804
            connect a Junction52 as Connection851
            connect b Junction53 as Connection854
            connect c Junction54 as Connection857
            connect "dw_sync Probe.in" Junction30 as Connection721

            mask {
                icon = "image(\'Figures/Bus_Breaker.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A Bus Breaker</p></body></html>"

                Vn {
                    label = "Nominal Voltage"
                    widget = edit
                    type = generic
                    default_value = "440.0"
                    unit = "V  (line to line)"
                    group = "General"
                }

                f {
                    label = "Nominal frequency"
                    widget = edit
                    type = generic
                    default_value = "60.0"
                    unit = "Hz"
                    group = "General"
                }

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    group = "General"
                }

                delta_f {
                    label = "Accepted frequency difference"
                    widget = edit
                    type = generic
                    default_value = "0.5"
                    unit = "%"
                    group = "Freq. Match"
                }

                f_Kp {
                    label = "PI - Kp"
                    widget = edit
                    type = generic
                    default_value = "1.0"
                    group = "Freq. Match"
                }

                f_Ki {
                    label = "PI - Ki"
                    widget = edit
                    type = generic
                    default_value = "0.0"
                    group = "Freq. Match"
                }

                f_upLim {
                    label = "PI - Upper limit"
                    widget = edit
                    type = generic
                    default_value = "1.0"
                    group = "Freq. Match"
                }

                f_lowLim {
                    label = "PI - Lower limit"
                    widget = edit
                    type = generic
                    default_value = "-1.0"
                    group = "Freq. Match"
                }

                delta_phi {
                    label = "Accepted phase difference"
                    widget = edit
                    type = generic
                    default_value = "1.0"
                    unit = "°"
                    group = "Phase Synch"
                }

                phase_Kp {
                    label = "PI - Kp"
                    widget = edit
                    type = generic
                    default_value = "0.01"
                    group = "Phase Synch"
                }

                phase_Ki {
                    label = "PI - Ki"
                    widget = edit
                    type = generic
                    default_value = "0.00012"
                    group = "Phase Synch"
                }

                phase_upLim {
                    label = "PI - Upper limit"
                    widget = edit
                    type = generic
                    default_value = "0.1"
                    group = "Phase Synch"
                }

                phase_lowLim {
                    label = "PI - Lower limit"
                    widget = edit
                    type = generic
                    default_value = "-0.1"
                    group = "Phase Synch"
                }

                delta_V {
                    label = "Accepted voltage difference"
                    widget = edit
                    type = generic
                    default_value = "1.0"
                    unit = "%"
                    group = "Voltage Match"
                }

                V_Kp {
                    label = "PI - Kp"
                    widget = edit
                    type = generic
                    default_value = "0.0071"
                    group = "Voltage Match"
                }

                V_Ki {
                    label = "PI - Ki"
                    widget = edit
                    type = generic
                    default_value = "0.0354"
                    group = "Voltage Match"
                }

                V_upLim {
                    label = "PI - Upper limit"
                    widget = edit
                    type = generic
                    default_value = "1.0"
                    group = "Voltage Match"
                }

                V_lowLim {
                    label = "PI - Lower limit"
                    widget = edit
                    type = generic
                    default_value = "-1.0"
                    group = "Voltage Match"
                }

                CODE define_icon
                    image('images/Bus_Breaker.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 7320, 6504
            size = 158, 80
        ]

        component Subsystem "Transformer Breaker 2" {
            layout = dynamic
            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 8104, 8536
                rotation = down
                scale = 1, -1
                size = 64, 256
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7904, 8440
                size = 64, 32
            ]

            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7912, 8232
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7808, 8224
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8008, 8248
                    hide_name = True
                ]

                port "Open or Close" {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8216
                ]

                port Inputs {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8224
                ]

                connect "Bus Split1.out1" "SR Flip Flop2.r_in" as Connection892
                connect "Bus Split1.out" "SR Flip Flop2.s_in" as Connection891
                connect Inputs "Bus Split1.in" as Connection824
                connect "Open or Close" "SR Flip Flop2.out" as Connection890
                connect Termination2.in "SR Flip Flop2.out_n" as Connection872
            }
            [
                position = 8104, 8256
                rotation = left
                scale = -1, 1
                size = 144, 128
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7760, 8440
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7760, 8536
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7760, 8632
            ]

            port A2 {
                position = right:3
                kind = pe
            }
            [
                position = 8352, 8440
                rotation = down
            ]

            port B2 {
                position = right:5
                kind = pe
            }
            [
                position = 8352, 8536
                rotation = down
            ]

            port C2 {
                position = right:6
                kind = pe
            }
            [
                position = 8352, 8632
                rotation = down
            ]

            port Inputs {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7984, 8256
            ]

            connect A1 Irms_a.p_node as Connection720
            connect A2 S2.a_in as Connection715
            connect "Breaker Interface.Open or Close" S2.ctrl_in as Connection723
            connect C1 S2.c_out as Connection719
            connect Inputs "Breaker Interface.Inputs" as Connection722
            connect Irms_a.n_node S2.a_out as Connection721
            connect S2.b_out B1 as Connection718
            connect S2.b_in B2 as Connection716
            connect S2.c_in C2 as Connection714

            mask {
                icon = "image(\'Figures/Genereator_Isolator.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Isolator</p></body></html>"

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Bus_Breaker.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 8344, 7432
            size = 143, 77
        ]

        component Subsystem "EMS-MS 440V Breaker" {
            layout = dynamic
            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 8104, 8536
                rotation = down
                scale = 1, -1
                size = 64, 256
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7904, 8440
                size = 64, 32
            ]

            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_terminator Termination2 {
                }
                [
                    position = 8008, 8248
                    hide_name = True
                ]

                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7912, 8232
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7808, 8224
                    hide_name = True
                ]

                port "Open or Close" {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8216
                ]

                port Inputs {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8224
                ]

                connect "Bus Split1.out1" "SR Flip Flop2.r_in" as Connection892
                connect "Bus Split1.out" "SR Flip Flop2.s_in" as Connection891
                connect Inputs "Bus Split1.in" as Connection824
                connect "Open or Close" "SR Flip Flop2.out" as Connection890
                connect Termination2.in "SR Flip Flop2.out_n" as Connection872
            }
            [
                position = 8104, 8256
                rotation = left
                scale = -1, 1
                size = 144, 128
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7760, 8440
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7760, 8536
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7760, 8632
            ]

            port A2 {
                position = right:3
                kind = pe
            }
            [
                position = 8352, 8440
                rotation = down
            ]

            port B2 {
                position = right:5
                kind = pe
            }
            [
                position = 8352, 8536
                rotation = down
            ]

            port C2 {
                position = right:6
                kind = pe
            }
            [
                position = 8352, 8632
                rotation = down
            ]

            port Inputs {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7984, 8256
            ]

            connect A1 Irms_a.p_node as Connection720
            connect A2 S2.a_in as Connection715
            connect "Breaker Interface.Open or Close" S2.ctrl_in as Connection723
            connect C1 S2.c_out as Connection719
            connect Inputs "Breaker Interface.Inputs" as Connection722
            connect Irms_a.n_node S2.a_out as Connection721
            connect S2.b_out B1 as Connection718
            connect S2.b_in B2 as Connection716
            connect S2.c_in C2 as Connection714

            mask {
                icon = "image(\'Figures/Genereator_Isolator.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Isolator</p></body></html>"

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Bus_Breaker.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 5656, 7504
            rotation = right
            size = 135, 77
        ]

        component Subsystem "Transformer Breaker 3" {
            layout = dynamic
            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7808, 8224
                    hide_name = True
                ]

                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7912, 8232
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8008, 8248
                    hide_name = True
                ]

                port "Open or Close" {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8216
                ]

                port Inputs {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8224
                ]

                connect "Bus Split1.out1" "SR Flip Flop2.r_in" as Connection892
                connect "Bus Split1.out" "SR Flip Flop2.s_in" as Connection891
                connect Inputs "Bus Split1.in" as Connection824
                connect "Open or Close" "SR Flip Flop2.out" as Connection890
                connect Termination2.in "SR Flip Flop2.out_n" as Connection872
            }
            [
                position = 8104, 8256
                rotation = left
                scale = -1, 1
                size = 144, 128
            ]

            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 8104, 8536
                rotation = down
                scale = 1, -1
                size = 64, 256
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7904, 8440
                size = 64, 32
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7760, 8440
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7760, 8536
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7760, 8632
            ]

            port A2 {
                position = right:3
                kind = pe
            }
            [
                position = 8352, 8440
                rotation = down
            ]

            port B2 {
                position = right:5
                kind = pe
            }
            [
                position = 8352, 8536
                rotation = down
            ]

            port C2 {
                position = right:6
                kind = pe
            }
            [
                position = 8352, 8632
                rotation = down
            ]

            port Inputs {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7984, 8256
            ]

            connect A1 Irms_a.p_node as Connection720
            connect A2 S2.a_in as Connection715
            connect "Breaker Interface.Open or Close" S2.ctrl_in as Connection723
            connect C1 S2.c_out as Connection719
            connect Inputs "Breaker Interface.Inputs" as Connection722
            connect Irms_a.n_node S2.a_out as Connection721
            connect S2.b_out B1 as Connection718
            connect S2.b_in B2 as Connection716
            connect S2.c_in C2 as Connection714

            mask {
                icon = "image(\'Figures/Genereator_Isolator.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Isolator</p></body></html>"

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Bus_Breaker.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 8176, 8680
            size = 143, 77
        ]

        component Subsystem "MS 230V Breaker" {
            layout = dynamic
            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_terminator Termination2 {
                }
                [
                    position = 8008, 8248
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7808, 8224
                    hide_name = True
                ]

                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7912, 8232
                    hide_name = True
                ]

                port "Open or Close" {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8216
                ]

                port Inputs {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8224
                ]

                connect "Bus Split1.out1" "SR Flip Flop2.r_in" as Connection892
                connect "Bus Split1.out" "SR Flip Flop2.s_in" as Connection891
                connect Inputs "Bus Split1.in" as Connection824
                connect "Open or Close" "SR Flip Flop2.out" as Connection890
                connect Termination2.in "SR Flip Flop2.out_n" as Connection872
            }
            [
                position = 8104, 8256
                rotation = left
                scale = -1, 1
                size = 144, 128
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7904, 8440
                size = 64, 32
            ]

            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 8104, 8536
                rotation = down
                scale = 1, -1
                size = 64, 256
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7760, 8440
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7760, 8536
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7760, 8632
            ]

            port A2 {
                position = right:3
                kind = pe
            }
            [
                position = 8352, 8440
                rotation = down
            ]

            port B2 {
                position = right:5
                kind = pe
            }
            [
                position = 8352, 8536
                rotation = down
            ]

            port C2 {
                position = right:6
                kind = pe
            }
            [
                position = 8352, 8632
                rotation = down
            ]

            port Inputs {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7984, 8256
            ]

            connect A1 Irms_a.p_node as Connection720
            connect A2 S2.a_in as Connection715
            connect "Breaker Interface.Open or Close" S2.ctrl_in as Connection723
            connect C1 S2.c_out as Connection719
            connect Inputs "Breaker Interface.Inputs" as Connection722
            connect Irms_a.n_node S2.a_out as Connection721
            connect S2.b_out B1 as Connection718
            connect S2.b_in B2 as Connection716
            connect S2.c_in C2 as Connection714

            mask {
                icon = "image(\'Figures/Genereator_Isolator.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Isolator</p></body></html>"

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Bus_Breaker.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 9360, 7672
            size = 143, 77
        ]

        component Subsystem "EMS-MS 230V Breaker" {
            layout = dynamic
            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7808, 8224
                    hide_name = True
                ]

                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7912, 8232
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8008, 8248
                    hide_name = True
                ]

                port "Open or Close" {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8216
                ]

                port Inputs {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8224
                ]

                connect "Bus Split1.out1" "SR Flip Flop2.r_in" as Connection892
                connect "Bus Split1.out" "SR Flip Flop2.s_in" as Connection891
                connect Inputs "Bus Split1.in" as Connection824
                connect "Open or Close" "SR Flip Flop2.out" as Connection890
                connect Termination2.in "SR Flip Flop2.out_n" as Connection872
            }
            [
                position = 8104, 8256
                rotation = left
                scale = -1, 1
                size = 144, 128
            ]

            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 8104, 8536
                rotation = down
                scale = 1, -1
                size = 64, 256
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7904, 8440
                size = 64, 32
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7760, 8440
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7760, 8536
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7760, 8632
            ]

            port A2 {
                position = right:3
                kind = pe
            }
            [
                position = 8352, 8440
                rotation = down
            ]

            port B2 {
                position = right:5
                kind = pe
            }
            [
                position = 8352, 8536
                rotation = down
            ]

            port C2 {
                position = right:6
                kind = pe
            }
            [
                position = 8352, 8632
                rotation = down
            ]

            port Inputs {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7984, 8256
            ]

            connect A1 Irms_a.p_node as Connection720
            connect A2 S2.a_in as Connection715
            connect "Breaker Interface.Open or Close" S2.ctrl_in as Connection723
            connect C1 S2.c_out as Connection719
            connect Inputs "Breaker Interface.Inputs" as Connection722
            connect Irms_a.n_node S2.a_out as Connection721
            connect S2.b_out B1 as Connection718
            connect S2.b_in B2 as Connection716
            connect S2.c_in C2 as Connection714

            mask {
                icon = "image(\'Figures/Genereator_Isolator.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Isolator</p></body></html>"

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('Figures/Bus_Breaker.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 9776, 8072
            rotation = right
            size = 143, 77
        ]

        component Subsystem "Transformer Breaker 1" {
            layout = dynamic
            component "core/Current RMS" Irms_a {
            }
            [
                position = 7904, 8440
                size = 64, 32
            ]

            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 8104, 8536
                rotation = down
                scale = 1, -1
                size = 64, 256
            ]

            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7808, 8224
                    hide_name = True
                ]

                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7912, 8232
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8008, 8248
                    hide_name = True
                ]

                port "Open or Close" {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8216
                ]

                port Inputs {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8224
                ]

                connect "Bus Split1.out1" "SR Flip Flop2.r_in" as Connection892
                connect "Bus Split1.out" "SR Flip Flop2.s_in" as Connection891
                connect Inputs "Bus Split1.in" as Connection824
                connect "Open or Close" "SR Flip Flop2.out" as Connection890
                connect Termination2.in "SR Flip Flop2.out_n" as Connection872
            }
            [
                position = 8104, 8256
                rotation = left
                scale = -1, 1
                size = 144, 128
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7760, 8440
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7760, 8536
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7760, 8632
            ]

            port A2 {
                position = right:3
                kind = pe
            }
            [
                position = 8352, 8440
                rotation = down
            ]

            port B2 {
                position = right:5
                kind = pe
            }
            [
                position = 8352, 8536
                rotation = down
            ]

            port C2 {
                position = right:6
                kind = pe
            }
            [
                position = 8352, 8632
                rotation = down
            ]

            port Inputs {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7984, 8256
            ]

            connect A1 Irms_a.p_node as Connection720
            connect A2 S2.a_in as Connection715
            connect "Breaker Interface.Open or Close" S2.ctrl_in as Connection723
            connect C1 S2.c_out as Connection719
            connect Inputs "Breaker Interface.Inputs" as Connection722
            connect Irms_a.n_node S2.a_out as Connection721
            connect S2.b_out B1 as Connection718
            connect S2.b_in B2 as Connection716
            connect S2.c_in C2 as Connection714

            mask {
                icon = "image(\'Figures/Genereator_Isolator.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Isolator</p></body></html>"

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Bus_Breaker.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 8944, 7032
            size = 143, 77
        ]

        component Subsystem "Fans Breaker" {
            layout = dynamic
            component "core/Current Measurement" Ia {
                execution_rate = "Ts"
            }
            [
                position = 7856, 8440
                rotation = down
                scale = -1, -1
                size = 64, 32
            ]

            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 8104, 8536
                rotation = down
                scale = 1, -1
                size = 64, 256
            ]

            component "core/Current Measurement" Ib {
                execution_rate = "Ts"
            }
            [
                position = 7856, 8536
                rotation = down
                scale = -1, -1
                size = 64, 32
            ]

            component "core/Current Measurement" Ic {
                execution_rate = "Ts"
            }
            [
                position = 7856, 8632
                rotation = down
                scale = -1, -1
                size = 64, 32
            ]

            component "core/Voltage RMS" Vrms1 {
            }
            [
                position = 8200, 8488
                rotation = left
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Voltage RMS" Vrms2 {
            }
            [
                position = 7952, 8488
                rotation = left
                scale = 1, -1
                size = 64, 32
            ]

            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7912, 8232
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8008, 8248
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7808, 8224
                    hide_name = True
                ]

                port "Open or Close" {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8216
                ]

                port Inputs {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8224
                ]

                connect "Bus Split1.out" "SR Flip Flop2.s_in" as Connection891
                connect "Bus Split1.out1" "SR Flip Flop2.r_in" as Connection892
                connect Inputs "Bus Split1.in" as Connection824
                connect "Open or Close" "SR Flip Flop2.out" as Connection890
                [
                    breakpoints = 8000, 8216
                ]
                connect Termination2.in "SR Flip Flop2.out_n" as Connection872
            }
            [
                position = 8104, 8248
                rotation = left
                scale = -1, 1
                size = 144, 128
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7760, 8440
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7760, 8536
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7760, 8632
            ]

            port a {
                position = right:3
                kind = pe
            }
            [
                position = 8352, 8440
                rotation = down
            ]

            port b {
                position = right:5
                kind = pe
            }
            [
                position = 8352, 8536
                rotation = down
            ]

            port c {
                position = right:6
                kind = pe
            }
            [
                position = 8352, 8632
                rotation = down
            ]

            port Inputs {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7984, 8248
            ]

            junction Junction21 pe
            [
                position = 8200, 8440
            ]

            junction Junction22 pe
            [
                position = 8200, 8536
            ]

            junction Junction29 pe
            [
                position = 7952, 8440
            ]

            junction Junction30 pe
            [
                position = 7952, 8536
            ]

            connect Ia.p_node A as Connection724
            [
                breakpoints = 7808, 8440
            ]
            connect Ia.n_node Junction29 as Connection707
            connect Ib.p_node B as Connection567
            connect Ic.p_node C as Connection484
            connect Ic.n_node S2.c_out as Connection710
            connect Inputs "Breaker Interface.Inputs" as Connection715
            connect Junction21 S2.a_in as Connection713
            connect Junction22 S2.b_in as Connection712
            connect Junction22 b as Connection592
            connect Junction30 Ib.n_node as Connection711
            connect S2.ctrl_in "Breaker Interface.Open or Close" as Connection720
            [
                breakpoints = 8104, 8360
            ]
            connect S2.a_out Junction29 as Connection701
            connect S2.b_out Junction30 as Connection704
            connect S2.c_in c as Connection714
            connect Vrms1.p_node Junction21 as Connection590
            connect Vrms1.n_node Junction22 as Connection593
            connect Vrms2.p_node Junction29 as Connection703
            connect Vrms2.n_node Junction30 as Connection706
            connect a Junction21 as Connection588

            mask {
                icon = "image(\'Figures/Genereator_Isolator.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Isolator</p></body></html>"

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Isolator.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 5424, 6744
            rotation = left
            scale = 1, -1
            size = 136, 77
        ]

        component Subsystem "Thruster Breaker 2" {
            layout = dynamic
            component pas_resistor R3 {
                resistance = "0.01"
            }
            [
                position = 8016, 8664
                rotation = right
            ]

            component pas_resistor R1 {
                resistance = "0.01"
            }
            [
                position = 7920, 8664
                rotation = right
            ]

            component gen_sum Sum1 {
                signs = "3"
            }
            [
                position = 7840, 8136
                hide_name = True
            ]

            component gen_bus_join "Bus Join1" {
            }
            [
                position = 8256, 8672
                hide_name = True
            ]

            component gen_rel_op less_equal {
                relational_op = "<="
            }
            [
                position = 8008, 8144
            ]

            component gen_gain Gain1 {
                gain = "1.0/3.0"
            }
            [
                position = 7920, 8136
                hide_name = True
            ]

            component pas_resistor R2 {
                resistance = "0.01"
            }
            [
                position = 7968, 8664
                rotation = right
            ]

            component src_constant volts {
                execution_rate = "Ts"
                value = "50"
            }
            [
                position = 7904, 8184
            ]

            component "core/Triple Pole Double Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8080, 8448
                scale = 1, -1
                size = 65, 320
            ]

            component "core/Voltage RMS" VABrms {
                sig_output = "True"
            }
            [
                position = 7600, 8368
                rotation = right
                size = 64, 32
            ]

            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7808, 8224
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8008, 8248
                    hide_name = True
                ]

                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7912, 8232
                    hide_name = True
                ]

                port "Open or Close" {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8216
                ]

                port Inputs {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8224
                ]

                connect "Bus Split1.out1" "SR Flip Flop2.r_in" as Connection892
                connect "Bus Split1.out" "SR Flip Flop2.s_in" as Connection891
                connect Inputs "Bus Split1.in" as Connection824
                connect "Open or Close" "SR Flip Flop2.out" as Connection890
                connect Termination2.in "SR Flip Flop2.out_n" as Connection872
            }
            [
                position = 8080, 8816
                rotation = left
                scale = -1, -1
                size = 144, 128
            ]

            component "core/Voltage RMS" VBCrms {
                sig_output = "True"
            }
            [
                position = 7600, 8464
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage RMS" VCArms {
                sig_output = "True"
            }
            [
                position = 7784, 8464
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7528, 8320
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7528, 8416
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7528, 8512
            ]

            port A2 {
                position = right:3
                kind = pe
            }
            [
                position = 8352, 8352
                rotation = down
            ]

            port B2 {
                position = right:5
                kind = pe
            }
            [
                position = 8352, 8448
                rotation = down
            ]

            port C2 {
                position = right:6
                kind = pe
            }
            [
                position = 8352, 8544
                rotation = down
            ]

            port Inputs {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7960, 8816
            ]

            port Out {
                position = top:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8376, 8672
            ]

            tag From2 {
                value = "VBC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7648, 8136
                hide_name = True
            ]

            tag From3 {
                value = "VCA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7720, 8152
                hide_name = True
            ]

            tag Goto3 {
                value = "VCA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7864, 8464
                hide_name = True
            ]

            tag Goto2 {
                value = "VBC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7680, 8464
                hide_name = True
            ]

            tag From1 {
                value = "VAB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7720, 8120
                hide_name = True
            ]

            tag Goto4 {
                value = "dead_bus"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8112, 8144
                hide_name = True
            ]

            tag Goto1 {
                value = "VAB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7680, 8368
                hide_name = True
            ]

            tag From4 {
                value = "dead_bus"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8160, 8640
                hide_name = True
            ]

            junction Junction5 pe
            [
                position = 7968, 8712
            ]

            junction Junction7 pe
            [
                position = 7600, 8416
            ]

            junction Junction8 pe
            [
                position = 7600, 8320
            ]

            junction Junction9 pe
            [
                position = 7600, 8416
            ]

            junction Junction10 pe
            [
                position = 7600, 8512
            ]

            junction Junction11 pe
            [
                position = 7784, 8512
            ]

            junction Junction12 pe
            [
                position = 7784, 8320
            ]

            junction Junction13 sp
            [
                position = 8080, 8680
            ]

            connect B1 Junction7 as Connection1802
            connect B2 S1.sb0 as Connection1796
            connect "Breaker Interface.Open or Close" Junction13 as Connection1833
            connect "Bus Join1.in1" Junction13 as Connection1835
            connect From1 Sum1.in as Connection1823
            connect From2 Sum1.in1 as Connection1824
            connect From3 Sum1.in2 as Connection1825
            connect From4 "Bus Join1.in" as Connection1832
            connect Gain1.in Sum1.out as Connection1826
            connect Goto1 VABrms.out as Connection1820
            connect Goto2 VBCrms.out as Connection1821
            connect Goto3 VCArms.out as Connection1822
            connect Goto4 less_equal.out as Connection1829
            connect Inputs "Breaker Interface.Inputs" as Connection715
            connect Junction10 C1 as Connection1812
            connect Junction11 Junction10 as Connection1815
            connect Junction12 Junction8 as Connection1818
            connect Junction13 S1.ctrl_in as Connection1834
            connect Junction5 R1.n_node as Connection1787
            connect Junction7 S1.sb2 as Connection1803
            connect Junction8 A1 as Connection1806
            connect Junction9 Junction7 as Connection1809
            connect Out "Bus Join1.out" as Connection1831
            connect R1.p_node S1.sc1 as Connection1789
            connect R2.n_node Junction5 as Connection1788
            connect R3.n_node Junction5 as Connection1786
            connect R3.p_node S1.sa1 as Connection1791
            connect S1.sc0 A2 as Connection1795
            connect S1.sa0 C2 as Connection1797
            connect S1.sa2 Junction11 as Connection1814
            connect S1.sc2 Junction12 as Connection1817
            connect S1.sb1 R2.p_node as Connection1790
            connect VABrms.p_node Junction8 as Connection1807
            connect VABrms.n_node Junction9 as Connection1808
            connect VBCrms.n_node Junction10 as Connection1813
            connect VBCrms.p_node Junction9 as Connection1810
            connect VCArms.p_node Junction11 as Connection1816
            connect VCArms.n_node Junction12 as Connection1819
            connect less_equal.in Gain1.out as Connection1827
            connect volts.out less_equal.in1 as Connection1828

            mask {
                icon = "image(\'Figures/Genereator_Isolator.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Isolator</p></body></html>"

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Isolator.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6768, 6712
            rotation = left
            scale = 1, -1
            size = 135, 77
        ]

        component Subsystem "Propulsion Breaker" {
            layout = dynamic
            component pas_resistor R1 {
                resistance = "0.01"
            }
            [
                position = 7920, 8664
                rotation = right
            ]

            component src_constant volts {
                execution_rate = "Ts"
                value = "50"
            }
            [
                position = 7904, 8184
            ]

            component gen_bus_join "Bus Join1" {
            }
            [
                position = 8256, 8672
                hide_name = True
            ]

            component gen_rel_op less_equal {
                relational_op = "<="
            }
            [
                position = 8008, 8144
            ]

            component gen_gain Gain1 {
                gain = "1.0/3.0"
            }
            [
                position = 7920, 8136
                hide_name = True
            ]

            component pas_resistor R3 {
                resistance = "0.01"
            }
            [
                position = 8016, 8664
                rotation = right
            ]

            component gen_sum Sum1 {
                signs = "3"
            }
            [
                position = 7840, 8136
                hide_name = True
            ]

            component pas_resistor R2 {
                resistance = "0.01"
            }
            [
                position = 7968, 8664
                rotation = right
            ]

            component "core/Voltage RMS" VBCrms {
                sig_output = "True"
            }
            [
                position = 7600, 8464
                rotation = right
                size = 64, 32
            ]

            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7912, 8232
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7808, 8224
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8008, 8248
                    hide_name = True
                ]

                port "Open or Close" {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8216
                ]

                port Inputs {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8224
                ]

                connect "Bus Split1.out" "SR Flip Flop2.s_in" as Connection891
                connect "Bus Split1.out1" "SR Flip Flop2.r_in" as Connection892
                connect Inputs "Bus Split1.in" as Connection824
                connect "Open or Close" "SR Flip Flop2.out" as Connection890
                connect Termination2.in "SR Flip Flop2.out_n" as Connection872
            }
            [
                position = 8080, 8816
                rotation = left
                scale = -1, -1
                size = 144, 128
            ]

            component "core/Triple Pole Double Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8080, 8448
                scale = 1, -1
                size = 65, 320
            ]

            component "core/Voltage RMS" VABrms {
                sig_output = "True"
            }
            [
                position = 7600, 8368
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage RMS" VCArms {
                sig_output = "True"
            }
            [
                position = 7784, 8464
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7528, 8320
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7528, 8416
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7528, 8512
            ]

            port A2 {
                position = right:3
                kind = pe
            }
            [
                position = 8352, 8352
                rotation = down
            ]

            port B2 {
                position = right:5
                kind = pe
            }
            [
                position = 8352, 8448
                rotation = down
            ]

            port C2 {
                position = right:6
                kind = pe
            }
            [
                position = 8352, 8544
                rotation = down
            ]

            port Inputs {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7960, 8816
            ]

            port Out {
                position = top:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8376, 8672
            ]

            tag Goto3 {
                value = "VCA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7864, 8464
                hide_name = True
            ]

            tag From1 {
                value = "VAB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7720, 8120
                hide_name = True
            ]

            tag From2 {
                value = "VBC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7648, 8136
                hide_name = True
            ]

            tag Goto1 {
                value = "VAB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7680, 8368
                hide_name = True
            ]

            tag Goto4 {
                value = "dead_bus"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8112, 8144
                hide_name = True
            ]

            tag From3 {
                value = "VCA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7720, 8152
                hide_name = True
            ]

            tag Goto2 {
                value = "VBC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7680, 8464
                hide_name = True
            ]

            tag From4 {
                value = "dead_bus"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8160, 8640
                hide_name = True
            ]

            junction Junction5 pe
            [
                position = 7968, 8712
            ]

            junction Junction7 pe
            [
                position = 7600, 8416
            ]

            junction Junction8 pe
            [
                position = 7600, 8320
            ]

            junction Junction9 pe
            [
                position = 7600, 8416
            ]

            junction Junction10 pe
            [
                position = 7600, 8512
            ]

            junction Junction11 pe
            [
                position = 7784, 8512
            ]

            junction Junction12 pe
            [
                position = 7784, 8320
            ]

            junction Junction13 sp
            [
                position = 8080, 8680
            ]

            connect B1 Junction7 as Connection1802
            connect B2 S1.sb0 as Connection1796
            connect "Breaker Interface.Open or Close" Junction13 as Connection1833
            connect "Bus Join1.in1" Junction13 as Connection1835
            connect From1 Sum1.in as Connection1823
            connect From2 Sum1.in1 as Connection1824
            connect From3 Sum1.in2 as Connection1825
            connect From4 "Bus Join1.in" as Connection1832
            connect Gain1.in Sum1.out as Connection1826
            connect Goto1 VABrms.out as Connection1820
            connect Goto2 VBCrms.out as Connection1821
            connect Goto3 VCArms.out as Connection1822
            connect Goto4 less_equal.out as Connection1829
            connect Inputs "Breaker Interface.Inputs" as Connection715
            connect Junction10 C1 as Connection1812
            connect Junction11 Junction10 as Connection1815
            connect Junction12 Junction8 as Connection1818
            connect Junction13 S1.ctrl_in as Connection1834
            connect Junction5 R1.n_node as Connection1787
            connect Junction7 S1.sb2 as Connection1803
            connect Junction8 A1 as Connection1806
            connect Junction9 Junction7 as Connection1809
            connect Out "Bus Join1.out" as Connection1831
            connect R1.p_node S1.sc1 as Connection1789
            connect R2.n_node Junction5 as Connection1788
            connect R3.n_node Junction5 as Connection1786
            connect R3.p_node S1.sa1 as Connection1791
            connect S1.sc0 A2 as Connection1795
            connect S1.sa0 C2 as Connection1797
            connect S1.sa2 Junction11 as Connection1814
            connect S1.sc2 Junction12 as Connection1817
            connect S1.sb1 R2.p_node as Connection1790
            connect VABrms.p_node Junction8 as Connection1807
            connect VABrms.n_node Junction9 as Connection1808
            connect VBCrms.n_node Junction10 as Connection1813
            connect VBCrms.p_node Junction9 as Connection1810
            connect VCArms.p_node Junction11 as Connection1816
            connect VCArms.n_node Junction12 as Connection1819
            connect less_equal.in Gain1.out as Connection1827
            connect volts.out less_equal.in1 as Connection1828

            mask {
                icon = "image(\'Figures/Genereator_Isolator.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Isolator</p></body></html>"

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Isolator.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 7688, 6752
            rotation = left
            scale = 1, -1
            size = 135, 77
        ]

        component Subsystem Propulsion {
            layout = dynamic
            component src_scada_input Power {
                def_value = "70.0"
                execution_rate = "Ts"
                max = "10e6"
                min = "-10e6"
                unit = ""
            }
            [
                position = 7800, 8288
            ]

            component gen_product Product4 {
                signs = "*/"
            }
            [
                position = 8408, 8256
                hide_name = True
            ]

            component gen_sum Sum1 {
                signs = "-+"
            }
            [
                position = 8248, 8304
            ]

            component gen_logic_op not {
                operator = "NOT"
            }
            [
                position = 7672, 8232
                hide_name = True
            ]

            component pas_resistor R2 {
                resistance = "6000"
            }
            [
                position = 7952, 8528
                rotation = right
            ]

            component src_constant Power_low_limit {
                execution_rate = "Ts"
                value = "2e4"
            }
            [
                position = 7800, 8344
            ]

            component pas_resistor R1 {
                resistance = "1e-4"
            }
            [
                position = 7864, 8488
                rotation = right
            ]

            component gen_limiter Limit {
                lower_limit = "2e4"
                upper_limit = "2e6"
            }
            [
                position = 8000, 8320
            ]

            component gen_product Product1 {
            }
            [
                position = 8144, 8176
                hide_name = True
            ]

            component gen_product Product2 {
            }
            [
                position = 8272, 8232
                hide_name = True
            ]

            component gen_bus_split "Bus Split1" {
            }
            [
                position = 7528, 8160
                hide_name = True
                scale = 1, -1
            ]

            component gen_logic_op or {
            }
            [
                position = 7800, 8224
                hide_name = True
            ]

            component gen_limiter Limit1 {
                lower_limit = "0.19"
                upper_limit = "1e5"
            }
            [
                position = 8208, 8528
                scale = -1, 1
            ]

            component sys_signal_switch "Signal switch1" {
                criterion = "ctrl > threshold"
                threshold = "0.5"
            }
            [
                position = 7904, 8320
                hide_name = True
            ]

            component src_constant Resistor_R2 {
                execution_rate = "Ts"
                value = "6000.0"
            }
            [
                position = 8024, 8240
            ]

            component gen_product Product3 {
            }
            [
                position = 8152, 8312
                hide_name = True
            ]

            component src_constant nominal_Vdc {
                execution_rate = "Ts"
                value = "622.26"
            }
            [
                position = 8024, 8184
            ]

            component pas_capacitor C1 {
                capacitance = "50e-3"
            }
            [
                position = 7864, 8568
                rotation = right
            ]

            component "core/Current Measurement" Ia1 {
            }
            [
                position = 7696, 8432
                size = 64, 32
            ]

            component "core/Variable Resistor" RL1 {
                inductance = "12e-3"
            }
            [
                position = 8080, 8528
                rotation = right
                size = 64, 48
            ]

            component Subsystem RL {
                layout = dynamic
                component pas_resistor R4 {
                    resistance = "R"
                }
                [
                    position = 8136, 8096
                ]

                component pas_inductor L2 {
                    inductance = "L"
                }
                [
                    position = 8248, 8192
                ]

                component pas_inductor L1 {
                    inductance = "L"
                }
                [
                    position = 8248, 8096
                ]

                component pas_inductor L3 {
                    inductance = "L"
                }
                [
                    position = 8248, 8288
                ]

                component pas_resistor R6 {
                    resistance = "R"
                }
                [
                    position = 8136, 8288
                ]

                component pas_resistor R5 {
                    resistance = "R"
                }
                [
                    position = 8136, 8192
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8056, 8096
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8056, 8192
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8056, 8288
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8328, 8096
                    rotation = down
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8328, 8192
                    rotation = down
                ]

                port c {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8328, 8288
                    rotation = down
                ]

                connect L1.n_node a as Connection1859
                connect L2.n_node b as Connection1860
                connect L3.n_node c as Connection1861
                connect R4.p_node A as Connection1863
                connect R4.n_node L1.p_node as Connection1855
                connect R5.p_node B as Connection1862
                connect R5.n_node L2.p_node as Connection1856
                connect R6.p_node C as Connection1858
                connect R6.n_node L3.p_node as Connection1857

                L = "1e-4"
                R = "1e-2"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    R {
                        label = "Resistance"
                        widget = edit
                        type = generic
                        default_value = "0"
                    }

                    L {
                        label = "Inductance"
                        widget = edit
                        type = generic
                        default_value = "0"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 7360, 8528
                size = 48, 232
            ]

            component "core/Three Phase Diode Rectifier" "Three Phase Diode Rectifier1" {
            }
            [
                position = 7560, 8528
                size = 127, 256
            ]

            component "core/Voltage Measurement" Va1 {
            }
            [
                position = 7768, 8536
                rotation = right
                size = 64, 32
            ]

            port A {
                label = "A"
                position = right:1
                kind = pe
            }
            [
                position = 7176, 8432
            ]

            port B {
                label = "B"
                position = right:2
                kind = pe
            }
            [
                position = 7176, 8528
            ]

            port C {
                label = "C"
                position = right:3
                kind = pe
            }
            [
                position = 7176, 8624
            ]

            port CB_status {
                position = top:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7440, 8160
            ]

            junction Junction3 pe
            [
                position = 7768, 8432
            ]

            junction Junction4 pe
            [
                position = 7768, 8624
            ]

            junction Junction5 pe
            [
                position = 7864, 8624
            ]

            junction Junction6 pe
            [
                position = 7864, 8432
            ]

            junction Junction7 pe
            [
                position = 7952, 8432
            ]

            junction Junction8 pe
            [
                position = 7952, 8624
            ]

            junction Junction9 sp
            [
                position = 8056, 8184
            ]

            junction Junction10 sp
            [
                position = 8104, 8240
            ]

            junction Junction11 sp
            [
                position = 8192, 8224
            ]

            connect A RL.A as Connection1736
            connect B RL.B as Connection1740
            connect "Bus Split1.out" not.in as Connection1784
            connect "Bus Split1.out1" or.in as Connection1785
            connect C RL.C as Connection1738
            connect C1.n_node Junction5 as Connection1746
            connect C1.p_node R1.n_node as Connection1447
            connect CB_status "Bus Split1.in" as Connection1780
            connect Ia1.n_node Junction3 as Connection1714
            connect Junction10 Product2.in1 as Connection1765
            connect Junction11 Product1.out as Connection1769
            connect Junction3 Junction6 as Connection1747
            connect Junction4 Junction5 as Connection1744
            connect Junction5 Junction8 as Connection1753
            connect Junction6 Junction7 as Connection1750
            connect Junction7 R2.p_node as Connection1751
            connect Junction8 R2.n_node as Connection1754
            connect Junction9 nominal_Vdc.out as Connection1759
            connect Limit1.out RL1.In as Connection1774
            connect Power.out "Signal switch1.in" as Connection1786
            connect Power_low_limit.out "Signal switch1.in1" as Connection1787
            connect Product1.in Junction9 as Connection1758
            connect Product1.in1 Junction9 as Connection1760
            connect Product2.in Junction11 as Connection1768
            connect Product3.in Junction10 as Connection1766
            connect Product3.in1 Limit.out as Connection1763
            connect Product4.out Limit1.in as Connection1773
            connect Product4.in Product2.out as Connection1771
            connect Product4.in1 Sum1.out as Connection1772
            connect R1.p_node Junction6 as Connection1749
            connect RL.a "Three Phase Diode Rectifier1.a_in" as Connection1737
            connect RL.c "Three Phase Diode Rectifier1.c_in" as Connection1739
            connect RL.b "Three Phase Diode Rectifier1.b_in" as Connection1741
            connect RL1.p_node Junction7 as Connection1752
            connect RL1.n_node Junction8 as Connection1755
            connect Resistor_R2.out Junction10 as Connection1764
            connect "Signal switch1.out" Limit.in as Connection1777
            connect Sum1.in Junction11 as Connection1770
            connect Sum1.in1 Product3.out as Connection1767
            connect "Three Phase Diode Rectifier1.pos_out" Ia1.p_node as Connection1712
            connect "Three Phase Diode Rectifier1.neg_out" Junction4 as Connection1717
            connect Va1.p_node Junction3 as Connection1716
            connect Va1.n_node Junction4 as Connection1719
            connect or.out "Signal switch1.in2" as Connection1783
            connect or.in1 not.out as Connection1089

            mask {
                icon = "image(\'propulsion.jpg\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Propulsion unit mode based on 2-level motor drive and an induction motor.</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">                                                                                        </p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">                                                                                        Look under mask for more details.</p></body></html>"

                CODE define_icon
                    image('images/propulsion.jpg')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 7688, 7040
            rotation = left
            size = 272, 144
        ]

        component Subsystem "Thruster Breaker 3" {
            layout = dynamic
            component pas_resistor R1 {
                resistance = "0.01"
            }
            [
                position = 7920, 8664
                rotation = right
            ]

            component gen_gain Gain1 {
                gain = "1.0/3.0"
            }
            [
                position = 7920, 8136
                hide_name = True
            ]

            component pas_resistor R3 {
                resistance = "0.01"
            }
            [
                position = 8016, 8664
                rotation = right
            ]

            component src_constant volts {
                execution_rate = "Ts"
                value = "50"
            }
            [
                position = 7904, 8184
            ]

            component gen_rel_op less_equal {
                relational_op = "<="
            }
            [
                position = 8008, 8144
            ]

            component gen_bus_join "Bus Join1" {
            }
            [
                position = 8256, 8672
                hide_name = True
            ]

            component gen_sum Sum1 {
                signs = "3"
            }
            [
                position = 7840, 8136
                hide_name = True
            ]

            component pas_resistor R2 {
                resistance = "0.01"
            }
            [
                position = 7968, 8664
                rotation = right
            ]

            component "core/Voltage RMS" VBCrms {
                sig_output = "True"
            }
            [
                position = 7600, 8464
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage RMS" VABrms {
                sig_output = "True"
            }
            [
                position = 7600, 8368
                rotation = right
                size = 64, 32
            ]

            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7912, 8232
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7808, 8224
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8008, 8248
                    hide_name = True
                ]

                port "Open or Close" {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8216
                ]

                port Inputs {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8224
                ]

                connect "Bus Split1.out1" "SR Flip Flop2.r_in" as Connection892
                connect "Bus Split1.out" "SR Flip Flop2.s_in" as Connection891
                connect Inputs "Bus Split1.in" as Connection824
                connect "Open or Close" "SR Flip Flop2.out" as Connection890
                connect Termination2.in "SR Flip Flop2.out_n" as Connection872
            }
            [
                position = 8080, 8816
                rotation = left
                scale = -1, -1
                size = 144, 128
            ]

            component "core/Voltage RMS" VCArms {
                sig_output = "True"
            }
            [
                position = 7784, 8464
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Triple Pole Double Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8080, 8448
                scale = 1, -1
                size = 65, 320
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7528, 8320
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7528, 8416
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7528, 8512
            ]

            port A2 {
                position = right:3
                kind = pe
            }
            [
                position = 8352, 8352
                rotation = down
            ]

            port B2 {
                position = right:5
                kind = pe
            }
            [
                position = 8352, 8448
                rotation = down
            ]

            port C2 {
                position = right:6
                kind = pe
            }
            [
                position = 8352, 8544
                rotation = down
            ]

            port Inputs {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7960, 8816
            ]

            port Out {
                position = top:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8376, 8672
            ]

            tag From3 {
                value = "VCA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7720, 8152
                hide_name = True
            ]

            tag From2 {
                value = "VBC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7648, 8136
                hide_name = True
            ]

            tag Goto4 {
                value = "dead_bus"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8112, 8144
                hide_name = True
            ]

            tag From1 {
                value = "VAB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7720, 8120
                hide_name = True
            ]

            tag Goto2 {
                value = "VBC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7680, 8464
                hide_name = True
            ]

            tag Goto3 {
                value = "VCA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7864, 8464
                hide_name = True
            ]

            tag From4 {
                value = "dead_bus"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8160, 8640
                hide_name = True
            ]

            tag Goto1 {
                value = "VAB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7680, 8368
                hide_name = True
            ]

            junction Junction5 pe
            [
                position = 7968, 8712
            ]

            junction Junction7 pe
            [
                position = 7600, 8416
            ]

            junction Junction8 pe
            [
                position = 7600, 8320
            ]

            junction Junction9 pe
            [
                position = 7600, 8416
            ]

            junction Junction10 pe
            [
                position = 7600, 8512
            ]

            junction Junction11 pe
            [
                position = 7784, 8512
            ]

            junction Junction12 pe
            [
                position = 7784, 8320
            ]

            junction Junction13 sp
            [
                position = 8080, 8680
            ]

            connect B1 Junction7 as Connection1802
            connect B2 S1.sb0 as Connection1796
            connect "Breaker Interface.Open or Close" Junction13 as Connection1833
            connect "Bus Join1.in1" Junction13 as Connection1835
            connect From1 Sum1.in as Connection1823
            connect From2 Sum1.in1 as Connection1824
            connect From3 Sum1.in2 as Connection1825
            connect From4 "Bus Join1.in" as Connection1832
            connect Gain1.in Sum1.out as Connection1826
            connect Goto1 VABrms.out as Connection1820
            connect Goto2 VBCrms.out as Connection1821
            connect Goto3 VCArms.out as Connection1822
            connect Goto4 less_equal.out as Connection1829
            connect Inputs "Breaker Interface.Inputs" as Connection715
            connect Junction10 C1 as Connection1812
            connect Junction11 Junction10 as Connection1815
            connect Junction12 Junction8 as Connection1818
            connect Junction13 S1.ctrl_in as Connection1834
            connect Junction5 R1.n_node as Connection1787
            connect Junction7 S1.sb2 as Connection1803
            connect Junction8 A1 as Connection1806
            connect Junction9 Junction7 as Connection1809
            connect Out "Bus Join1.out" as Connection1831
            connect R1.p_node S1.sc1 as Connection1789
            connect R2.n_node Junction5 as Connection1788
            connect R3.n_node Junction5 as Connection1786
            connect R3.p_node S1.sa1 as Connection1791
            connect S1.sc0 A2 as Connection1795
            connect S1.sa0 C2 as Connection1797
            connect S1.sa2 Junction11 as Connection1814
            connect S1.sc2 Junction12 as Connection1817
            connect S1.sb1 R2.p_node as Connection1790
            connect VABrms.p_node Junction8 as Connection1807
            connect VABrms.n_node Junction9 as Connection1808
            connect VBCrms.n_node Junction10 as Connection1813
            connect VBCrms.p_node Junction9 as Connection1810
            connect VCArms.p_node Junction11 as Connection1816
            connect VCArms.n_node Junction12 as Connection1819
            connect less_equal.in Gain1.out as Connection1827
            connect volts.out less_equal.in1 as Connection1828

            mask {
                icon = "image(\'Figures/Genereator_Isolator.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Isolator</p></body></html>"

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Isolator.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 8040, 6704
            rotation = left
            scale = 1, -1
            size = 135, 77
        ]

        component Subsystem cpl2 {
            layout = dynamic
            component "core/Three Phase Core Coupling" "Core Coupling2" {
                R1 = "10.0"
                fixed_snb_i = "true"
            }
            [
                position = 8192, 8192
                size = 12, 256
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "100e-6"
                R = "0.1"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8064, 8376
                size = 64, 48
            ]

            component "core/Voltage Measurement" Vab1 {
            }
            [
                position = 8136, 8144
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vab2 {
            }
            [
                position = 8264, 8144
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vbc1 {
            }
            [
                position = 8136, 8240
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vbc2 {
            }
            [
                position = 8264, 8240
                rotation = right
                size = 64, 32
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7936, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7936, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7936, 8288
            ]

            port A2 {
                position = right:1
                kind = pe
            }
            [
                position = 8368, 8096
                rotation = down
            ]

            port B2 {
                position = right:2
                kind = pe
            }
            [
                position = 8368, 8192
                rotation = down
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8368, 8288
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8048, 8096
            ]

            junction Junction2 pe
            [
                position = 8064, 8192
            ]

            junction Junction3 pe
            [
                position = 8080, 8288
            ]

            junction Junction4 pe
            [
                position = 8136, 8192
            ]

            junction Junction5 pe
            [
                position = 8136, 8096
            ]

            junction Junction6 pe
            [
                position = 8264, 8192
            ]

            junction Junction7 pe
            [
                position = 8264, 8096
            ]

            junction Junction8 pe
            [
                position = 8136, 8288
            ]

            junction Junction9 pe
            [
                position = 8136, 8192
            ]

            junction Junction10 pe
            [
                position = 8264, 8288
            ]

            junction Junction11 pe
            [
                position = 8264, 8192
            ]

            connect "Core Coupling2.c_out" Junction10 as Connection34
            connect "Core Coupling2.b_in" Junction4 as Connection16
            connect "Core Coupling2.a_in" Junction5 as Connection19
            connect "Core Coupling2.b_out" Junction6 as Connection22
            connect "Core Coupling2.a_out" Junction7 as Connection25
            connect "Core Coupling2.c_in" Junction8 as Connection28
            connect Junction1 A1 as Connection8
            connect Junction10 C2 as Connection35
            connect Junction11 Junction6 as Connection38
            connect Junction2 B1 as Connection11
            connect Junction3 C1 as Connection14
            connect Junction4 Junction2 as Connection17
            connect Junction5 Junction1 as Connection20
            connect Junction6 B2 as Connection23
            connect Junction7 A2 as Connection26
            connect Junction8 Junction3 as Connection29
            connect Junction9 Junction4 as Connection32
            connect "RC Snubber.A" Junction1 as Connection9
            connect "RC Snubber.B" Junction2 as Connection12
            connect "RC Snubber.C" Junction3 as Connection15
            connect Vab1.p_node Junction5 as Connection21
            connect Vab1.n_node Junction9 as Connection31
            connect Vab2.n_node Junction11 as Connection37
            connect Vab2.p_node Junction7 as Connection27
            connect Vbc1.n_node Junction8 as Connection30
            connect Vbc1.p_node Junction9 as Connection33
            connect Vbc2.n_node Junction10 as Connection36
            connect Vbc2.p_node Junction11 as Connection39
        }
        [
            position = 7224, 7432
            size = 48, 64
        ]

        component Subsystem Lights {
            layout = dynamic
            component pas_inductor L2 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8240
            ]

            component pas_resistor R3 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8296
            ]

            component pas_resistor R2 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8240
            ]

            component pas_inductor L3 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8296
            ]

            component pas_inductor L1 {
                inductance = "3*U**2*Q/((P**2)+(Q**2))/(2*np.pi*f)"
            }
            [
                position = 7824, 8184
            ]

            component pas_resistor R1 {
                resistance = "3*U**2*P/((P**2)+(Q**2))"
            }
            [
                position = 7720, 8184
            ]

            component "core/Current RMS" Irms_a {
            }
            [
                position = 7616, 8184
                size = 64, 32
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7472, 8096
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7528, 8096
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7576, 8096
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 7872, 8240
            ]

            connect B R2.p_node as Connection9
            connect C R3.p_node as Connection10
            connect Irms_a.p_node A as Connection12
            connect Irms_a.n_node R1.p_node as Connection11
            connect Junction1 L3.n_node as Connection6
            connect L1.n_node Junction1 as Connection5
            connect L2.n_node Junction1 as Connection7
            connect L2.p_node R2.n_node as Connection2
            connect R1.n_node L1.p_node as Connection3
            connect R3.n_node L3.p_node as Connection1

            P = "25e3"
            Q = "0.5e3"
            U = "440"
            f = "50.0"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                U {
                    label = "Voltage (ph to gnd)"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "V"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "Hz"
                }

                P {
                    label = "Maximal Active Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "W"
                }

                Q {
                    label = "Maximal Reactive Power"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "VAr"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 5904, 6824
            size = 128, 136
        ]

        component Subsystem cpl4 {
            layout = dynamic
            component "core/Three Phase Core Coupling" "Core Coupling2" {
                R1 = "10.0"
                fixed_snb_i = "true"
            }
            [
                position = 8192, 8192
                size = 12, 256
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7960, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7960, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7960, 8288
            ]

            port A2 {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8096
                rotation = down
            ]

            port B2 {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8192
                rotation = down
            ]

            port C2 {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8288
                rotation = down
            ]

            connect A1 "Core Coupling2.a_in" as Connection17
            [
                breakpoints = 8040, 8096
            ]
            connect B1 "Core Coupling2.b_in" as Connection16
            [
                breakpoints = 8056, 8192
            ]
            connect C1 "Core Coupling2.c_in" as Connection18
            [
                breakpoints = 8072, 8288
            ]
            connect "Core Coupling2.a_out" A2 as Connection3
            connect "Core Coupling2.b_out" B2 as Connection2
            connect "Core Coupling2.c_out" C2 as Connection4
        }
        [
            position = 5776, 6504
            rotation = down
            scale = 1, -1
            size = 48, 72
        ]

        component Subsystem cpl6 {
            layout = dynamic
            component "core/Voltage RMS" Vrms1 {
            }
            [
                position = 8304, 8096
                rotation = right
                size = 64, 32
            ]

            component "core/Three Phase Core Coupling" "Core Coupling 6" {
                C1 = "Ts"
                R1 = "1"
                R2 = "1e-4"
                fixed_snb_i = "true"
            }
            [
                position = 8176, 8144
                scale = -1, 1
                size = 12, 256
            ]

            component "core/Voltage RMS" Vrms3 {
            }
            [
                position = 8080, 8096
                rotation = right
                size = 64, 32
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8424, 8240
                rotation = down
            ]

            port B {
                position = left:5
                kind = pe
            }
            [
                position = 7984, 8144
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8424, 8048
                rotation = down
            ]

            port C {
                position = left:6
                kind = pe
            }
            [
                position = 7984, 8240
            ]

            port A {
                position = left:3
                kind = pe
            }
            [
                position = 7984, 8048
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8424, 8144
                rotation = down
            ]

            junction Junction62 pe
            [
                position = 8080, 8048
            ]

            junction Junction63 pe
            [
                position = 8080, 8144
            ]

            junction Junction64 pe
            [
                position = 8304, 8048
            ]

            junction Junction65 pe
            [
                position = 8304, 8144
            ]

            connect A Junction62 as Connection909
            connect B Junction63 as Connection912
            connect C "Core Coupling 6.c_out" as Connection913
            connect "Core Coupling 6.a_out" Junction62 as Connection907
            connect "Core Coupling 6.a_in" Junction64 as Connection924
            [
                breakpoints = 8208, 8048; 8208, 8048; 8224, 8048
            ]
            connect "Core Coupling 6.b_in" Junction65 as Connection925
            [
                breakpoints = 8224, 8144; 8240, 8144; 8304, 8144
            ]
            connect Junction62 Vrms3.p_node as Connection908
            [
                breakpoints = 8080, 8048
            ]
            connect Junction63 "Core Coupling 6.b_out" as Connection911
            [
                breakpoints = 8080, 8144
            ]
            connect Junction64 Vrms1.p_node as Connection915
            [
                breakpoints = 8304, 8048
            ]
            connect Vrms1.n_node Junction65 as Connection917
            connect Vrms3.n_node Junction63 as Connection910
            connect a Junction64 as Connection916
            connect b Junction65 as Connection919
            connect c "Core Coupling 6.c_in" as Connection923
            [
                breakpoints = 8240, 8240
            ]
        }
        [
            position = 7144, 6504
            scale = -1, 1
            size = 48, 64
        ]

        component Subsystem "Thruster Breaker 1" {
            layout = dynamic
            component gen_gain Gain1 {
                gain = "1.0/3.0"
            }
            [
                position = 7920, 8136
                hide_name = True
            ]

            component gen_sum Sum1 {
                signs = "3"
            }
            [
                position = 7840, 8136
                hide_name = True
            ]

            component gen_bus_join "Bus Join1" {
            }
            [
                position = 8256, 8672
                hide_name = True
            ]

            component pas_resistor R2 {
                resistance = "0.01"
            }
            [
                position = 7968, 8664
                rotation = right
            ]

            component pas_resistor R1 {
                resistance = "0.01"
            }
            [
                position = 7920, 8664
                rotation = right
            ]

            component pas_resistor R3 {
                resistance = "0.01"
            }
            [
                position = 8016, 8664
                rotation = right
            ]

            component gen_rel_op less_equal {
                relational_op = "<="
            }
            [
                position = 8008, 8144
            ]

            component src_constant volts {
                execution_rate = "Ts"
                value = "50"
            }
            [
                position = 7904, 8184
            ]

            component "core/Triple Pole Double Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8080, 8448
                scale = 1, -1
                size = 65, 320
            ]

            component "core/Voltage RMS" VABrms {
                sig_output = "True"
            }
            [
                position = 7600, 8368
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage RMS" VBCrms {
                sig_output = "True"
            }
            [
                position = 7600, 8464
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage RMS" VCArms {
                sig_output = "True"
            }
            [
                position = 7784, 8464
                rotation = right
                scale = 1, -1
                size = 64, 32
            ]

            component Subsystem "Breaker Interface" {
                layout = dynamic
                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7808, 8224
                    hide_name = True
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 8008, 8248
                    hide_name = True
                ]

                component gen_sr_ff "SR Flip Flop2" {
                }
                [
                    position = 7912, 8232
                    hide_name = True
                ]

                port "Open or Close" {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8216
                ]

                port Inputs {
                    position = bottom:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8224
                ]

                connect "Bus Split1.out" "SR Flip Flop2.s_in" as Connection891
                connect "Bus Split1.out1" "SR Flip Flop2.r_in" as Connection892
                connect Inputs "Bus Split1.in" as Connection824
                connect "Open or Close" "SR Flip Flop2.out" as Connection890
                connect Termination2.in "SR Flip Flop2.out_n" as Connection872
            }
            [
                position = 8080, 8816
                rotation = left
                scale = -1, -1
                size = 144, 128
            ]

            port A1 {
                position = left:1
                kind = pe
            }
            [
                position = 7528, 8320
            ]

            port B1 {
                position = left:2
                kind = pe
            }
            [
                position = 7528, 8416
            ]

            port C1 {
                position = left:3
                kind = pe
            }
            [
                position = 7528, 8512
            ]

            port A2 {
                position = right:3
                kind = pe
            }
            [
                position = 8352, 8352
                rotation = down
            ]

            port B2 {
                position = right:5
                kind = pe
            }
            [
                position = 8352, 8448
                rotation = down
            ]

            port C2 {
                position = right:6
                kind = pe
            }
            [
                position = 8352, 8544
                rotation = down
            ]

            port Inputs {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7960, 8816
            ]

            port Out {
                position = top:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8376, 8672
            ]

            tag Goto4 {
                value = "dead_bus"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8112, 8144
                hide_name = True
            ]

            tag Goto1 {
                value = "VAB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7680, 8368
                hide_name = True
            ]

            tag From4 {
                value = "dead_bus"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8160, 8640
                hide_name = True
            ]

            tag From2 {
                value = "VBC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7648, 8136
                hide_name = True
            ]

            tag From3 {
                value = "VCA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7720, 8152
                hide_name = True
            ]

            tag Goto3 {
                value = "VCA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7864, 8464
                hide_name = True
            ]

            tag Goto2 {
                value = "VBC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7680, 8464
                hide_name = True
            ]

            tag From1 {
                value = "VAB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7720, 8120
                hide_name = True
            ]

            junction Junction5 pe
            [
                position = 7968, 8712
            ]

            junction Junction7 pe
            [
                position = 7600, 8416
            ]

            junction Junction8 pe
            [
                position = 7600, 8320
            ]

            junction Junction9 pe
            [
                position = 7600, 8416
            ]

            junction Junction10 pe
            [
                position = 7600, 8512
            ]

            junction Junction11 pe
            [
                position = 7784, 8512
            ]

            junction Junction12 pe
            [
                position = 7784, 8320
            ]

            junction Junction13 sp
            [
                position = 8080, 8680
            ]

            connect B1 Junction7 as Connection1802
            connect B2 S1.sb0 as Connection1796
            connect "Breaker Interface.Open or Close" Junction13 as Connection1833
            connect "Bus Join1.in1" Junction13 as Connection1835
            connect From1 Sum1.in as Connection1823
            connect From2 Sum1.in1 as Connection1824
            connect From3 Sum1.in2 as Connection1825
            connect From4 "Bus Join1.in" as Connection1832
            connect Gain1.in Sum1.out as Connection1826
            connect Goto1 VABrms.out as Connection1820
            connect Goto2 VBCrms.out as Connection1821
            connect Goto3 VCArms.out as Connection1822
            connect Goto4 less_equal.out as Connection1829
            connect Inputs "Breaker Interface.Inputs" as Connection715
            connect Junction10 C1 as Connection1812
            connect Junction11 Junction10 as Connection1815
            connect Junction12 Junction8 as Connection1818
            connect Junction13 S1.ctrl_in as Connection1834
            connect Junction5 R1.n_node as Connection1787
            connect Junction7 S1.sb2 as Connection1803
            connect Junction8 A1 as Connection1806
            connect Junction9 Junction7 as Connection1809
            connect Out "Bus Join1.out" as Connection1831
            connect R1.p_node S1.sc1 as Connection1789
            connect R2.n_node Junction5 as Connection1788
            connect R3.n_node Junction5 as Connection1786
            connect R3.p_node S1.sa1 as Connection1791
            connect S1.sc0 A2 as Connection1795
            connect S1.sa0 C2 as Connection1797
            connect S1.sa2 Junction11 as Connection1814
            connect S1.sc2 Junction12 as Connection1817
            connect S1.sb1 R2.p_node as Connection1790
            connect VABrms.p_node Junction8 as Connection1807
            connect VABrms.n_node Junction9 as Connection1808
            connect VBCrms.n_node Junction10 as Connection1813
            connect VBCrms.p_node Junction9 as Connection1810
            connect VCArms.p_node Junction11 as Connection1816
            connect VCArms.n_node Junction12 as Connection1819
            connect less_equal.in Gain1.out as Connection1827
            connect volts.out less_equal.in1 as Connection1828

            mask {
                icon = "image(\'Figures/Genereator_Isolator.PNG\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Isolator</p></body></html>"

                Ts {
                    label = "Excecution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                }

                CODE define_icon
                    image('images/Isolator.png')
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6448, 6720
            rotation = left
            scale = 1, -1
            size = 135, 77
        ]

        component "core/Diesel Genset" Diesel_Gen2 {
            Sb = "2.69e6"
            Tmin = "-0.5"
            Ts = "Ts"
            V_fall = "-1"
            V_rise = "1"
            Vn = "440.0"
            delta_wn = "3.1"
            inner_w_fall = "-1"
            inner_w_rise = "0.2"
            pf_lowLim = "-2"
            pf_upLim = "2"
            phaseOff = "0.0"
        }
        [
            position = 8376, 6064
            rotation = right
            scale = -1, 1
            size = 354, 240
        ]

        component "core/Diesel Genset" Diesel_Gen1 {
            Sb = "2.69e6"
            Tmin = "-0.5"
            Ts = "Ts"
            V_fall = "-1"
            V_rise = "1"
            Vn = "440.0"
            delta_wn = "3.1"
            inner_w_fall = "-1"
            inner_w_rise = "0.2"
            pf_lowLim = "-2"
            pf_upLim = "2"
            phaseOff = "0.0"
        }
        [
            position = 6080, 6064
            rotation = right
            scale = -1, 1
            size = 354, 240
        ]

        component Subsystem PMS {
            layout = dynamic
            component "core/Rate Transition" "Rate Transition2" {
                execution_rate = "Ts_PMS"
            }
            [
                position = 6168, 8320
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "Ts_PMS"
            }
            [
                position = 6168, 8224
                hide_name = True
                size = 32, 32
            ]

            component Subsystem SignalSelect {
                layout = dynamic
                component gen_terminator Termination8 {
                }
                [
                    position = 8376, 8368
                    rotation = right
                    hide_name = True
                ]

                component gen_terminator Termination10 {
                }
                [
                    position = 8136, 8336
                    rotation = right
                    hide_name = True
                ]

                component gen_terminator Termination4 {
                }
                [
                    position = 8320, 8064
                    rotation = left
                    hide_name = True
                ]

                component gen_terminator Termination7 {
                }
                [
                    position = 8336, 8336
                    rotation = right
                    hide_name = True
                ]

                component gen_terminator Termination6 {
                }
                [
                    position = 8296, 8368
                    rotation = right
                    hide_name = True
                ]

                component gen_terminator Termination9 {
                }
                [
                    position = 8176, 8336
                    rotation = right
                    hide_name = True
                ]

                component gen_terminator Termination3 {
                }
                [
                    position = 8280, 8064
                    rotation = left
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "14"
                }
                [
                    position = 8080, 8192
                    hide_name = True
                ]

                component gen_terminator Termination5 {
                }
                [
                    position = 8360, 8032
                    rotation = left
                    hide_name = True
                ]

                component gen_terminator Termination11 {
                }
                [
                    position = 8200, 8064
                    rotation = left
                    hide_name = True
                ]

                component gen_terminator Termination12 {
                }
                [
                    position = 8400, 8064
                    rotation = left
                    hide_name = True
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "4"
                }
                [
                    position = 8744, 8200
                    hide_name = True
                ]

                port In {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8008, 8192
                ]

                port Out {
                    position = right:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8856, 8200
                ]

                tag Goto1 {
                    value = "Gen_on"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8000
                    rotation = left
                    hide_name = True
                ]

                tag Goto2 {
                    value = "GCB_status"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8240, 8000
                    rotation = left
                    hide_name = True
                ]

                tag Goto3 {
                    value = "Reactive_Power"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8216, 8336
                    rotation = right
                    hide_name = True
                    size = 96, 20
                ]

                tag Goto4 {
                    value = "Active_Power"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8256, 8336
                    rotation = right
                    hide_name = True
                    size = 97, 20
                ]

                tag From1 {
                    value = "Active_Power"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8504, 8176
                    hide_name = True
                    size = 105, 20
                ]

                tag From2 {
                    value = "Reactive_Power"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8624, 8192
                    hide_name = True
                    size = 105, 20
                ]

                tag From3 {
                    value = "Gen_on"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8504, 8208
                    hide_name = True
                    size = 105, 20
                ]

                tag From4 {
                    value = "GCB_status"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8624, 8224
                    hide_name = True
                    size = 105, 20
                ]

                connect "Bus Split1.out" Goto1 as Connection28
                connect "Bus Split1.out10" Goto4 as Connection40
                connect "Bus Split1.in" In as Connection16
                connect From1 "Bus Join1.in" as Connection41
                connect From2 "Bus Join1.in1" as Connection42
                connect From3 "Bus Join1.in2" as Connection43
                connect From4 "Bus Join1.in3" as Connection44
                connect Goto2 "Bus Split1.out2" as Connection32
                connect Goto3 "Bus Split1.out11" as Connection36
                connect Out "Bus Join1.out" as Connection45
                connect Termination10.in "Bus Split1.out13" as Connection15
                connect Termination11.in "Bus Split1.out1" as Connection23
                connect Termination12.in "Bus Split1.out6" as Connection24
                connect Termination3.in "Bus Split1.out3" as Connection8
                connect Termination4.in "Bus Split1.out4" as Connection9
                connect Termination5.in "Bus Split1.out5" as Connection10
                connect Termination6.in "Bus Split1.out7" as Connection11
                connect Termination7.in "Bus Split1.out8" as Connection12
                connect Termination8.in "Bus Split1.out9" as Connection13
                connect Termination9.in "Bus Split1.out12" as Connection14
            }
            [
                position = 6312, 8224
                size = 128, 56
            ]

            component Subsystem SignalSelect1 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "4"
                }
                [
                    position = 8744, 8200
                    hide_name = True
                ]

                component gen_terminator Termination10 {
                }
                [
                    position = 8136, 8336
                    rotation = right
                    hide_name = True
                ]

                component gen_terminator Termination7 {
                }
                [
                    position = 8336, 8336
                    rotation = right
                    hide_name = True
                ]

                component gen_terminator Termination4 {
                }
                [
                    position = 8320, 8064
                    rotation = left
                    hide_name = True
                ]

                component gen_terminator Termination11 {
                }
                [
                    position = 8200, 8064
                    rotation = left
                    hide_name = True
                ]

                component gen_terminator Termination3 {
                }
                [
                    position = 8280, 8064
                    rotation = left
                    hide_name = True
                ]

                component gen_terminator Termination12 {
                }
                [
                    position = 8400, 8064
                    rotation = left
                    hide_name = True
                ]

                component gen_terminator Termination8 {
                }
                [
                    position = 8376, 8368
                    rotation = right
                    hide_name = True
                ]

                component gen_terminator Termination5 {
                }
                [
                    position = 8360, 8032
                    rotation = left
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "14"
                }
                [
                    position = 8080, 8192
                    hide_name = True
                ]

                component gen_terminator Termination9 {
                }
                [
                    position = 8176, 8336
                    rotation = right
                    hide_name = True
                ]

                component gen_terminator Termination6 {
                }
                [
                    position = 8296, 8368
                    rotation = right
                    hide_name = True
                ]

                port In {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8008, 8192
                ]

                port Out {
                    position = right:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8856, 8200
                ]

                tag Goto4 {
                    value = "Active_Power"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8256, 8336
                    rotation = right
                    hide_name = True
                    size = 97, 20
                ]

                tag From1 {
                    value = "Active_Power"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8504, 8176
                    hide_name = True
                    size = 105, 20
                ]

                tag Goto3 {
                    value = "Reactive_Power"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8216, 8336
                    rotation = right
                    hide_name = True
                    size = 96, 20
                ]

                tag From4 {
                    value = "GCB_status"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8624, 8224
                    hide_name = True
                    size = 105, 20
                ]

                tag From2 {
                    value = "Reactive_Power"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8624, 8192
                    hide_name = True
                    size = 105, 20
                ]

                tag From3 {
                    value = "Gen_on"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8504, 8208
                    hide_name = True
                    size = 105, 20
                ]

                tag Goto1 {
                    value = "Gen_on"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8160, 8000
                    rotation = left
                    hide_name = True
                ]

                tag Goto2 {
                    value = "GCB_status"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8240, 8000
                    rotation = left
                    hide_name = True
                ]

                connect "Bus Split1.out" Goto1 as Connection28
                connect "Bus Split1.out10" Goto4 as Connection40
                connect "Bus Split1.in" In as Connection16
                connect From1 "Bus Join1.in" as Connection41
                connect From2 "Bus Join1.in1" as Connection42
                connect From3 "Bus Join1.in2" as Connection43
                connect From4 "Bus Join1.in3" as Connection44
                connect Goto2 "Bus Split1.out2" as Connection32
                connect Goto3 "Bus Split1.out11" as Connection36
                connect Out "Bus Join1.out" as Connection45
                connect Termination10.in "Bus Split1.out13" as Connection15
                connect Termination11.in "Bus Split1.out1" as Connection23
                connect Termination12.in "Bus Split1.out6" as Connection24
                connect Termination3.in "Bus Split1.out3" as Connection8
                connect Termination4.in "Bus Split1.out4" as Connection9
                connect Termination5.in "Bus Split1.out5" as Connection10
                connect Termination6.in "Bus Split1.out7" as Connection11
                connect Termination7.in "Bus Split1.out8" as Connection12
                connect Termination8.in "Bus Split1.out9" as Connection13
                connect Termination9.in "Bus Split1.out12" as Connection14
            }
            [
                position = 6312, 8320
                size = 128, 56
            ]

            component "core/Rate Transition" "Rate Transition3" {
                execution_rate = "Ts_PMS"
            }
            [
                position = 6168, 8416
                hide_name = True
                size = 32, 32
            ]

            component Subsystem Bus_CB {
                layout = dynamic
                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8272, 8216
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "OR"
                }
                [
                    position = 8216, 8040
                    hide_name = True
                ]

                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8088, 8072
                ]

                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8088, 8144
                ]

                port CB_P_mng_cmd {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8088, 8008
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1050
                connect Close.out "Logical operator1.in1" as Connection1054
                connect "Logical operator1.out" "Bus Join2.in" as Connection1053
                connect "Logical operator1.in" CB_P_mng_cmd as Connection1051
                [
                    breakpoints = 8152, 8032; 8152, 8008
                ]
                connect Open.out "Bus Join2.in1" as Connection1055
            }
            [
                position = 8296, 8760
                size = 136, 120
            ]

            component "core/Rate Transition" "Rate Transition5" {
                execution_rate = "Ts"
            }
            [
                position = 8168, 8760
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition6" {
                execution_rate = "Ts"
            }
            [
                position = 8144, 8336
                hide_name = True
                size = 32, 32
            ]

            component Subsystem Thruster1_CB {
                layout = dynamic
                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8272, 8216
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8120, 8136
                ]

                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8120, 8072
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1050
                connect Close.out "Bus Join2.in" as Connection1063
                connect Open.out "Bus Join2.in1" as Connection1064
            }
            [
                position = 8296, 8920
                size = 136, 120
            ]

            component Subsystem Thruster2_CB {
                layout = dynamic
                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8248, 8208
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8096, 8024
                ]

                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8096, 8088
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1065
                connect Close.out "Bus Join2.in" as Connection1063
                connect Open.out "Bus Join2.in1" as Connection1066
            }
            [
                position = 8296, 9080
                size = 136, 120
            ]

            component Subsystem Thruster3_CB {
                layout = dynamic
                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8088, 8032
                ]

                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8088, 8096
                ]

                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8240, 8216
                    rotation = right
                    hide_name = True
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1065
                connect Close.out "Bus Join2.in" as Connection1063
                connect Open.out "Bus Join2.in1" as Connection1066
            }
            [
                position = 8296, 9240
                size = 136, 120
            ]

            component Subsystem Trafo1_CB {
                layout = dynamic
                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8184, 8136
                ]

                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8128, 8104
                ]

                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8272, 8200
                    rotation = right
                    hide_name = True
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1053
                connect Close.out "Bus Join2.in" as Connection1051
                connect Open.out "Bus Join2.in1" as Connection1052
            }
            [
                position = 8792, 9240
                size = 136, 120
            ]

            component Subsystem Trafo2_CB {
                layout = dynamic
                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8136, 8128
                ]

                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8280, 8224
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8192, 8160
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1053
                connect Close.out "Bus Join2.in" as Connection1051
                connect Open.out "Bus Join2.in1" as Connection1052
            }
            [
                position = 8792, 9400
                size = 136, 120
            ]

            component Subsystem Trafo3_CB {
                layout = dynamic
                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8136, 8128
                ]

                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8192, 8160
                ]

                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8280, 8224
                    rotation = right
                    hide_name = True
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1053
                connect Close.out "Bus Join2.in" as Connection1051
                connect Open.out "Bus Join2.in1" as Connection1052
            }
            [
                position = 8792, 9552
                size = 136, 120
            ]

            component Subsystem EMS_MS_440V_CB {
                layout = dynamic
                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8176, 8064
                ]

                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8176, 8128
                ]

                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8272, 8216
                    rotation = right
                    hide_name = True
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1050
                connect Close.out "Bus Join2.in" as Connection1051
                connect Open.out "Bus Join2.in1" as Connection1052
            }
            [
                position = 8792, 8768
                size = 136, 120
            ]

            component Subsystem EMS_MS_230V_CB {
                layout = dynamic
                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8144, 8032
                ]

                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8280, 8216
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8144, 8096
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1053
                connect Close.out "Bus Join2.in" as Connection1051
                connect Open.out "Bus Join2.in1" as Connection1054
            }
            [
                position = 8792, 8928
                size = 136, 120
            ]

            component Subsystem MS_230V_CB {
                layout = dynamic
                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8280, 8224
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8192, 8160
                ]

                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8136, 8128
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1053
                connect Close.out "Bus Join2.in" as Connection1051
                connect Open.out "Bus Join2.in1" as Connection1052
            }
            [
                position = 8792, 9088
                size = 136, 120
            ]

            component Subsystem Fans_CB {
                layout = dynamic
                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8256, 8208
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8104, 8096
                ]

                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8104, 8024
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1064
                connect Close.out "Bus Join2.in" as Connection1063
                connect Open.out "Bus Join2.in1" as Connection1065
            }
            [
                position = 8296, 9392
                size = 136, 120
            ]

            component Subsystem "Thruster1 Control" {
                layout = dynamic
                component src_scada_input ramp_enable {
                    execution_rate = "Ts"
                    max = "1.0"
                    min = "0.0"
                    unit = ""
                }
                [
                    position = 8008, 7952
                ]

                component sys_signal_switch "Signal switch1" {
                    criterion = "ctrl > threshold"
                    threshold = "0.5"
                }
                [
                    position = 8208, 8120
                    hide_name = True
                ]

                component src_scada_input reset {
                    execution_rate = "Ts"
                    unit = ""
                }
                [
                    position = 8056, 8232
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 8344, 8336
                    rotation = right
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch2" {
                    criterion = "ctrl > threshold"
                    threshold = "0.5"
                }
                [
                    position = 8208, 8248
                    hide_name = True
                ]

                component src_scada_input blade_pitch {
                    execution_rate = "Ts"
                    max = "100.0"
                    min = "0.0"
                    unit = "%"
                }
                [
                    position = 8056, 8104
                ]

                component src_constant zero {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8112, 8136
                ]

                component src_constant one {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8112, 8264
                ]

                component src_constant zero1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8024, 8016
                ]

                component sys_signal_switch "Signal switch3" {
                    criterion = "ctrl > threshold"
                    threshold = "0.5"
                }
                [
                    position = 8120, 8000
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7696, 8040
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op or {
                }
                [
                    position = 8024, 7880
                    hide_name = True
                ]

                component gen_logic_op not {
                    operator = "NOT"
                }
                [
                    position = 7896, 7888
                    hide_name = True
                ]

                port Control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8408
                    rotation = right
                ]

                port Thruster_CB_fb {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7592, 7984
                ]

                tag Goto6 {
                    value = "CB_status"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8128
                    hide_name = True
                ]

                tag Goto7 {
                    value = "dead_bus"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8096
                    hide_name = True
                ]

                tag From4 {
                    value = "CB_status"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7896, 7832
                    hide_name = True
                    size = 68, 20
                ]

                tag From5 {
                    value = "dead_bus"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7800, 7888
                    hide_name = True
                    size = 68, 20
                ]

                tag Goto8 {
                    value = "turn_on"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8192, 7880
                    hide_name = True
                ]

                tag From6 {
                    value = "turn_on"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8136, 8064
                    hide_name = True
                    size = 68, 20
                ]

                tag From7 {
                    value = "turn_on"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8152, 8192
                    hide_name = True
                    size = 68, 20
                ]

                junction Junction1 sp
                [
                    position = 8120, 7880
                ]

                connect "Bus Join1.out" Control as Connection1060
                connect "Bus Join1.in2" "Signal switch2.out" as Connection1059
                connect "Bus Split1.in" Thruster_CB_fb as Connection1083
                connect From6 "Signal switch1.in2" as Connection1094
                connect From7 "Signal switch2.in2" as Connection1095
                connect Goto6 "Bus Split1.out1" as Connection1084
                connect Goto7 "Bus Split1.out" as Connection1085
                connect Goto8 Junction1 as Connection1093
                connect Junction1 "Signal switch3.in2" as Connection1092
                connect "Signal switch1.out" "Bus Join1.in1" as Connection1077
                connect "Signal switch3.out" "Bus Join1.in" as Connection1081
                connect blade_pitch.out "Signal switch1.in" as Connection1066
                connect not.in From5 as Connection1090
                connect one.out "Signal switch2.in1" as Connection1070
                connect or.in From4 as Connection1086
                connect or.out Junction1 as Connection1091
                connect or.in1 not.out as Connection1089
                connect ramp_enable.out "Signal switch3.in" as Connection1080
                connect reset.out "Signal switch2.in" as Connection1069
                connect zero.out "Signal switch1.in1" as Connection1068
                connect zero1.out "Signal switch3.in1" as Connection1079
            }
            [
                position = 8848, 8136
                size = 168, 136
            ]

            component "core/Rate Transition" "Rate Transition20" {
                execution_rate = "Ts"
            }
            [
                position = 8992, 8136
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition21" {
                execution_rate = "Ts"
            }
            [
                position = 8992, 8312
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition22" {
                execution_rate = "Ts"
            }
            [
                position = 8992, 8480
                hide_name = True
                size = 32, 32
            ]

            component Subsystem "Thruster2 Control" {
                layout = dynamic
                component src_constant one {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8112, 8264
                ]

                component src_scada_input blade_pitch {
                    execution_rate = "Ts"
                    max = "100.0"
                    min = "0.0"
                    unit = "%"
                }
                [
                    position = 8056, 8104
                ]

                component src_constant zero {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8112, 8136
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 8344, 8336
                    rotation = right
                    hide_name = True
                ]

                component src_constant zero1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8024, 8016
                ]

                component sys_signal_switch "Signal switch1" {
                    criterion = "ctrl > threshold"
                    threshold = "0.5"
                }
                [
                    position = 8208, 8120
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch3" {
                    criterion = "ctrl > threshold"
                    threshold = "0.5"
                }
                [
                    position = 8120, 8000
                    hide_name = True
                ]

                component gen_logic_op not {
                    operator = "NOT"
                }
                [
                    position = 7896, 7888
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch2" {
                    criterion = "ctrl > threshold"
                    threshold = "0.5"
                }
                [
                    position = 8208, 8248
                    hide_name = True
                ]

                component gen_logic_op or {
                }
                [
                    position = 8024, 7880
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7696, 8040
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input ramp_enable {
                    execution_rate = "Ts"
                    max = "1.0"
                    min = "0.0"
                    unit = ""
                }
                [
                    position = 8008, 7952
                ]

                component src_scada_input reset {
                    execution_rate = "Ts"
                    unit = ""
                }
                [
                    position = 8056, 8232
                ]

                port Control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8408
                    rotation = right
                ]

                port Thruster_CB_fb {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7592, 7984
                ]

                tag From7 {
                    value = "turn_on"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8152, 8192
                    hide_name = True
                    size = 68, 20
                ]

                tag Goto6 {
                    value = "CB_status"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8128
                    hide_name = True
                ]

                tag From4 {
                    value = "CB_status"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7896, 7832
                    hide_name = True
                    size = 68, 20
                ]

                tag Goto8 {
                    value = "turn_on"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8192, 7880
                    hide_name = True
                ]

                tag Goto7 {
                    value = "dead_bus"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8096
                    hide_name = True
                ]

                tag From6 {
                    value = "turn_on"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8136, 8064
                    hide_name = True
                    size = 68, 20
                ]

                tag From5 {
                    value = "dead_bus"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7800, 7888
                    hide_name = True
                    size = 68, 20
                ]

                junction Junction1 sp
                [
                    position = 8120, 7880
                ]

                connect "Bus Join1.out" Control as Connection1060
                connect "Bus Join1.in2" "Signal switch2.out" as Connection1059
                connect "Bus Split1.in" Thruster_CB_fb as Connection1083
                connect From6 "Signal switch1.in2" as Connection1094
                connect From7 "Signal switch2.in2" as Connection1095
                connect Goto6 "Bus Split1.out1" as Connection1084
                connect Goto7 "Bus Split1.out" as Connection1085
                connect Goto8 Junction1 as Connection1093
                connect Junction1 "Signal switch3.in2" as Connection1092
                connect "Signal switch1.out" "Bus Join1.in1" as Connection1077
                connect "Signal switch3.out" "Bus Join1.in" as Connection1081
                connect blade_pitch.out "Signal switch1.in" as Connection1066
                connect not.in From5 as Connection1090
                connect one.out "Signal switch2.in1" as Connection1070
                connect or.in From4 as Connection1086
                connect or.out Junction1 as Connection1091
                connect or.in1 not.out as Connection1089
                connect ramp_enable.out "Signal switch3.in" as Connection1080
                connect reset.out "Signal switch2.in" as Connection1069
                connect zero.out "Signal switch1.in1" as Connection1068
                connect zero1.out "Signal switch3.in1" as Connection1079
            }
            [
                position = 8848, 8312
                size = 168, 136
            ]

            component Subsystem "Thruster3 Control" {
                layout = dynamic
                component src_constant one {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8112, 8264
                ]

                component src_scada_input blade_pitch {
                    execution_rate = "Ts"
                    max = "100.0"
                    min = "0.0"
                    unit = "%"
                }
                [
                    position = 8056, 8104
                ]

                component src_constant zero {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8112, 8136
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 8344, 8336
                    rotation = right
                    hide_name = True
                ]

                component src_constant zero1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 8024, 8016
                ]

                component sys_signal_switch "Signal switch1" {
                    criterion = "ctrl > threshold"
                    threshold = "0.5"
                }
                [
                    position = 8208, 8120
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch3" {
                    criterion = "ctrl > threshold"
                    threshold = "0.5"
                }
                [
                    position = 8120, 8000
                    hide_name = True
                ]

                component gen_logic_op not {
                    operator = "NOT"
                }
                [
                    position = 7896, 7888
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch2" {
                    criterion = "ctrl > threshold"
                    threshold = "0.5"
                }
                [
                    position = 8208, 8248
                    hide_name = True
                ]

                component gen_logic_op or {
                }
                [
                    position = 8024, 7880
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7696, 8040
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input ramp_enable {
                    execution_rate = "Ts"
                    max = "1.0"
                    min = "0.0"
                    unit = ""
                }
                [
                    position = 8008, 7952
                ]

                component src_scada_input reset {
                    execution_rate = "Ts"
                    unit = ""
                }
                [
                    position = 8056, 8232
                ]

                port Control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8408
                    rotation = right
                ]

                port Thruster_CB_fb {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7592, 7984
                ]

                tag From7 {
                    value = "turn_on"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8152, 8192
                    hide_name = True
                    size = 68, 20
                ]

                tag Goto6 {
                    value = "CB_status"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8128
                    hide_name = True
                ]

                tag From4 {
                    value = "CB_status"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7896, 7832
                    hide_name = True
                    size = 68, 20
                ]

                tag Goto8 {
                    value = "turn_on"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8192, 7880
                    hide_name = True
                ]

                tag Goto7 {
                    value = "dead_bus"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8096
                    hide_name = True
                ]

                tag From6 {
                    value = "turn_on"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8136, 8064
                    hide_name = True
                    size = 68, 20
                ]

                tag From5 {
                    value = "dead_bus"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7800, 7888
                    hide_name = True
                    size = 68, 20
                ]

                junction Junction1 sp
                [
                    position = 8120, 7880
                ]

                connect "Bus Join1.out" Control as Connection1060
                connect "Bus Join1.in2" "Signal switch2.out" as Connection1059
                connect "Bus Split1.in" Thruster_CB_fb as Connection1083
                connect From6 "Signal switch1.in2" as Connection1094
                connect From7 "Signal switch2.in2" as Connection1095
                connect Goto6 "Bus Split1.out1" as Connection1084
                connect Goto7 "Bus Split1.out" as Connection1085
                connect Goto8 Junction1 as Connection1093
                connect Junction1 "Signal switch3.in2" as Connection1092
                connect "Signal switch1.out" "Bus Join1.in1" as Connection1077
                connect "Signal switch3.out" "Bus Join1.in" as Connection1081
                connect blade_pitch.out "Signal switch1.in" as Connection1066
                connect not.in From5 as Connection1090
                connect one.out "Signal switch2.in1" as Connection1070
                connect or.in From4 as Connection1086
                connect or.out Junction1 as Connection1091
                connect or.in1 not.out as Connection1089
                connect ramp_enable.out "Signal switch3.in" as Connection1080
                connect reset.out "Signal switch2.in" as Connection1069
                connect zero.out "Signal switch1.in1" as Connection1068
                connect zero1.out "Signal switch3.in1" as Connection1079
            }
            [
                position = 8848, 8480
                size = 168, 136
            ]

            component Subsystem Propulsion_CB {
                layout = dynamic
                component src_scada_input Open {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8128, 8096
                ]

                component gen_bus_join "Bus Join2" {
                }
                [
                    position = 8280, 8216
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input Close {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8128, 8032
                ]

                port CB_control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8280
                ]

                connect "Bus Join2.out" CB_control as Connection1064
                connect Close.out "Bus Join2.in" as Connection1063
                connect Open.out "Bus Join2.in1" as Connection1065
            }
            [
                position = 8296, 9544
                size = 136, 120
            ]

            component Subsystem PMS_Control {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "7"
                }
                [
                    position = 8360, 8296
                    rotation = right
                    hide_name = True
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7880, 8232
                    hide_name = True
                    scale = 1, -1
                ]

                component tm_delay "Unit Delay1" {
                }
                [
                    position = 8424, 8360
                    hide_name = True
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "4"
                }
                [
                    position = 7936, 7912
                    rotation = right
                    hide_name = True
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "4"
                }
                [
                    position = 7792, 7912
                    rotation = right
                    hide_name = True
                ]

                component tm_delay "Unit Delay3" {
                }
                [
                    position = 8424, 8432
                    hide_name = True
                ]

                component Subsystem Power_Mng {
                    layout = dynamic
                    component gen_c_function "C function1" {
                        global_variables = "real counter;real counter1;real counter2;"
                        in_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        in_terminal_dimensions_str = "P_dg1 inherit;Q_dg1 inherit;on_dg1 inherit;GCB_dg1 inherit;P_dg2 inherit;Q_dg2 inherit;on_dg2 inherit;GCB_dg2 inherit;CB_bus inherit"
                        in_terminal_labels = "[(\'P_dg1\', True), (\'Q_dg1\', True), (\'on_dg1\', True), (\'GCB_dg1\', True), (\'P_dg2\', True), (\'Q_dg2\', True), (\'on_dg2\', True), (\'GCB_dg2\', True), (\'CB_bus\', True)]"
                        in_terminal_properties = "real P_dg1;inherit Q_dg1;inherit on_dg1;inherit GCB_dg1;inherit P_dg2;inherit Q_dg2;inherit on_dg2;inherit GCB_dg2;inherit CB_bus;"
                        init_fnc = "/*Begin code section*/
turnOn_dg2 = 0;
opMode_dg2 = 0;
cMode_dg2 = 0;
CB_close = 0.0;
Pref_dg2 = 0.0;
counter = 0;
counter1 = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                        out_terminal_dimensions_str = "turnOn_dg2 inherit;opMode_dg2 inherit;cMode_dg2 inherit;Pref_dg2 inherit;Qref_dg2 inherit;CB_close inherit"
                        out_terminal_labels = "[(\'turnOn_dg2\', True), (\'opMode_dg2\', True), (\'cMode_dg2\', True), (\'Pref_dg2\', True), (\'Qref_dg2\', True), (\'CB_close\', True)]"
                        out_terminal_properties = "real turnOn_dg2;inherit opMode_dg2;inherit cMode_dg2;inherit Pref_dg2;inherit Qref_dg2;inherit CB_close;"
                        output_fnc = "/*Begin code section*/
if(CB_bus){
    CB_close = 0;
}

if(on_dg1 && GCB_dg1){
    if((GCB_dg2 == 0) && P_dg1> 1.614e6){
        counter1 += execution_rate;
        if(counter1 > 5){
            turnOn_dg2 = 1;
            cMode_dg2 = 2;
            Pref_dg2 = 0.134e6;
            Qref_dg2 = -0.0406e6;
            counter1 -= counter1;
            if(CB_bus){
                opMode_dg2 = 1;
            }
            else{
                opMode_dg2 = 2;
                CB_close = 1;
            }
        }
    }
    else if((GCB_dg2 == 0) && (P_dg1< 1.614e6) && (on_dg2==1)){
        counter2 += execution_rate;
        if(counter2>15){
            turnOn_dg2 = 0;
            counter2 -= counter2;
        }
    }
    else{
        counter1 -= counter1;
        if((on_dg2==1) && (GCB_dg2 == 1) && CB_bus){
        opMode_dg2 = 1;
            if((P_dg1 + P_dg2) < 1.75e6){
                Pref_dg2 = 0.1345e6;
                Qref_dg2 = 0.0;
                if((fabs(P_dg2)<0.16e6) && (fabs(P_dg2)>0.10e6) && (fabs(Q_dg2)<0.03e6)){
                    counter += execution_rate;
                    if(counter>5){
                        opMode_dg2 = 0;
                    }
                }
                else{
                    counter -= counter;
                }
            }
            else{
                Pref_dg2 = (P_dg1+P_dg2)/2.0;
                Qref_dg2 = (Q_dg1+Q_dg2)/2.0;
            }
        }
        else if((on_dg2==1) && (GCB_dg2 == 1)) { 
            CB_close = 1;
        }
    }
}
/*End code section*/"
                    }
                    [
                        position = 8216, 8200
                        size = 192, 200
                    ]

                    component gen_z_domain_transfer LPF_P {
                        a_coeff = "[1.0/(2*np.pi*1),1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8728, 8248
                        rotation = right
                    ]

                    component gen_z_domain_transfer LPF_Q {
                        a_coeff = "[1.0/(2*np.pi*1),1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8576, 8280
                        rotation = right
                    ]

                    component gen_c_function delay {
                        global_variables = "real counter;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
out = 0.0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
if(in>0){
    counter+= Ts;
}
else{
    counter = 0.0;
    out = in;
}

if(counter>10.0){
    out = in;
}
/*End code section*/"
                        parameters = "real Ts;"
                    }
                    [
                        position = 8448, 8344
                        rotation = right
                        size = 64, 56
                    ]

                    port P_DG1 {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8056, 8056
                        rotation = right
                    ]

                    port P_DG2 {
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7816, 8328
                        rotation = left
                    ]

                    port Q_DG1 {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8016, 8104
                        rotation = right
                    ]

                    port "DG2 OP mode" {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8432, 8104
                        rotation = left
                    ]

                    port DG2_GCB {
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7952, 8288
                        rotation = left
                    ]

                    port DG2_Qref {
                        position = right:5
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8576, 8336
                        rotation = right
                    ]

                    port "DG2 Control Mode" {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8552, 8064
                        rotation = left
                    ]

                    port DG1_On {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7952, 8056
                        rotation = right
                    ]

                    port "CB bus close" {
                        position = right:6
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8432
                        rotation = right
                    ]

                    port "Bus CB" {
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8328
                        rotation = left
                    ]

                    port DG2_on {
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7928, 8328
                        rotation = left
                    ]

                    port DG1_GCB {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7920, 8104
                        rotation = right
                    ]

                    port Q_DG2 {
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7856, 8288
                        rotation = left
                    ]

                    port DG2_Pref {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8728, 8312
                        rotation = right
                    ]

                    port "Turn DG2 on" {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8392, 8064
                        rotation = left
                    ]

                    connect "C function1.CB_bus" "Bus CB" as Connection12
                    connect "C function1.GCB_dg1" DG1_GCB as Connection9
                    connect "C function1.on_dg1" DG1_On as Connection13
                    connect "C function1.cMode_dg2" "DG2 Control Mode" as Connection2
                    connect "C function1.opMode_dg2" "DG2 OP mode" as Connection6
                    connect "C function1.GCB_dg2" DG2_GCB as Connection14
                    connect "C function1.on_dg2" DG2_on as Connection15
                    connect "C function1.Pref_dg2" LPF_P.in as Connection16
                    connect "C function1.Qref_dg2" LPF_Q.in as Connection18
                    connect "C function1.P_dg1" P_DG1 as Connection3
                    connect "C function1.P_dg2" P_DG2 as Connection5
                    connect "C function1.Q_dg1" Q_DG1 as Connection1
                    connect "C function1.Q_dg2" Q_DG2 as Connection11
                    connect "C function1.turnOn_dg2" "Turn DG2 on" as Connection4
                    connect LPF_P.out DG2_Pref as Connection17
                    connect LPF_Q.out DG2_Qref as Connection19
                    connect delay.in "C function1.CB_close" as Connection20
                    connect delay.out "CB bus close" as Connection21
                }
                [
                    position = 8104, 8088
                    size = 192, 200
                ]

                port "Bus CB Meas" {
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7768, 8232
                ]

                port "Bus CB control" {
                    position = right:13
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8520, 8432
                ]

                port "DG2 meas" {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7736, 7832
                ]

                port "DG1 meas" {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7880, 7832
                ]

                port "DG2 control" {
                    position = right:11
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8520, 8360
                ]

                tag Goto1 {
                    value = "bus_CB_close"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8280, 8168
                    hide_name = True
                    size = 85, 20
                ]

                tag From1 {
                    value = "bus_CB_close"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 8432
                    hide_name = True
                    size = 84, 20
                ]

                tag Goto3 {
                    value = "dg2_opMode"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8280, 8040
                    hide_name = True
                    size = 85, 20
                ]

                tag From5 {
                    value = "dg2_opMode"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8392, 8184
                    rotation = right
                    hide_name = True
                    size = 78, 20
                ]

                connect "Bus CB Meas" "Bus Split1.in" as Connection1025
                connect "Bus Join1.in6" "Bus Split1.out" as Connection919
                connect "Bus Join1.in2" "Power_Mng.DG2 Control Mode" as Connection1024
                connect "Bus Join1.in3" Power_Mng.DG2_Pref as Connection1021
                connect "Bus Join1.out" "Unit Delay1.in" as Connection920
                connect "Bus Split1.out1" "Bus Join1.in5" as Connection918
                connect "Bus Split1.out2" "Power_Mng.Bus CB" as Connection1077
                connect "Bus Split2.out" Power_Mng.P_DG1 as Connection1026
                connect "Bus Split2.out1" Power_Mng.Q_DG1 as Connection1027
                connect "Bus Split2.out2" Power_Mng.DG1_On as Connection1028
                connect "Bus Split2.out3" Power_Mng.DG1_GCB as Connection1147
                connect "Bus Split3.out" Power_Mng.P_DG2 as Connection1031
                connect "Bus Split3.out1" Power_Mng.Q_DG2 as Connection1032
                connect "Bus Split3.out2" Power_Mng.DG2_on as Connection1033
                connect "Bus Split3.out3" Power_Mng.DG2_GCB as Connection1148
                connect "DG1 meas" "Bus Split2.in" as Connection1030
                connect "DG2 control" "Unit Delay1.out" as Connection1080
                connect "DG2 meas" "Bus Split3.in" as Connection1035
                connect From1 "Unit Delay3.in" as Connection1078
                connect From5 "Bus Join1.in1" as Connection1100
                connect Goto3 "Power_Mng.DG2 OP mode" as Connection1094
                connect "Power_Mng.Turn DG2 on" "Bus Join1.in" as Connection1019
                connect Power_Mng.DG2_Qref "Bus Join1.in4" as Connection1023
                connect "Power_Mng.CB bus close" Goto1 as Connection1022
                connect "Unit Delay3.out" "Bus CB control" as Connection1079

                Ts = "Ts_PMS"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "0"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 7280, 8384
                size = 224, 168
            ]

            component Subsystem Diesel_Gen2_Control {
                layout = dynamic
                component src_scada_input Gen_OP_mode {
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "2"
                    min = "0"
                    unit = ""
                }
                [
                    position = 7984, 8032
                ]

                component src_scada_input Pref {
                    addr = "1427111936"
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "1000000.0"
                    min = "-1000000.0"
                    unit = ""
                }
                [
                    position = 7896, 7824
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "7"
                }
                [
                    position = 7520, 7880
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch5" {
                    criterion = "ctrl > threshold"
                }
                [
                    position = 8184, 8152
                    hide_name = True
                ]

                component src_scada_input Qref {
                    addr = "1427111948"
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "1000000.0"
                    min = "-1000000.0"
                    unit = ""
                }
                [
                    position = 7896, 7928
                ]

                component sys_signal_switch "Signal switch4" {
                    criterion = "ctrl > threshold"
                }
                [
                    position = 8184, 8048
                    hide_name = True
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 8184, 7664
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch3" {
                    criterion = "ctrl > threshold"
                }
                [
                    position = 8096, 7944
                    hide_name = True
                ]

                component src_scada_input wref {
                    addr = "1427111952"
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "1000000.0"
                    min = "-1000000.0"
                    unit = ""
                }
                [
                    position = 7984, 7728
                ]

                component src_scada_input Gen_On {
                    addr = "1427111952"
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 7984, 7576
                ]

                component sys_signal_switch "Signal switch2" {
                    criterion = "ctrl > threshold"
                }
                [
                    position = 8096, 7840
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch1" {
                    criterion = "ctrl > threshold"
                }
                [
                    position = 8184, 7592
                    hide_name = True
                ]

                component gen_gain Gain2 {
                    gain = "1.0/Sb"
                }
                [
                    position = 8032, 7960
                    hide_name = True
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 8184, 7736
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    gain = "1.0/Sb"
                }
                [
                    position = 8032, 7856
                    hide_name = True
                ]

                component src_scada_input Gen_Control_Mode {
                    addr = "1427111944"
                    execution_rate = "Ts"
                    max = "2"
                    min = "0"
                    unit = ""
                }
                [
                    position = 7984, 8136
                ]

                component src_scada_input Local_control {
                    addr = "1427111952"
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8080, 7504
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "9"
                }
                [
                    position = 8280, 8432
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input Vref {
                    addr = "1427111940"
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "1000000.0"
                    min = "-1000000.0"
                    unit = "pu"
                }
                [
                    position = 7984, 7656
                ]

                component src_scada_input Load_share_on {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8160, 8216
                ]

                component src_scada_input Load_share {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8112, 8272
                ]

                component gen_c_function getPF {
                    global_variables = "real x;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "P inherit;Q inherit"
                    in_terminal_labels = "False;False;"
                    in_terminal_properties = "real P;inherit Q;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "pf inherit"
                    out_terminal_labels = "False;"
                    out_terminal_properties = "real pf;"
                    output_fnc = "/*Begin code section*/
if(fabs(P)>0.1){
    x = P*P+Q*Q;
    if(Q>=0){
        pf = P/sqrt(x);
    }
    else{
        pf = -P/sqrt(x);
    }
}
else{
    pf = 1;
}
/*End code section*/"
                }
                [
                    position = 8240, 7936
                    size = 48, 48
                ]

                port Control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8280, 8504
                    rotation = right
                ]

                port Input {
                    position = auto:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7416, 7880
                ]

                tag From8 {
                    value = "OP_mode"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8096, 8064
                    hide_name = True
                ]

                tag Goto5 {
                    value = "Qref"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7608, 7896
                    hide_name = True
                ]

                tag From4 {
                    value = "Pref"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7952, 7856
                    hide_name = True
                ]

                tag From9 {
                    value = "local_control"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8104, 8000
                    hide_name = True
                    size = 77, 20
                ]

                tag Goto1 {
                    value = "Gen_On"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7608, 7832
                    hide_name = True
                ]

                tag Goto8 {
                    value = "local_control"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8264, 7504
                    hide_name = True
                    size = 85, 20
                ]

                tag From5 {
                    value = "local_control"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8016, 7792
                    hide_name = True
                    size = 77, 20
                ]

                tag From6 {
                    value = "Qref"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7952, 7960
                    hide_name = True
                ]

                tag Goto2 {
                    value = "OP_mode"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7680, 7848
                    hide_name = True
                ]

                tag Goto7 {
                    value = "wref"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7608, 7928
                    hide_name = True
                    size = 61, 20
                ]

                tag From1 {
                    value = "Gen_On"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8096, 7608
                    hide_name = True
                ]

                tag From11 {
                    value = "cMode"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8096, 8168
                    hide_name = True
                ]

                tag Goto6 {
                    value = "Vref"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7680, 7912
                    hide_name = True
                ]

                tag Goto3 {
                    value = "cMode"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7608, 7864
                    hide_name = True
                ]

                tag From10 {
                    value = "local_control"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8104, 8104
                    hide_name = True
                    size = 77, 20
                ]

                tag From7 {
                    value = "local_control"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8016, 7896
                    hide_name = True
                    size = 77, 20
                ]

                tag From3 {
                    value = "wref"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8096, 7744
                    hide_name = True
                ]

                tag From2 {
                    value = "Vref"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8096, 7672
                    hide_name = True
                ]

                tag Goto4 {
                    value = "Pref"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7680, 7880
                    hide_name = True
                ]

                junction Junction1 sp
                [
                    position = 8184, 7504
                ]

                junction Junction2 sp
                [
                    position = 8176, 7840
                ]

                connect "Bus Join2.out" Control as Connection827
                connect From1 "Signal switch1.in1" as Connection847
                connect From10 "Signal switch5.in2" as Connection867
                connect From11 "Signal switch5.in1" as Connection866
                connect From2 Sum2.in1 as Connection848
                connect From3 Sum1.in1 as Connection849
                connect From4 Gain1.in as Connection870
                connect From5 "Signal switch2.in2" as Connection857
                connect From6 Gain2.in as Connection872
                connect From7 "Signal switch3.in2" as Connection859
                connect From8 "Signal switch4.in1" as Connection862
                connect From9 "Signal switch4.in2" as Connection863
                connect Gain1.out "Signal switch2.in1" as Connection871
                connect Gain2.out "Signal switch3.in1" as Connection873
                connect Gen_Control_Mode.out "Signal switch5.in" as Connection868
                connect Gen_OP_mode.out "Signal switch4.in" as Connection864
                connect Gen_On.out "Signal switch1.in" as Connection837
                connect Goto1 "Bus Split1.out" as Connection840
                connect Goto2 "Bus Split1.out1" as Connection841
                connect Goto3 "Bus Split1.out2" as Connection842
                connect Goto4 "Bus Split1.out3" as Connection843
                connect Goto5 "Bus Split1.out4" as Connection844
                connect Goto6 "Bus Split1.out5" as Connection845
                connect Goto7 "Bus Split1.out6" as Connection846
                connect Goto8 Junction1 as Connection856
                connect Input "Bus Split1.in" as Connection828
                connect Junction1 "Signal switch1.in2" as Connection855
                connect Junction2 "Bus Join2.in3" as Connection882
                [
                    breakpoints = 8296, 7840; 8296, 8008
                ]
                connect Junction2 "Signal switch2.out" as Connection881
                [
                    breakpoints = 8176, 7840
                ]
                connect Load_share.out "Bus Join2.in8" as Connection826
                connect Load_share_on.out "Bus Join2.in7" as Connection825
                connect Local_control.out Junction1 as Connection854
                connect Pref.out "Signal switch2.in" as Connection852
                connect Qref.out "Signal switch3.in" as Connection860
                connect "Signal switch1.out" "Bus Join2.in" as Connection839
                connect "Signal switch4.out" "Bus Join2.in5" as Connection865
                connect "Signal switch5.out" "Bus Join2.in6" as Connection869
                connect Sum1.out "Bus Join2.in2" as Connection830
                connect Sum1.in wref.out as Connection831
                connect Sum2.out "Bus Join2.in1" as Connection833
                connect Vref.out Sum2.in as Connection834
                connect getPF.pf "Bus Join2.in4" as Connection875
                connect getPF.P Junction2 as Connection880
                connect getPF.Q "Signal switch3.out" as Connection874

                Sb = "2.69e6"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    Sb {
                        label = "DG nominal power"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "VA"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8296, 8336
                size = 192, 152
            ]

            component Subsystem Diesel_Gen1_Control {
                layout = dynamic
                component src_scada_input Load_share {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8112, 8272
                ]

                component src_scada_input Qref {
                    addr = "1427111948"
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "1000000.0"
                    min = "-1000000.0"
                    unit = ""
                }
                [
                    position = 8120, 8016
                ]

                component src_scada_input Pref {
                    addr = "1427111936"
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "1000000.0"
                    min = "-1000000.0"
                    unit = ""
                }
                [
                    position = 8120, 7944
                ]

                component src_scada_input Vref {
                    addr = "1427111940"
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "1000000.0"
                    min = "-1000000.0"
                    unit = "pu"
                }
                [
                    position = 8160, 7832
                ]

                component src_scada_input Gen_OP_mode {
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "2"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8120, 8096
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "9"
                }
                [
                    position = 8280, 8432
                    rotation = right
                    hide_name = True
                ]

                component src_scada_input Load_share_on {
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8160, 8216
                ]

                component src_scada_input Gen_On {
                    addr = "1427111952"
                    execution_rate = "Ts"
                    max = "1"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8120, 7808
                ]

                component src_scada_input wref {
                    addr = "1427111952"
                    def_value = "1"
                    execution_rate = "Ts"
                    max = "1000000.0"
                    min = "-1000000.0"
                    unit = ""
                }
                [
                    position = 8120, 7872
                ]

                component src_scada_input Gen_Control_Mode {
                    addr = "1427111944"
                    execution_rate = "Ts"
                    max = "2"
                    min = "0"
                    unit = ""
                }
                [
                    position = 8120, 8160
                ]

                component gen_c_function getPF {
                    global_variables = "real x;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "P inherit;Q inherit"
                    in_terminal_labels = "False;False;"
                    in_terminal_properties = "real P;inherit Q;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "pf inherit"
                    out_terminal_labels = "False;"
                    out_terminal_properties = "real pf;"
                    output_fnc = "/*Begin code section*/
if(fabs(P)>0.1){
    x = P*P+Q*Q;
    if(Q>=0){
        pf = P/sqrt(x);
    }
    else{
        pf = -P/sqrt(x);
    }
}
else{
    pf = 1;
}
/*End code section*/"
                }
                [
                    position = 8208, 8008
                    size = 48, 48
                ]

                port Control {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8280, 8504
                    rotation = right
                ]

                junction Junction1 sp
                [
                    position = 8168, 7944
                ]

                connect "Bus Join2.out" Control as Connection827
                connect Gen_Control_Mode.out "Bus Join2.in6" as Connection235
                connect Gen_OP_mode.out "Bus Join2.in5" as Connection841
                connect Gen_On.out "Bus Join2.in" as Connection230
                connect Junction1 "Bus Join2.in3" as Connection839
                [
                    breakpoints = 8296, 7944; 8296, 8192
                ]
                connect Load_share.out "Bus Join2.in8" as Connection826
                connect Load_share_on.out "Bus Join2.in7" as Connection825
                connect Pref.out Junction1 as Connection838
                connect Vref.out "Bus Join2.in1" as Connection231
                connect getPF.pf "Bus Join2.in4" as Connection837
                connect getPF.P Junction1 as Connection840
                connect getPF.Q Qref.out as Connection836
                connect wref.out "Bus Join2.in2" as Connection232
            }
            [
                position = 8296, 8144
                size = 192, 152
            ]

            port "Bus CB control" {
                position = right:13
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8512, 8760
            ]

            port "Thruster1_CB control" {
                position = right:14
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8512, 8920
            ]

            port "Thruster2_CB control" {
                position = right:15
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8512, 9080
            ]

            port "Thruster3_CB control" {
                position = right:16
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8512, 9240
            ]

            port "Trafo1_CB control" {
                position = right:21
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8976, 9240
            ]

            port "Trafo2_CB control" {
                position = right:22
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8976, 9400
            ]

            port "Trafo3_CB control" {
                position = right:23
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8976, 9552
            ]

            port "EMS_MS_440V_CB control" {
                position = right:18
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8968, 8768
            ]

            port "EMS_MS_230V_CB control" {
                position = right:19
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8968, 8928
            ]

            port "MS_230V_CB control" {
                position = right:20
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8968, 9088
            ]

            port "Fans_CB control" {
                position = right:17
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8512, 9392
            ]

            port "Bus CB Meas" {
                position = left:4
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6064, 8416
            ]

            port "Thruster1 CB fb" {
                position = left:5
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6064, 8496
            ]

            port "Thruster2 CB fb" {
                position = left:6
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6064, 8552
            ]

            port "Thruster3 CB fb" {
                position = left:7
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6064, 8608
            ]

            port "Thstr1 Control" {
                position = right:24
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9064, 8136
            ]

            port "Thstr2 Control" {
                position = right:25
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9064, 8312
            ]

            port "Thstr3 Control" {
                position = right:26
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9064, 8480
            ]

            port "Propulsion_CB control" {
                position = right:27
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8512, 9544
            ]

            port "DG2 meas" {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6064, 8320
            ]

            port "DG1 meas" {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6064, 8224
            ]

            port "DG2 control" {
                position = right:11
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8488, 8336
            ]

            port "DG1 control" {
                position = right:10
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8488, 8144
            ]

            tag Goto2 {
                value = "DG1_meas"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 6456, 8224
                hide_name = True
            ]

            tag Goto3 {
                value = "DG2_meas"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 6456, 8320
                hide_name = True
            ]

            tag Goto4 {
                value = "Bus_CB_meas"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 6264, 8416
                hide_name = True
                size = 78, 20
            ]

            tag From4 {
                value = "DG1_meas"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7048, 8320
                hide_name = True
                size = 93, 20
            ]

            tag From5 {
                value = "DG2_meas"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7048, 8384
                hide_name = True
                size = 93, 20
            ]

            tag From6 {
                value = "Bus_CB_meas"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7048, 8448
                hide_name = True
                size = 93, 20
            ]

            tag Goto7 {
                value = "DG2_control"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7480, 8320
                hide_name = True
            ]

            tag Goto9 {
                value = "Bus_CB_control"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7496, 8448
                hide_name = True
                size = 82, 20
            ]

            tag From9 {
                value = "DG2_control"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8024, 8336
                hide_name = True
                size = 93, 20
            ]

            tag From11 {
                value = "Bus_CB_control"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8032, 8760
                hide_name = True
                size = 93, 20
            ]

            tag Goto14 {
                value = "thst1_CB_fb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 6176, 8496
                hide_name = True
                size = 78, 20
            ]

            tag Goto15 {
                value = "thst2_CB_fb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 6176, 8552
                hide_name = True
                size = 78, 20
            ]

            tag Goto16 {
                value = "thst3_CB_fb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 6176, 8608
                hide_name = True
                size = 78, 20
            ]

            tag From16 {
                value = "thst1_CB_fb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8680, 8136
                hide_name = True
                size = 93, 20
            ]

            tag From17 {
                value = "thst2_CB_fb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8680, 8312
                hide_name = True
                size = 93, 20
            ]

            tag From18 {
                value = "thst3_CB_fb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8680, 8480
                hide_name = True
                size = 93, 20
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt;">Inputs</span></p></body></html> ENDCOMMENT 
            [
                position = 6208, 7944
            ]

            comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt;">PMS Control</span></p></body></html> ENDCOMMENT 
            [
                position = 7184, 7960
            ]

            comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt;">Device Control Panels</span></p></body></html> ENDCOMMENT 
            [
                position = 8424, 7960
            ]

            connect Bus_CB.CB_control "Bus CB control" as Connection1002
            connect "DG1 control" Diesel_Gen1_Control.Control as Connection1
            connect "DG1 meas" "Rate Transition1.in" as Connection926
            connect "DG2 control" Diesel_Gen2_Control.Control as Connection2
            connect EMS_MS_230V_CB.CB_control "EMS_MS_230V_CB control" as Connection1020
            connect EMS_MS_440V_CB.CB_control "EMS_MS_440V_CB control" as Connection1018
            connect Fans_CB.CB_control "Fans_CB control" as Connection1024
            connect From11 "Rate Transition5.in" as Connection1048
            connect From16 "Thruster1 Control.Thruster_CB_fb" as Connection1059
            connect From4 "PMS_Control.DG1 meas" as Connection1033
            connect From5 "PMS_Control.DG2 meas" as Connection1032
            connect From6 "PMS_Control.Bus CB Meas" as Connection1031
            connect From9 "Rate Transition6.in" as Connection1046
            connect Goto14 "Thruster1 CB fb" as Connection1056
            connect Goto15 "Thruster2 CB fb" as Connection1057
            connect Goto16 "Thruster3 CB fb" as Connection1058
            connect Goto2 SignalSelect.Out as Connection997
            connect Goto3 SignalSelect1.Out as Connection999
            connect Goto4 "Rate Transition3.out" as Connection1001
            connect Goto7 "PMS_Control.DG2 control" as Connection1035
            connect Goto9 "PMS_Control.Bus CB control" as Connection1037
            connect MS_230V_CB.CB_control "MS_230V_CB control" as Connection1022
            connect Propulsion_CB.CB_control "Propulsion_CB control" as Connection1084
            connect "Rate Transition1.out" SignalSelect.In as Connection927
            connect "Rate Transition2.in" "DG2 meas" as Connection929
            connect "Rate Transition20.in" "Thruster1 Control.Control" as Connection1066
            connect "Rate Transition3.in" "Bus CB Meas" as Connection1000
            connect "Rate Transition5.out" Bus_CB.CB_P_mng_cmd as Connection1004
            connect "Rate Transition6.out" Diesel_Gen2_Control.Input as Connection1003
            connect SignalSelect1.In "Rate Transition2.out" as Connection998
            connect Thruster1_CB.CB_control "Thruster1_CB control" as Connection1005
            connect "Thruster2 Control.Thruster_CB_fb" From17 as Connection1078
            connect "Thruster2 Control.Control" "Rate Transition21.in" as Connection1077
            connect Thruster2_CB.CB_control "Thruster2_CB control" as Connection1006
            connect "Thruster3 Control.Thruster_CB_fb" From18 as Connection1080
            connect "Thruster3 Control.Control" "Rate Transition22.in" as Connection1079
            connect Thruster3_CB.CB_control "Thruster3_CB control" as Connection1010
            connect "Thstr1 Control" "Rate Transition20.out" as Connection1065
            connect "Thstr2 Control" "Rate Transition21.out" as Connection1067
            connect "Thstr3 Control" "Rate Transition22.out" as Connection1069
            connect Trafo1_CB.CB_control "Trafo1_CB control" as Connection1012
            connect Trafo2_CB.CB_control "Trafo2_CB control" as Connection1014
            connect Trafo3_CB.CB_control "Trafo3_CB control" as Connection1016

            Ts = "Ts"
            Ts_PMS = "round(Ts*20, 4)"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                Ts_PMS {
                    label = "PMS execution rate"
                    widget = edit
                    type = generic
                    default_value = "0"
                    group = "General"
                }

                Ts {
                    label = "Device control panels execution rate"
                    widget = edit
                    type = generic
                    default_value = "0"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 4384, 6752
            size = 368, 720
        ]

        tag From3 {
            value = "BusCB_Control"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7256, 6368
            rotation = right
            hide_name = True
            size = 99, 20
        ]

        tag Goto4 {
            value = "BusCB_Meas"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7384, 6368
            rotation = left
            hide_name = True
            size = 96, 20
        ]

        tag From8 {
            value = "DG2_outputs"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 4096, 6544
            hide_name = True
            size = 99, 20
        ]

        tag From2 {
            value = "DieselGen2_Control"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8144, 5912
            hide_name = True
            size = 99, 20
        ]

        tag Goto3 {
            value = "BusCB_Control"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6512
            hide_name = True
            size = 96, 20
        ]

        tag Goto7 {
            value = "DG1_outputs"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 5848, 6216
            hide_name = True
            scale = -1, 1
            size = 96, 20
        ]

        tag From4 {
            value = "BusCB_Meas"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 4096, 6688
            hide_name = True
            size = 99, 20
        ]

        tag From1 {
            value = "DieselGen1_Control"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5840, 5912
            hide_name = True
            size = 99, 20
        ]

        tag Goto1 {
            value = "DieselGen1_Control"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6432
            hide_name = True
            size = 96, 20
        ]

        tag Goto2 {
            value = "DieselGen2_Control"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6472
            hide_name = True
            size = 96, 20
        ]

        tag Goto8 {
            value = "DG2_outputs"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8144, 6216
            hide_name = True
            scale = -1, 1
            size = 96, 20
        ]

        tag From7 {
            value = "DG1_outputs"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 4096, 6416
            hide_name = True
            size = 99, 20
        ]

        tag From9 {
            value = "Fans_CB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5328, 6672
            rotation = right
            hide_name = True
            size = 99, 20
        ]

        tag From10 {
            value = "Thruster1_CB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6384, 6592
            rotation = right
            hide_name = True
            size = 99, 20
        ]

        tag From11 {
            value = "Thruster2_CB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6688, 6584
            rotation = right
            hide_name = True
            size = 99, 20
        ]

        tag From12 {
            value = "Thruster3_CB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7952, 6584
            rotation = right
            hide_name = True
            size = 99, 20
        ]

        tag From13 {
            value = "EMS_MS_440V_CB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5744, 7576
            rotation = left
            hide_name = True
            size = 99, 20
        ]

        tag From14 {
            value = "Trafo3_CB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8088, 8592
            hide_name = True
            size = 99, 20
        ]

        tag From15 {
            value = "EMS_MS_230V_CB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9856, 8000
            rotation = right
            hide_name = True
            size = 99, 20
        ]

        tag From16 {
            value = "MS_230V_CB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9280, 7600
            hide_name = True
            size = 99, 20
        ]

        tag From17 {
            value = "Trafo2_CB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8240, 7352
            hide_name = True
            size = 99, 20
        ]

        tag From18 {
            value = "Trafo1_CB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8848, 6944
            hide_name = True
            size = 99, 20
        ]

        tag Goto9 {
            value = "Thruster1_CB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6552
            hide_name = True
            size = 96, 20
        ]

        tag Goto10 {
            value = "Thruster2_CB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6592
            hide_name = True
            size = 96, 20
        ]

        tag Goto11 {
            value = "Thruster3_CB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6632
            hide_name = True
            size = 96, 20
        ]

        tag Goto12 {
            value = "Trafo1_CB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6832
            hide_name = True
            size = 96, 20
        ]

        tag Goto13 {
            value = "Trafo2_CB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6872
            hide_name = True
            size = 96, 20
        ]

        tag Goto14 {
            value = "Trafo3_CB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6912
            hide_name = True
            size = 96, 20
        ]

        tag Goto15 {
            value = "EMS_MS_440V_CB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6712
            hide_name = True
            size = 96, 20
        ]

        tag Goto16 {
            value = "EMS_MS_230V_CB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6752
            hide_name = True
            size = 96, 20
        ]

        tag Goto17 {
            value = "MS_230V_CB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6792
            hide_name = True
            size = 96, 20
        ]

        tag Goto18 {
            value = "Fans_CB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6672
            hide_name = True
            size = 96, 20
        ]

        tag Goto20 {
            value = "Thruster1_CB_fb"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 6384, 6832
            rotation = right
            hide_name = True
            size = 96, 20
        ]

        tag Goto21 {
            value = "Thruster2_CB_fb"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 6688, 6832
            rotation = right
            hide_name = True
            size = 96, 20
        ]

        tag Goto22 {
            value = "Thruster3_CB_fb"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7952, 6816
            rotation = right
            hide_name = True
            size = 96, 20
        ]

        tag From20 {
            value = "Thruster1_CB_fb"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 4096, 6816
            hide_name = True
            size = 99, 20
        ]

        tag From21 {
            value = "Thruster2_CB_fb"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 4096, 6960
            hide_name = True
            size = 99, 20
        ]

        tag From22 {
            value = "Thruster3_CB_fb"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 4096, 7088
            hide_name = True
            size = 99, 20
        ]

        tag Goto25 {
            value = "Thruster1_ctrl"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6952
            hide_name = True
            size = 96, 20
        ]

        tag Goto26 {
            value = "Thruster2_ctrl"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 6992
            hide_name = True
            size = 96, 20
        ]

        tag Goto27 {
            value = "Thruster3_ctrl"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 7032
            hide_name = True
            size = 96, 20
        ]

        tag From23 {
            value = "Thruster1_ctrl"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6352, 6944
            rotation = right
            hide_name = True
            size = 99, 20
        ]

        tag From24 {
            value = "Thruster2_ctrl"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6664, 6944
            rotation = right
            hide_name = True
            size = 99, 20
        ]

        tag From25 {
            value = "Thruster3_ctrl"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7928, 6944
            rotation = right
            hide_name = True
            size = 99, 20
        ]

        tag Goto30 {
            value = "Propulsion_CB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4680, 7072
            hide_name = True
            size = 96, 20
        ]

        tag From27 {
            value = "Propulsion_CB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7584, 6624
            rotation = right
            hide_name = True
            size = 99, 20
        ]

        junction Junction1622 pe
        [
            position = 8280, 6488
        ]

        junction Junction1624 pe
        [
            position = 8416, 6520
        ]

        junction Junction1637 pe
        [
            position = 8336, 6488
        ]

        junction Junction1638 pe
        [
            position = 8376, 6504
        ]

        junction Junction1640 pe
        [
            position = 8760, 6488
        ]

        junction Junction1641 pe
        [
            position = 8744, 6504
        ]

        junction Junction1642 pe
        [
            position = 8728, 6520
        ]

        junction Junction1646 pe
        [
            position = 8936, 7688
        ]

        junction Junction1647 pe
        [
            position = 8952, 7672
        ]

        junction Junction1648 pe
        [
            position = 8968, 7656
        ]

        junction Junction1670 pe
        [
            position = 7144, 8144
        ]

        junction Junction1671 pe
        [
            position = 7128, 8160
        ]

        junction Junction1672 pe
        [
            position = 7112, 8176
        ]

        junction Junction1680 pe
        [
            position = 9872, 7656
        ]

        junction Junction1681 pe
        [
            position = 9856, 7672
        ]

        junction Junction1682 pe
        [
            position = 9840, 7688
        ]

        junction Junction1683 pe
        [
            position = 9520, 8248
        ]

        junction Junction1684 pe
        [
            position = 9544, 8264
        ]

        junction Junction1685 pe
        [
            position = 9568, 8280
        ]

        junction Junction1732 pe
        [
            position = 8376, 6504
        ]

        junction Junction1733 pe
        [
            position = 8472, 6520
        ]

        junction Junction1737 pe
        [
            position = 7672, 6488
        ]

        junction Junction1738 pe
        [
            position = 7688, 6504
        ]

        junction Junction1739 pe
        [
            position = 7704, 6520
        ]

        junction Junction1743 pe
        [
            position = 6672, 8144
        ]

        junction Junction1744 pe
        [
            position = 6656, 8160
        ]

        junction Junction1745 pe
        [
            position = 6640, 8176
        ]

        junction Junction1746 pe
        [
            position = 9080, 7656
        ]

        junction Junction1747 pe
        [
            position = 9120, 7672
        ]

        junction Junction1748 pe
        [
            position = 9160, 7688
        ]

        junction Junction1752 pe
        [
            position = 9792, 7656
        ]

        junction Junction1753 pe
        [
            position = 9568, 7656
        ]

        junction Junction1754 pe
        [
            position = 9608, 7672
        ]

        junction Junction1755 pe
        [
            position = 9648, 7688
        ]

        junction Junction1756 pe
        [
            position = 9776, 7672
        ]

        junction Junction1757 pe
        [
            position = 9760, 7688
        ]

        junction Junction1759 pe
        [
            position = 9776, 8264
        ]

        junction Junction1760 pe
        [
            position = 9760, 8280
        ]

        junction Junction1761 pe
        [
            position = 9792, 8248
        ]

        junction Junction1771 pe
        [
            position = 6752, 6488
        ]

        junction Junction1772 pe
        [
            position = 6768, 6504
        ]

        junction Junction1773 pe
        [
            position = 6784, 6520
        ]

        junction Junction1774 pe
        [
            position = 8024, 6488
        ]

        junction Junction1775 pe
        [
            position = 8040, 6504
        ]

        junction Junction1776 pe
        [
            position = 8056, 6520
        ]

        junction Junction1780 pe
        [
            position = 5424, 6504
        ]

        junction Junction1781 pe
        [
            position = 5440, 6520
        ]

        junction Junction1782 pe
        [
            position = 5408, 6488
        ]

        junction Junction1792 pe
        [
            position = 5984, 6488
        ]

        junction Junction1793 pe
        [
            position = 6080, 6504
        ]

        junction Junction1794 pe
        [
            position = 6176, 6520
        ]

        junction Junction1798 pe
        [
            position = 7048, 6488
        ]

        junction Junction1799 pe
        [
            position = 7032, 6504
        ]

        junction Junction1800 pe
        [
            position = 7016, 6520
        ]

        junction Junction1801 pe
        [
            position = 5864, 6488
        ]

        junction Junction1802 pe
        [
            position = 5904, 6504
        ]

        junction Junction1803 pe
        [
            position = 5944, 6520
        ]

        junction Junction1804 pe
        [
            position = 6432, 6488
        ]

        junction Junction1805 pe
        [
            position = 6448, 6504
        ]

        junction Junction1806 pe
        [
            position = 6464, 6520
        ]

        junction Junction1807 pe
        [
            position = 5672, 6488
        ]

        junction Junction1808 pe
        [
            position = 5656, 6504
        ]

        junction Junction1809 pe
        [
            position = 5640, 6520
        ]

        comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:48pt;">440V Main Switchboard</span></p></body></html> ENDCOMMENT 
        [
            position = 6312, 6328
        ]

        comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:48pt;">230V Main Switchboard</span>     </p></body></html> ENDCOMMENT 
        [
            position = 9024, 7472
        ]

        comment Comment6 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:48pt;">230V Emergency Switchboard</span>     </p></body></html> ENDCOMMENT 
        [
            position = 8736, 8120
        ]

        comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:48pt;">440V Emergency Switchboard</span>     </p></body></html> ENDCOMMENT 
        [
            position = 6704, 8040
        ]

        comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:48pt;">PMS</span></p></body></html> ENDCOMMENT 
        [
            position = 4304, 6280
        ]

        connect "AUX Load 1.C" Junction1748 as Connection3747
        connect "AUX Load 2.A" Junction1753 as Connection3775
        connect "AUX Load 2.B" Junction1754 as Connection3778
        connect "AUX Load 2.C" Junction1755 as Connection3781
        connect "Bus Breaker.a" Junction1737 as Connection3663
        connect "Bus Breaker.b" Junction1738 as Connection3666
        connect "Bus Breaker.c" Junction1739 as Connection3669
        connect "Bus Breaker.B" cpl6.B as Connection4006
        connect Diesel_Gen1.A Irms_GEN1.p_node as Connection3615
        connect Diesel_Gen1.B Junction1793 as Connection4056
        connect Diesel_Gen1.C Junction1794 as Connection4059
        connect Diesel_Gen2.A Irms_GEN2.p_node as Connection3626
        connect Diesel_Gen2.B Junction1732 as Connection3629
        connect Diesel_Gen2.C Junction1733 as Connection3632
        connect "EMS-MS 230V Breaker.A1" Junction1752 as Connection3769
        connect "EMS-MS 230V Breaker.B1" Junction1756 as Connection3784
        connect "EMS-MS 230V Breaker.C1" Junction1757 as Connection3787
        connect "EMS-MS 230V Breaker.B2" Junction1759 as Connection3793
        connect "EMS-MS 230V Breaker.C2" Junction1760 as Connection3796
        connect "EMS-MS 440V Breaker.Inputs" From13 as Connection3712
        connect "EMS-MS 440V Breaker.A1" Junction1807 as Connection4135
        [
            breakpoints = 5680, 7424; 5680, 6488
        ]
        connect "EMS-MS 440V Breaker.B1" Junction1808 as Connection4138
        connect "EMS-MS 440V Breaker.C1" Junction1809 as Connection4141
        connect "EMS-MS 440V Breaker.A2" "RL Section1.P2" as Connection3713
        connect "EMS-MS 440V Breaker.C2" "RL Section1.P6" as Connection3715
        connect "Fans Breaker.b" Fans_Pumps.B as Connection3844
        connect "Fans Breaker.c" Fans_Pumps.C as Connection3845
        connect "Fans Breaker.a" Fans_Pumps.A as Connection3846
        connect "Fans Breaker.Inputs" From9 as Connection3847
        connect "Fans Breaker.B" Junction1780 as Connection3968
        connect "Fans Breaker.C" Junction1781 as Connection3971
        connect "Fans Breaker.A" Junction1782 as Connection3974
        connect From1 Diesel_Gen1.Inputs as Connection3612
        connect From12 "Thruster Breaker 3.Inputs" as Connection3900
        connect From14 "Transformer Breaker 3.Inputs" as Connection3719
        connect From15 "EMS-MS 230V Breaker.Inputs" as Connection3766
        connect From16 "MS 230V Breaker.Inputs" as Connection3759
        connect From17 "Transformer Breaker 2.Inputs" as Connection3705
        connect From18 "Transformer Breaker 1.Inputs" as Connection3807
        connect From2 Diesel_Gen2.Inputs as Connection3624
        connect From20 "PMS.Thruster1 CB fb" as Connection3423
        connect From21 "PMS.Thruster2 CB fb" as Connection3424
        connect From22 "PMS.Thruster3 CB fb" as Connection3425
        connect From23 "Bow Thruster 1.Inputs" as Connection3429
        connect From24 "AFT Thruster.Inputs" as Connection3515
        connect From25 "Bow Thruster 2.Inputs" as Connection3519
        connect From27 "Propulsion Breaker.Inputs" as Connection3880
        connect From3 "Bus Breaker.Inputs" as Connection3670
        connect From4 "PMS.Bus CB Meas" as Connection2931
        connect From7 "PMS.DG1 meas" as Connection3368
        connect From8 "PMS.DG2 meas" as Connection2948
        connect Goto1 "PMS.DG1 control" as Connection2926
        connect Goto10 "PMS.Thruster2_CB control" as Connection3409
        connect Goto11 "PMS.Thruster3_CB control" as Connection3410
        connect Goto12 "PMS.Trafo1_CB control" as Connection3411
        connect Goto13 "PMS.Trafo2_CB control" as Connection3412
        connect Goto14 "PMS.Trafo3_CB control" as Connection3413
        connect Goto15 "PMS.EMS_MS_440V_CB control" as Connection3414
        connect Goto16 "PMS.EMS_MS_230V_CB control" as Connection3415
        connect Goto17 "PMS.MS_230V_CB control" as Connection3416
        connect Goto18 "PMS.Fans_CB control" as Connection3417
        connect Goto2 "PMS.DG2 control" as Connection2927
        connect Goto22 "Thruster Breaker 3.Out" as Connection3901
        connect Goto25 "PMS.Thstr1 Control" as Connection3428
        connect Goto26 "PMS.Thstr2 Control" as Connection3427
        connect Goto27 "PMS.Thstr3 Control" as Connection3426
        connect Goto3 "PMS.Bus CB control" as Connection2928
        connect Goto30 "PMS.Propulsion_CB control" as Connection3494
        connect Goto4 "Bus Breaker.Outputs" as Connection3671
        connect Goto7 Diesel_Gen1.Outputs as Connection3611
        connect Goto8 Diesel_Gen2.Outputs as Connection3625
        connect Goto9 "PMS.Thruster1_CB control" as Connection3408
        connect Irms_GEN1.n_node Junction1792 as Connection4053
        connect Irms_GEN2.n_node Junction1622 as Connection3363
        connect Junction1624 Junction1733 as Connection3630
        connect Junction1624 Junction1776 as Connection3897
        connect Junction1637 Junction1622 as Connection3072
        connect Junction1638 Junction1732 as Connection3627
        connect Junction1640 Junction1637 as Connection3087
        connect Junction1641 Junction1638 as Connection3090
        connect Junction1647 Junction1747 as Connection3744
        connect Junction1648 Junction1746 as Connection3741
        connect Junction1671 Junction1744 as Connection3729
        connect Junction1672 Junction1745 as Connection3732
        connect Junction1680 Junction1752 as Connection3767
        connect Junction1681 Junction1756 as Connection3782
        connect Junction1683 Junction1761 as Connection3798
        connect Junction1684 Junction1759 as Connection3791
        connect Junction1684 Lights3.B as Connection3338
        connect Junction1685 Lights3.C as Connection3341
        connect Junction1733 Junction1642 as Connection3631
        connect Junction1737 Junction1774 as Connection3891
        connect Junction1738 Junction1775 as Connection3894
        connect Junction1738 cpl5.B1 as Connection3665
        connect Junction1739 cpl5.C1 as Connection3668
        connect Junction1743 Junction1670 as Connection3727
        connect Junction1744 "Measurement Cubicle EMS 440V.B" as Connection3730
        connect Junction1745 "Measurement Cubicle EMS 440V.C" as Connection3733
        connect Junction1746 "AUX Load 1.A" as Connection3742
        connect Junction1747 "AUX Load 1.B" as Connection3745
        connect Junction1748 Junction1646 as Connection3748
        connect Junction1752 Junction1753 as Connection3773
        connect Junction1753 "MS 230V Breaker.A2" as Connection3774
        connect Junction1754 "MS 230V Breaker.B2" as Connection3777
        connect Junction1755 Junction1757 as Connection3785
        connect Junction1756 Junction1754 as Connection3783
        connect Junction1757 Junction1682 as Connection3786
        connect Junction1759 "Measurement Cubicle EMS 230V.B" as Connection3792
        connect Junction1760 Junction1685 as Connection3795
        connect Junction1761 "EMS-MS 230V Breaker.A2" as Connection3799
        connect Junction1771 Junction1798 as Connection4080
        connect Junction1772 Junction1805 as Connection4124
        connect Junction1773 Junction1800 as Connection4086
        connect Junction1773 Junction1806 as Connection4127
        connect Junction1774 Junction1622 as Connection3892
        connect Junction1775 Junction1732 as Connection3895
        connect Junction1776 Junction1739 as Connection3898
        connect Junction1780 Junction1808 as Connection4136
        [
            breakpoints = 5424, 6504
        ]
        connect Junction1780 "Measurement Cubicle MS 440V A.B" as Connection4036
        connect Junction1781 Junction1809 as Connection4139
        [
            breakpoints = 5440, 6520
        ]
        connect Junction1782 Junction1807 as Connection4133
        [
            breakpoints = 5408, 6488; 5640, 6488
        ]
        connect Junction1792 Junction1801 as Connection4104
        connect Junction1792 Junction1804 as Connection4121
        connect Junction1798 cpl6.a as Connection4081
        connect Junction1799 Junction1772 as Connection4084
        connect Junction1800 cpl6.c as Connection4087
        connect Junction1801 cpl4.A1 as Connection4105
        connect Junction1802 Junction1793 as Connection4108
        connect Junction1803 Junction1794 as Connection4111
        connect Junction1804 Junction1771 as Connection4122
        connect Junction1805 Junction1793 as Connection4125
        connect Junction1806 Junction1794 as Connection4128
        connect Junction1807 cpl4.A2 as Connection4134
        connect Junction1808 cpl4.B2 as Connection4137
        [
            breakpoints = 5656, 6504
        ]
        connect Junction1809 cpl4.C2 as Connection4140
        [
            breakpoints = 5672, 6520
        ]
        connect Lights.A Junction1801 as Connection4106
        connect Lights.B Junction1802 as Connection4109
        connect Lights.C Junction1803 as Connection4112
        connect Lights1.C Junction1624 as Connection3010
        connect Lights1.A Junction1637 as Connection3071
        connect Lights1.B Junction1638 as Connection3074
        connect Lights2.A Junction1670 as Connection3218
        connect Lights2.B Junction1671 as Connection3221
        connect Lights2.C Junction1672 as Connection3224
        connect Lights3.A Junction1683 as Connection3334
        connect "MS 230V Breaker.A1" Junction1746 as Connection3743
        connect "MS 230V Breaker.B1" Junction1747 as Connection3746
        connect "MS 230V Breaker.C1" Junction1748 as Connection3749
        connect "MS 230V Breaker.C2" Junction1755 as Connection3779
        connect "Measurement Cubicle EMS 230V.C" Junction1760 as Connection3794
        connect "Measurement Cubicle EMS 230V.A" Junction1761 as Connection3800
        connect "Measurement Cubicle EMS 440V.A" Junction1743 as Connection3726
        connect "Measurement Cubicle MS 230V A.C" Junction1646 as Connection3104
        connect "Measurement Cubicle MS 230V A.B" Junction1647 as Connection3107
        connect "Measurement Cubicle MS 230V A.A" Junction1648 as Connection3110
        connect "Measurement Cubicle MS 230V B.A" Junction1680 as Connection3310
        connect "Measurement Cubicle MS 230V B.B" Junction1681 as Connection3313
        connect "Measurement Cubicle MS 230V B.C" Junction1682 as Connection3316
        connect "Measurement Cubicle MS 440V A.C" Junction1781 as Connection4035
        connect "Measurement Cubicle MS 440V A.A" Junction1782 as Connection4037
        connect "Measurement Cubicle MS 440V B.A" Junction1640 as Connection3086
        connect "Measurement Cubicle MS 440V B.B" Junction1641 as Connection3089
        connect "Measurement Cubicle MS 440V B.C" Junction1642 as Connection3092
        connect PWR_Fans_Pumps.out Fans_Pumps.ctrl as Connection56
        connect "Propulsion Breaker.B2" Propulsion.B as Connection3881
        connect "Propulsion Breaker.A2" Propulsion.A as Connection3882
        connect "Propulsion Breaker.C2" Propulsion.C as Connection3883
        connect "Propulsion Breaker.Out" Propulsion.CB_status as Connection3884
        connect "RL Section1.P4" "EMS-MS 440V Breaker.B2" as Connection3714
        connect "RL Section1.P1" Junction1743 as Connection3728
        connect "RL Section1.P3" Junction1744 as Connection3731
        connect "RL Section1.P5" Junction1745 as Connection3734
        connect "RL Section2.P1" "Transformer Breaker 2.A1" as Connection4071
        connect "RL Section2.P5" "Transformer Breaker 2.C1" as Connection4073
        connect "RL Section2.P4" cpl2.B2 as Connection4078
        connect "RL Section3.P2" Junction1640 as Connection3282
        connect "RL Section3.P4" Junction1641 as Connection3280
        connect "RL Section3.P6" Junction1642 as Connection3278
        connect "RL Section3.P1" "Transformer Breaker 1.A1" as Connection3804
        connect "RL Section3.P5" "Transformer Breaker 1.C1" as Connection3806
        connect "RL Section4.P2" Junction1670 as Connection3288
        connect "RL Section4.P4" Junction1671 as Connection3286
        connect "RL Section4.P6" Junction1672 as Connection3284
        connect "RL Section4.P3" "Transformer Breaker 3.B1" as Connection3721
        connect "Thruster Breaker 1.A2" "Bow Thruster 1.A" as Connection4116
        connect "Thruster Breaker 1.B2" "Bow Thruster 1.B" as Connection4117
        connect "Thruster Breaker 1.C2" "Bow Thruster 1.C" as Connection4118
        connect "Thruster Breaker 1.Inputs" From10 as Connection4120
        connect "Thruster Breaker 1.Out" Goto20 as Connection4119
        connect "Thruster Breaker 1.A1" Junction1804 as Connection4123
        connect "Thruster Breaker 1.B1" Junction1805 as Connection4126
        connect "Thruster Breaker 1.C1" Junction1806 as Connection4129
        connect "Thruster Breaker 2.B2" "AFT Thruster.B" as Connection3860
        connect "Thruster Breaker 2.A2" "AFT Thruster.A" as Connection3861
        connect "Thruster Breaker 2.C2" "AFT Thruster.C" as Connection3862
        connect "Thruster Breaker 2.Inputs" From11 as Connection3864
        connect "Thruster Breaker 2.Out" Goto21 as Connection3863
        connect "Thruster Breaker 2.A1" Junction1771 as Connection3867
        connect "Thruster Breaker 2.B1" Junction1772 as Connection3870
        connect "Thruster Breaker 2.C1" Junction1773 as Connection3873
        connect "Thruster Breaker 3.B2" "Bow Thruster 2.B" as Connection3888
        connect "Thruster Breaker 3.A2" "Bow Thruster 2.A" as Connection3889
        connect "Thruster Breaker 3.C2" "Bow Thruster 2.C" as Connection3890
        connect "Thruster Breaker 3.A1" Junction1774 as Connection3893
        connect "Thruster Breaker 3.B1" Junction1775 as Connection3896
        connect "Thruster Breaker 3.C1" Junction1776 as Connection3899
        connect Tr1.sec_1 Junction1680 as Connection3312
        [
            breakpoints = 9392, 7016; 9872, 7016
        ]
        connect Tr1.sec_2 Junction1681 as Connection3315
        connect Tr1.sec_3 Junction1682 as Connection3318
        [
            breakpoints = 9392, 7048; 9840, 7048
        ]
        connect Tr2.sec_3 Junction1646 as Connection3106
        [
            breakpoints = 8800, 7448; 8936, 7448
        ]
        connect Tr2.sec_2 Junction1647 as Connection3109
        connect Tr2.sec_1 Junction1648 as Connection3112
        [
            breakpoints = 8800, 7416; 8968, 7416
        ]
        connect Tr2.prm_2 "Transformer Breaker 2.B2" as Connection3707
        connect Tr3.sec_3 cpl1.C2 as Connection3342
        connect Tr3.sec_2 cpl1.B2 as Connection3344
        connect Tr3.sec_1 cpl1.A2 as Connection3346
        connect "Transformer Breaker 1.B1" "RL Section3.P3" as Connection3805
        connect "Transformer Breaker 1.A2" cpl3.A1 as Connection3801
        connect "Transformer Breaker 1.C2" cpl3.C1 as Connection3803
        connect "Transformer Breaker 2.B1" "RL Section2.P3" as Connection4072
        connect "Transformer Breaker 2.A2" Tr2.prm_1 as Connection3706
        connect "Transformer Breaker 2.C2" Tr2.prm_3 as Connection3708
        connect "Transformer Breaker 3.A1" "RL Section4.P1" as Connection3720
        connect "Transformer Breaker 3.C1" "RL Section4.P5" as Connection3722
        connect "Transformer Breaker 3.B2" Tr3.prm_2 as Connection3716
        connect "Transformer Breaker 3.A2" Tr3.prm_1 as Connection3717
        connect "Transformer Breaker 3.C2" Tr3.prm_3 as Connection3718
        connect cpl1.A1 Junction1683 as Connection3347
        connect cpl1.B1 Junction1684 as Connection3345
        connect cpl1.C1 Junction1685 as Connection3343
        connect cpl2.A1 Junction1798 as Connection4082
        connect cpl2.B1 Junction1799 as Connection4085
        connect cpl2.C1 Junction1800 as Connection4088
        connect cpl2.A2 "RL Section2.P2" as Connection4077
        connect cpl2.C2 "RL Section2.P6" as Connection4079
        connect cpl3.C2 Tr1.prm_3 as Connection3320
        connect cpl3.A2 Tr1.prm_1 as Connection3322
        connect cpl3.B2 Tr1.prm_2 as Connection3324
        connect cpl3.B1 "Transformer Breaker 1.B2" as Connection3802
        connect cpl4.B1 Junction1802 as Connection4107
        connect cpl4.C1 Junction1803 as Connection4110
        connect cpl5.A1 Junction1737 as Connection3661
        connect cpl5.A2 "Propulsion Breaker.A1" as Connection3874
        connect cpl5.B2 "Propulsion Breaker.B1" as Connection3875
        connect cpl5.C2 "Propulsion Breaker.C1" as Connection3876
        connect cpl6.A "Bus Breaker.A" as Connection4005
        connect cpl6.C "Bus Breaker.C" as Connection4007
        connect cpl6.b Junction1799 as Connection4083
    }

    default {
        gen_abc2alpha_beta {
            power_form = "variant - Clarke\'s original"
            execution_rate = "inherit"
        }

        gen_abs {
            execution_rate = "inherit"
        }

        gen_alpha_beta2abc {
            power_form = "variant - Clarke\'s original"
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_rate_limiter {
            rising_limit = "1"
            falling_limit = "-1"
            execution_rate = "inherit"
        }

        gen_rel_op {
            relational_op = "=="
            execution_rate = "inherit"
        }

        gen_sr_ff {
            init_value = "0"
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_z_domain_transfer {
            domain = "Z-domain"
            method = "Zero-order hold"
            b_coeff = "[1,1]"
            a_coeff = "[1,1]"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        sys_mp_signal_switch {
            number_of_input_terminals = "2"
            execution_rate = "inherit"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        "core/Counter" {
            ext_reset = "level"
            init_val = "0"
            state_type = "real"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Current RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }

        "core/Diesel Genset" {
            Sb = "2.2e6"
            Vn = "480.0"
            f = "60.0"
            load = "5"
            Ts = "200e-6"
            Rs = "9.4035e-4"
            Lls = "1.389e-5"
            Lmd = "6.5282e-4"
            Lmq = "4.778e-4"
            Rf_prime = "2.1574e-4"
            Llfd_prime = "1.4195e-4"
            Rkd = "0.0443938909091"
            Rkq = "0.00399796363636"
            Llkd = "0.00155586168397"
            Llkq = "9.96738215238e-05"
            Ns_Nfd = "0.02512"
            Ns_Nkd = "1.0"
            Ns_Nkq = "1.0"
            pms = "2.0"
            J = "42.9467"
            F = "0.572003113298"
            T1 = "1.0e-4"
            T2 = "1e-6"
            T3 = "0.5001"
            K = "10.0"
            T4 = "25.0e-3"
            T5 = "9.0e-4"
            T6 = "5.74e-3"
            Pm0 = "0.0"
            Tmax = "10"
            Tmin = "-10"
            Td = "24.0e-3"
            Tr = "2.0e-6"
            exc_Kp = "0.025"
            exc_Ki = "0.007"
            Ka = "1.0"
            Ta = "2.0e-3"
            Vrmax = "10.0"
            Vrmin = "-10.0"
            Te = "1.0e-8"
            Ke = "1.0"
            Kf = "0.01"
            Tf = "2.0e-6"
            Vt0 = "0.0"
            Vf0 = "0.0"
            Efmax = "[\'inf\']"
            Efmin = "[\'-inf\']"
            delta_f = "0.5"
            delta_phi = "1.0"
            phase_Kp = "0.01"
            phase_Ki = "0.00012"
            phase_upLim = "0.1"
            phase_lowLim = "-0.1"
            phaseOff = "0"
            dw_K = "1.0"
            V_Kp = "0.0071"
            V_Ki = "0.0354"
            V_upLim = "1"
            V_lowLim = "-1"
            delta_V = "1.0"
            w_sp_Kp = "0.01"
            w_sp_Ki = "0.01"
            w_sp_upLim = "10"
            w_sp_lowLim = "-10"
            P_droop = "2.7"
            P_rise = "10"
            P_fall = "-10"
            w_droop = "0.1"
            w_rise = "10"
            w_fall = "-10"
            gov_Kp = "0.5"
            delta_wn = "0.1"
            inner_w_droop = "0.1"
            inner_w_rise = "10"
            inner_w_fall = "-10"
            pf_Kp = "0.05"
            pf_Ki = "0.075"
            pf_upLim = "10"
            pf_lowLim = "-10"
            pf_rise = "10"
            pf_fall = "-10"
            exc_dwn = "75"
            V_rise = "10"
            V_fall = "-10"
            V_inner_droop = "0.1"
        }

        "core/RL Section" {
            model_def = "R-L"
            unit_sys = "imperial"
            num_of_phases = "3"
            resistance_per_l = "1"
            resistance_per_l_mile = "1"
            inductance_per_l = "1e-3"
            inductance_per_l_mile = "1e-3"
            length = "1.0"
            length_mile = "1.0"
            power = "500.0"
            voltage = "11.0"
            frequency = "50.0"
            R_value = "21.55"
            L_value = "0.00842"
            embedded_coupling = "False"
            ratio_type = "Automatic"
            ratio = "0.1"
        }

        "core/Rate Transition" {
            init_value = "0.0"
            execution_rate = "100e-6"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Single Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
            switching = "any current"
        }

        "core/Three Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100e3"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
            cpl_connection = "star"
        }

        "core/Three Phase Diode Rectifier" {
            show_monitoring = "false"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            core_sat = "False"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            ioc1 = "0.7"
            Poc1 = "460.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[1910.3, 2419.7]"
            current_vals_SI = "[0.66653, 277.72]"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[1.2, 1.52]"
            current_vals_pu = "[0.0024, 1]"
            flux_vals_SCOC = "[1.2, 1.52]"
            current_vals_SCOC = "[0.0024, 1]"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "false"
            coupling_type = "core"
            Rshunt = "inf"
        }

        "core/Triple Pole Double Throw Contactor" {
            ctrl_src = "Digital input"
            Sabc = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "S1"
            S1_to_S2_delay = "0"
            S2_to_S1_delay = "0"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Variable Inductor" {
            initial_flux = "0.0"
            enb_resistance = "True"
            resistance = "100.0"
        }

        "core/Variable Resistor" {
            inductance = "1e-3"
            initial_current = "0.0"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Voltage RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }

        "core/abc to dq" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "True"
            initial_filter_output = "0"
            wn_LPFdq = "1000"
            execution_rate = "inherit"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Ts = 300e-6
    ENDCODE
}
